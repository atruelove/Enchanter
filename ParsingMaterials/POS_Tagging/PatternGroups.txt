let Patterns
VB NNP VB . NNP ( NNP ) .
VB NNP VB NNP . VB JJ NNP NNP NNP .
VB NNP VB . NNP ( NNP , NNP ) .
VB NNP VB DT DT NN .
VB NNP VB CD .
VB NNP VB NNP ( NNP ) .
VB NNP VB . JJ ( DT NN ) .
VB NNP VB NNP .
VB NNP VB . NNP ( . NNP ( NNP , `` NN '' ) ) .
VB NNP VB . NNP ( DT NN ) .
VB NNP VB DT JJ JJ NN .
VB NNP VB DT JJ NN NN .
VB NNP VB DT NN IN NNP .

multiStepIf
IN NNP VBZ JJ , RB
IN NNP ( NNP ) VBZ JJ , RB
IN NNP VBZ RB JJ , RB
IN NNP VBZ VBN , RB


throw Exception
IN NNP ( NNP ) VBZ RB JJ , VB DT NN NN .
IN NNP ( NNP ) VBZ JJ , VB DT NN NN .
IN NNP VBZ JJ , VB DT NN NN .
IN NNP VBZ RB VB DT JJ NN NNP NNP NNP JJ NN , VB DT NN NN .

if Result
IN NNP VBZ JJ , NN JJ .
IN NNP VBZ JJ , VB NNS .
IN NNP ( NNP ) VBZ RB JJ , NN JJ .
IN NNP VBZ JJ , JJ NNP .
IN NNP VBZ DT NNP NN , VB . JJ ( NNP , NNP ) .

if..let...else..let
IN NNP VBZ RB JJ , VB NNP VB JJ ( NNP ) : RB , VB NNP VB . NNP ( NNP ) .
IN NNP CC NN : CD , VB NNP VB VBN ( ( NNP NNP NNP ) , CD ) : JJ VB NNP VB VBN ( NNP , NNP ) .
IN NNP VBZ JJ , VB NNP VB NNP : JJ VB NNP VB . NNP ( NNP ) .

foreach

repeat