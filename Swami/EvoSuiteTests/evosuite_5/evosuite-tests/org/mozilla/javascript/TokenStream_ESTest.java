/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 04:47:49 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.TokenStream;
import org.mozilla.javascript.ast.AstRoot;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenStream_ESTest extends TokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      tokenStream0.tokenToString(146);
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("!#piM(WZ|=", 67, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("!#iM(WZ|=", 67, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("HTmqz6C?vr[", "", (-3074));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("default", "", (-3074));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      AstRoot astRoot0 = parser0.parse("msg.missing.exponent", "msg.missing.exponent", 106);
      assertEquals(106, astRoot0.getEndLineno());
      assertEquals(20, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("&EdUf", 98, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("charAt");
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "charAt", 15);
      assertEquals(6, astRoot0.getLength());
      assertEquals(15, astRoot0.getEndLineno());
      assertTrue(parser0.eof());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "charAt", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (charAt#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      AstRoot astRoot0 = parser0.parse("super", "super", 122);
      assertEquals(5, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("await", 188, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("0N]QuB8VO", 832, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("await", 2517, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("goto", 1996, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      // Undeclared exception!
      try { 
        tokenStream0.readRegExp(486);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      tokenStream0.readAndClearRegExpFlags();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      tokenStream0.isXMLAttribute();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = TokenStream.isJSSpace(1255);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "UqAGGAjl4t7~iJ@!Mb", (-1588));
      int int0 = tokenStream0.getTokenLength();
      assertEquals(0, int0);
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("Kb");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, (-3787));
      int int0 = tokenStream0.getTokenEnd();
      assertEquals(0, int0);
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parser parser0 = new Parser();
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "mF", 65536);
      int int0 = tokenStream0.getTokenBeg();
      assertEquals(0, tokenStream0.getCursor());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader(";M~[slLFq");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "charAt", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (charAt#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("R, BDW", "", (-3074));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.mi(sing.exponenB", "msg.mi(sing.exponenB", 106);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (msg.mi(sing.exponenB#106)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      AstRoot astRoot0 = parser0.parse("_D)A<{voX", "", 65536);
      assertEquals(9, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("Hmqz6b?vr[", "lJ>sBI", 65536);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (lJ>sBI#65536)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("D&W;bL0.6~X7");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "charAt", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (charAt#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "switch", (-1937));
      int int0 = tokenStream0.getToken();
      assertEquals(5, tokenStream0.getCursor());
      assertEquals(115, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parser parser0 = new Parser();
      AstRoot astRoot0 = parser0.parse("public", "public", 4094);
      assertEquals(4094, astRoot0.getEndLineno());
      assertEquals(6, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      tokenStream0.getSourceString();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      char char0 = tokenStream0.getQuoteChar();
      assertEquals(0, tokenStream0.getCursor());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      parser0.parse("H'mqz6C?vr[", "H'mqz6C?vr[", 65536);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "+$)", (-3446));
      int int0 = tokenStream0.getFirstXMLToken();
      assertEquals(4, tokenStream0.getTokenLength());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      int int0 = tokenStream0.getNextXMLToken();
      assertEquals(1, tokenStream0.getTokenLength());
      assertEquals(146, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "language version", 13);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HhguPDUE`\":E&");
      TokenStream tokenStream0 = new TokenStream((Parser) null, stringReader0, (String) null, 125);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.TokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      int int0 = tokenStream0.getFirstXMLToken();
      assertEquals((-1), tokenStream0.getTokenBeg());
      assertEquals(146, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      AstRoot astRoot0 = parser0.parse(":%DS'hmJmGDM]O@", "", 65536);
      assertEquals(4, astRoot0.getLength());
      assertEquals(65536, astRoot0.getLineno());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(* @z^mg]x2 > ~:q(");
      TokenStream tokenStream0 = new TokenStream((Parser) null, stringReader0, (String) null, 0);
      int int0 = tokenStream0.getCursor();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Parser parser0 = new Parser();
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "FuM", 65536);
      tokenStream0.getCommentType();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("publi=", "publi=", 4098);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (publi=#4098)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "const", 104);
      String string0 = tokenStream0.getAndResetCurrentComment();
      assertEquals(0, tokenStream0.getCursor());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HhguPDUE`\":E&");
      TokenStream tokenStream0 = new TokenStream((Parser) null, stringReader0, (String) null, 125);
      // Undeclared exception!
      try { 
        tokenStream0.getAndResetCurrentComment();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      boolean boolean0 = tokenStream0.eof();
      assertEquals(0, tokenStream0.getCursor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      String string0 = tokenStream0.getLine();
      assertEquals("L{]Flq5W%Mrvv", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      stringReader0.close();
      String string0 = tokenStream0.getLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("L{]Flq5W%Mrvv");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 97);
      tokenStream0.sourceCursor = (-889275714);
      // Undeclared exception!
      try { 
        tokenStream0.getLine();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HhgMuPDUE`\":E&");
      TokenStream tokenStream0 = new TokenStream((Parser) null, stringReader0, (String) null, 125);
      tokenStream0.sourceCursor = 125;
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 512
         //
         verifyException("org.mozilla.javascript.TokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("D&5bL0.6UX7");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "charAt", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (charAt#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("9ss^?B>b-&2|Ukb", "", (-3074));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }
}
