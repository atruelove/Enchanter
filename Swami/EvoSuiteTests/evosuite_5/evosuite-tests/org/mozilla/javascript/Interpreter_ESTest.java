/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:43:34 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-27), "iterator", "iterator", false);
      interpreterData0.encodedSource = null;
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = Context.enter();
      context0.initSafeStandardObjects();
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(61);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, ">FaiA!z1HSsT5d[AVoo", ">FaiA!z1HSsT5d[AVoo", false);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvaluatorException evaluatorException0 = null;
      try {
        evaluatorException0 = new EvaluatorException("Interpreter frames not found", "Interpreter frames not found", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(120, "error reporter", "error reporter", true);
  }
}
