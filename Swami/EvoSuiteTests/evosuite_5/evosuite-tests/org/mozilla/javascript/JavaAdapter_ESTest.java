/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 00:44:40 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.BoundFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.FieldAndMethods;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.JavaAdapter;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeJavaPackage;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.ObjToIntMap;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaAdapter_ESTest extends JavaAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<ArrowFunction> class0 = ArrowFunction.class;
      Class<NativeJavaPackage>[] classArray0 = (Class<NativeJavaPackage>[]) Array.newInstance(Class.class, 8);
      Class<NativeJavaPackage> class1 = NativeJavaPackage.class;
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, classArray0, objToIntMap0);
      boolean boolean0 = javaAdapter_JavaAdapterSignature0.equals(class1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("IoZlkh?PGw>O/;g7", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      try { 
        JavaAdapter.writeAdapterObject(javaAdapter0, objectOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(0);
      // Undeclared exception!
      try { 
        JavaAdapter.readAdapterObject(nativeFloat64Array0, (ObjectInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter((Context) null, (Scriptable) null, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Argument 0 is not Java class: null.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(192);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeInt16Array0, nativeInt16Array0, 103, "", 88, nativeInt16Array0);
      Function function0 = JavaAdapter.getFunction(idFunctionObjectES6_0, "");
      assertNull(function0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 2, 10);
      NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage("n^0<iP92", nativeFloat32Array0);
      // Undeclared exception!
      try { 
        JavaAdapter.getFunction(nativeJavaPackage0, "Uorz");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000018 is not a function, it is object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<NativeJavaMethod>[] classArray0 = (Class<NativeJavaMethod>[]) Array.newInstance(Class.class, 0);
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<NativeString>[] classArray0 = (Class<NativeString>[]) Array.newInstance(Class.class, 7);
      Class<NativeString> class0 = NativeString.class;
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      classArray0[3] = classArray0[2];
      classArray0[4] = classArray0[3];
      classArray0[5] = class0;
      classArray0[6] = classArray0[1];
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertArrayEquals(new int[] {0, 1, 2, 3, 4, 5, 6}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      try { 
        JavaAdapter.getAdapterSelf(class0, class0);
        fail("Expecting exception: NoSuchFieldException");
      
      } catch(NoSuchFieldException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object[] objectArray0 = new Object[15];
      objectArray0[0] = (Object) nativeIterator_StopIteration0;
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter((Context) null, nativeIterator_StopIteration0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeBoolean> class0 = NativeBoolean.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 13);
      Class<Integer> class1 = Integer.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Lorg/mozilla/javascript/Function;", class0, classArray0, "]NWLm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(28);
      Class<NativeIterator> class0 = NativeIterator.class;
      Class<InputStream>[] classArray0 = (Class<InputStream>[]) Array.newInstance(Class.class, 6);
      Class<InputStream> class1 = InputStream.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "wHv>C4^(S+\"T{d4RJh", class0, classArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeArray> class0 = NativeArray.class;
      Class<Method>[] classArray0 = (Class<Method>[]) Array.newInstance(Class.class, 2);
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "", class0, classArray0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(javaAdapter0, (Object) null, 234, 234);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        javaAdapter0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=234 MASTER=org.mozilla.javascript.JavaAdapter@1
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterWrapper(nativeArrayBuffer0, nativeArrayBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(74);
      objToIntMap0.put((Object) null, 74);
      Class<BoundFunction> class0 = BoundFunction.class;
      Class<BoundFunction>[] classArray0 = (Class<BoundFunction>[]) Array.newInstance(Class.class, 3);
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "JavaAdapter", class0, classArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(74);
      Class<BoundFunction> class0 = BoundFunction.class;
      Class<BoundFunction>[] classArray0 = (Class<BoundFunction>[]) Array.newInstance(Class.class, 3);
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      byte[] byteArray0 = JavaAdapter.createAdapterCode(objToIntMap0, "JavaAdapter", class0, classArray0, (String) null);
      assertEquals(2006, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<FieldAndMethods> class0 = FieldAndMethods.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 9);
      Class<String> class1 = String.class;
      classArray0[0] = class1;
      // Undeclared exception!
      JavaAdapter.createAdapterCode(objToIntMap0, "+ed57UnC`2zB_", class0, classArray0, "!i,k~P3{woXQFis");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode((ObjToIntMap) null, "a!ALG5^", class0, (Class<?>[]) null, "error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<ArrowFunction> class0 = ArrowFunction.class;
      Class<NativeJavaPackage>[] classArray0 = (Class<NativeJavaPackage>[]) Array.newInstance(Class.class, 8);
      Class<NativeJavaPackage> class1 = NativeJavaPackage.class;
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, classArray0, objToIntMap0);
      // Undeclared exception!
      try { 
        JavaAdapter.convertResult(javaAdapter_JavaAdapterSignature0, class1);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert org.mozilla.javascript.JavaAdapter$JavaAdapterSignature@94446f04 to org.mozilla.javascript.NativeJavaPackage
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, nativeFloat64Array0, nativeContinuation0, objectArray0, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Context context0 = Context.enter();
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, (Object) null, 64, 7);
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod((ContextFactory) null, (Scriptable) null, idFunctionObject0, context0.emptyArgs, 150);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=64 MASTER=org.mozilla.javascript.typedarrays.NativeInt16Array@0
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Object object0 = JavaAdapter.callMethod(contextFactory0, (Scriptable) null, (Function) null, objectArray0, (-2L));
      assertNull(object0);
  }
}
