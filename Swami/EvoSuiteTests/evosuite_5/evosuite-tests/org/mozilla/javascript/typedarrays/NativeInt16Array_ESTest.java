/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 22:59:50 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeInt16Array_ESTest extends NativeInt16Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      Short short0 = new Short((short)200);
      // Undeclared exception!
      try { 
        nativeInt16Array0.set(5, short0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 1, 4);
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint16Array0.construct(nativeArrayBuffer0, 1, 1);
      // Undeclared exception!
      try { 
        nativeInt16Array0.realThis(nativeTypedArrayView0, (IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      NativeTypedArrayView nativeTypedArrayView0 = nativeInt16Array0.realThis(nativeInt16Array0, (IdFunctionObject) null);
      assertEquals(0, nativeTypedArrayView0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      Short short0 = new Short((short)2645);
      Short short1 = nativeInt16Array0.set(0, short0);
      assertNull(short1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      Short short0 = new Short((short)74);
      Object object0 = nativeInt16Array0.js_set(1609, short0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      Object object0 = nativeInt16Array0.js_get(8);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      Context context0 = Context.enter();
      NativeInt16Array.init(context0, nativeInt16Array0, false);
      assertEquals(2, nativeInt16Array0.getBytesPerElement());
      assertEquals("Int16Array", nativeInt16Array0.getClassName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(3475);
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(nativeArrayBuffer0, 0, 3475);
      Short short0 = nativeInt16Array0.get(5);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeTypedArrayView nativeTypedArrayView0 = nativeInt16Array0.construct(nativeArrayBuffer0, 4201, 8);
      assertEquals(8, nativeTypedArrayView0.size());
      assertEquals(4201, nativeTypedArrayView0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      // Undeclared exception!
      try { 
        nativeInt16Array0.get(1609);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt16Array", e);
      }
  }
}
