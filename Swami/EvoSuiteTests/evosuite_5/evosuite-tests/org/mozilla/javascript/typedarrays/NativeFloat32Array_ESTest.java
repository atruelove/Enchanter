/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 22:59:32 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeFloat32Array_ESTest extends NativeFloat32Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        nativeFloat32Array0.realThis(nativeContinuation0, (IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(2946);
      Float float0 = new Float((-976.952921626243));
      Object object0 = nativeFloat32Array0.js_set(0, float0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 8, 8);
      Float float0 = new Float(1579.7F);
      // Undeclared exception!
      try { 
        nativeFloat32Array0.set(0, float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.mozilla.javascript.typedarrays.ByteIo", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(0);
      Float float0 = new Float((float) 0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeFloat32Array0, float0, 2, 8);
      NativeTypedArrayView nativeTypedArrayView0 = nativeFloat32Array0.realThis(nativeFloat32Array0, idFunctionObject0);
      nativeFloat32Array0.put(0, (Scriptable) nativeTypedArrayView0, (Object) nativeFloat32Array0);
      assertEquals(4, nativeFloat32Array0.getBytesPerElement());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 1, 0);
      Object object0 = nativeFloat32Array0.js_get(4);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      // Undeclared exception!
      try { 
        NativeFloat32Array.init(context0, nativeInt8Array0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(142);
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 1, 142);
      Float float0 = nativeFloat32Array0.get(8);
      // Undeclared exception!
      try { 
        nativeFloat32Array0.set(142, float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeFloat32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(0);
      // Undeclared exception!
      try { 
        nativeFloat32Array0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeFloat32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(0);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeTypedArrayView nativeTypedArrayView0 = nativeFloat32Array0.construct(nativeArrayBuffer0, 0, 4);
      assertEquals(4, nativeTypedArrayView0.size());
      assertEquals(0, nativeTypedArrayView0.getByteOffset());
  }
}
