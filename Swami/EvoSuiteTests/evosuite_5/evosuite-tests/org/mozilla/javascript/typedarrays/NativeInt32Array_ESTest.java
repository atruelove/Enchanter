/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 23:12:13 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeInt32Array_ESTest extends NativeInt32Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(173);
      // Undeclared exception!
      try { 
        nativeInt32Array0.set(4207, (Integer) nativeInt32Array0.READONLY);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(173);
      Integer integer0 = nativeInt32Array0.set(5, (Integer) nativeInt32Array0.DONTENUM);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(2137);
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        nativeInt32Array0.realThis(nativeArrayBuffer0, (IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Object object0 = nativeInt32Array0.js_set(0, nativeInt32Array0.PERMANENT);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      // Undeclared exception!
      try { 
        nativeInt32Array0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(2137);
      Integer integer0 = nativeInt32Array0.get(1517);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(100);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint8Array0.construct(nativeArrayBuffer0, 150, 8);
      NativeInt32Array.init(context0, nativeTypedArrayView0, true);
      assertEquals(8, Context.FEATURE_STRICT_VARS);
  }
}
