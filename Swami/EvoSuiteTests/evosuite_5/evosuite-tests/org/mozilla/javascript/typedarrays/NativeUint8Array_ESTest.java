/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 23:13:02 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeUint8Array_ESTest extends NativeUint8Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      // Undeclared exception!
      try { 
        nativeUint8Array0.set(1, (Integer) nativeUint8Array0.READONLY);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(nativeArrayBuffer0, 2, 1);
      // Undeclared exception!
      try { 
        nativeUint8Array0.set(0, (Integer) 13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.mozilla.javascript.typedarrays.ByteIo", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(0);
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint16Array0.construct(nativeArrayBuffer0, 1, 2);
      Float float0 = new Float(0.0);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint8Array0, float0, 50, "gPzHx4.6'9+N", 1, nativeUint8Array0);
      // Undeclared exception!
      try { 
        nativeUint8Array0.realThis(nativeTypedArrayView0, idFunctionObjectES6_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"gPzHx4.6'9+N\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(19);
      Object object0 = nativeUint8Array0.js_set(19, (Object) null);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(69);
      String string0 = nativeUint8Array0.getClassName();
      assertEquals("Uint8Array", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(69);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      nativeUint8Array0.replaceAll(unaryOperator0);
      assertEquals(0, nativeUint8Array0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(19);
      // Undeclared exception!
      try { 
        nativeUint8Array0.get(38);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint8Array", e);
      }
  }
}
