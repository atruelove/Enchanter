/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 01:48:06 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.BoundFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IdFunctionObject_ESTest extends IdFunctionObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, (Object) null, 0, "U", 0, nativeIterator_StopIteration0);
      Object object0 = idFunctionObject0.getTag();
      assertNull(object0);
      assertEquals(0, idFunctionObject0.getLength());
      assertEquals(0, idFunctionObject0.methodId());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(778);
      BaseFunction baseFunction0 = new BaseFunction(nativeArray0, nativeArray0);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6((IdFunctionCall) null, (Object) null, 0, "H\"]25C8", 778, baseFunction0);
      ScriptableObject.getProperty((Scriptable) idFunctionObjectES6_0, 1);
      assertEquals(0, idFunctionObjectES6_0.methodId());
      assertEquals(778, idFunctionObjectES6_0.getLength());
      assertEquals(778, idFunctionObjectES6_0.getArity());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      BaseFunction baseFunction0 = new BaseFunction();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint8Array0, baseFunction0, 1, 0);
      // Undeclared exception!
      try { 
        ScriptableObject.deleteProperty((Scriptable) idFunctionObject0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeFloat64Array0, false);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeFloat64Array0, nativeGenerator0, 2068, "", 13, nativeFloat64Array0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      BoundFunction boundFunction0 = null;
      try {
        boundFunction0 = new BoundFunction(context0, nativeFloat64Array0, idFunctionObject0, nativeFloat64Array0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint8Array0, nativeUint8Array0, 13, "As=H$[", 2, nativeUint8Array0);
      Context context0 = Context.enter();
      String string0 = context0.decompileFunction(idFunctionObject0, 150);
      assertEquals(13, idFunctionObject0.methodId());
      assertEquals("function As=H$[() { [native code for Uint8Array.As=H$[, arity=2] }\n", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint8Array0, nativeUint8Array0, 13, "As=H$[", 2, nativeUint8Array0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        idFunctionObject0.createObject(context0, nativeUint8Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: \"As=H$[\" is not a constructor.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray();
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeUint8ClampedArray0, nativeUint8ClampedArray0);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeArrayIterator0, nativeArrayIterator0, 8, (String) null, 0, nativeArrayIterator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray();
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeUint8ClampedArray0, nativeUint8ClampedArray0, 13, (-1244));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
