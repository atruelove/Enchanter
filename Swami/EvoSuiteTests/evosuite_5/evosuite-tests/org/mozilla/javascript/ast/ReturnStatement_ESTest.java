/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 15:37:43 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ErrorNode;
import org.mozilla.javascript.ast.ReturnStatement;
import org.mozilla.javascript.ast.XmlElemRef;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReturnStatement_ESTest extends ReturnStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement();
      ErrorNode errorNode0 = new ErrorNode(22);
      returnStatement0.setReturnValue(errorNode0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      returnStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tRETURN -1 1\n22\t  ERROR 23 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("-1\tRETURN -1 1\n22\t  ERROR 23 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement();
      ErrorNode errorNode0 = new ErrorNode(22);
      returnStatement0.setReturnValue(errorNode0);
      assertEquals(1, errorNode0.depth());
      
      String string0 = returnStatement0.toSource(0);
      assertEquals("return ;\n", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef();
      ReturnStatement returnStatement0 = new ReturnStatement((-2566), (-2566), xmlElemRef0);
      assertEquals(2565, xmlElemRef0.getPosition());
      assertEquals("4", returnStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement((-699));
      assertEquals("4", returnStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement();
      returnStatement0.getReturnValue();
      assertEquals("4", returnStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement((-2077), (-2077));
      assertEquals(4, returnStatement0.getType());
  }
}
