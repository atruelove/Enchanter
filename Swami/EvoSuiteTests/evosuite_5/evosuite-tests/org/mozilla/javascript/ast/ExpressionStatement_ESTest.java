/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:01:58 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ExpressionStatement;
import org.mozilla.javascript.ast.InfixExpression;
import org.mozilla.javascript.ast.LetNode;
import org.mozilla.javascript.ast.RegExpLiteral;
import org.mozilla.javascript.ast.XmlString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExpressionStatement_ESTest extends ExpressionStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegExpLiteral regExpLiteral0 = new RegExpLiteral(0, 0);
      ExpressionStatement expressionStatement0 = new ExpressionStatement((-2316), 939, regExpLiteral0);
      String string0 = expressionStatement0.toSource(750);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) string0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      expressionStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LetNode letNode0 = new LetNode(0);
      ExpressionStatement expressionStatement0 = new ExpressionStatement(letNode0);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        expressionStatement0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.LetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlString xmlString0 = new XmlString(136);
      ExpressionStatement expressionStatement0 = new ExpressionStatement(xmlString0);
      boolean boolean0 = expressionStatement0.hasSideEffects();
      assertFalse(boolean0);
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlString xmlString0 = new XmlString(136);
      ExpressionStatement expressionStatement0 = new ExpressionStatement(xmlString0);
      AstNode astNode0 = expressionStatement0.getExpression();
      assertNotNull(astNode0);
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InfixExpression infixExpression0 = new InfixExpression();
      ExpressionStatement expressionStatement0 = new ExpressionStatement(infixExpression0, true);
      assertEquals("135", expressionStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExpressionStatement expressionStatement0 = new ExpressionStatement((-2751), (-2751));
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExpressionStatement expressionStatement0 = new ExpressionStatement();
      assertEquals(134, expressionStatement0.getType());
  }
}
