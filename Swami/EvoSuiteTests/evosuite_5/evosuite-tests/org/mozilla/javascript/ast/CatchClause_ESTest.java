/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:02:28 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.CatchClause;
import org.mozilla.javascript.ast.Name;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CatchClause_ESTest extends CatchClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Name name0 = new Name(26);
      catchClause0.setVarName(name0);
      Block block0 = new Block(1, 24);
      catchClause0.setBody(block0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "              ");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      catchClause0.visit(astNode_DebugPrintVisitor0);
      assertEquals("              -1\tCATCH -1 1\n26\t  NAME 27 1 null\n1\t  BLOCK 2 24\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), catchClause0.getLp());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Name name0 = new Name(26);
      catchClause0.setVarName(name0);
      catchClause0.setCatchCondition(name0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "              ");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        catchClause0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.CatchClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Name name0 = new Name(26);
      catchClause0.setVarName(name0);
      Block block0 = new Block(630, 2);
      catchClause0.setBody(block0);
      String string0 = catchClause0.toSource(21);
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals("                                          catch (<null>) {\n}\n", string0);
      assertEquals((-1), catchClause0.getLp());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Name name0 = new Name(26);
      catchClause0.setVarName(name0);
      catchClause0.setCatchCondition(name0);
      // Undeclared exception!
      try { 
        catchClause0.toSource(21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.CatchClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      assertEquals((-1), catchClause0.getRp());
      
      catchClause0.setRp(1);
      assertEquals(1, catchClause0.getRp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-178));
      catchClause0.setParens((-1), (-1));
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), catchClause0.getLp());
      assertEquals(125, catchClause0.getType());
      assertEquals((-1), catchClause0.getRp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      catchClause0.setLp(1245);
      assertEquals(1245, catchClause0.getLp());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      assertEquals((-1), catchClause0.getIfPosition());
      
      catchClause0.setIfPosition(0);
      assertEquals(0, catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      catchClause0.getVarName();
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getLp());
      assertEquals(125, catchClause0.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-341), 125);
      int int0 = catchClause0.getRp();
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), int0);
      assertEquals((-1), catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      int int0 = catchClause0.getIfPosition();
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), int0);
      assertEquals((-1), catchClause0.getLp());
      assertEquals(125, catchClause0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause(111, 111);
      catchClause0.getBody();
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-1462), 144);
      int int0 = catchClause0.getLp();
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals(125, catchClause0.getType());
      assertEquals((-1), int0);
      assertEquals((-1), catchClause0.getRp());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      catchClause0.getCatchCondition();
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), catchClause0.getRp());
  }
}
