/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 16:52:21 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.BreakStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Block_ESTest extends Block_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = new Block(124);
      BreakStatement breakStatement0 = new BreakStatement((-432), 10);
      block0.addStatement(breakStatement0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "  {\n    break;\n  }\n");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      block0.visit(astNode_DebugPrintVisitor0);
      assertEquals("  {\n    break;\n  }\n124\tBLOCK 124 -546\n-432\t  BREAK -556 10\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("  {\n    break;\n  }\n124\tBLOCK 124 -546\n-432\t  BREAK -556 10\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Block block0 = new Block(124);
      String string0 = block0.toSource(1);
      assertEquals("  {\n  }\n", string0);
      assertEquals("130", block0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Block block0 = new Block(0, 0);
      assertEquals(130, block0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Block block0 = new Block(124);
      BreakStatement breakStatement0 = new BreakStatement((-432), 10);
      block0.addStatement(breakStatement0);
      String string0 = block0.toSource(1);
      assertEquals(130, block0.getType());
      assertEquals("  {\n    break;\n  }\n", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Block block0 = new Block();
      assertEquals(130, block0.getType());
  }
}
