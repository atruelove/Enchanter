/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 16:22:13 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.ArrayComprehension;
import org.mozilla.javascript.ast.ArrayComprehensionLoop;
import org.mozilla.javascript.ast.ArrayLiteral;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ObjectProperty;
import org.mozilla.javascript.ast.ReturnStatement;
import org.mozilla.javascript.ast.VariableInitializer;
import org.mozilla.javascript.ast.Yield;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayLiteral_ESTest extends ArrayLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      ReturnStatement returnStatement0 = new ReturnStatement(20, 1);
      Yield yield0 = new Yield(66, 1, returnStatement0);
      arrayLiteral0.addElement(yield0);
      StringBuilder stringBuilder0 = new StringBuilder(8);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      arrayLiteral0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tARRAYLIT -1 1\n66\t  YIELD 67 1\n20\t    RETURN -46 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("-1\tARRAYLIT -1 1\n66\t  YIELD 67 1\n20\t    RETURN -46 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1197);
      VariableInitializer variableInitializer0 = new VariableInitializer(7);
      arrayLiteral0.addElement(variableInitializer0);
      // Undeclared exception!
      try { 
        arrayLiteral0.toSource(61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.VariableInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1197);
      String string0 = arrayLiteral0.toSource(61);
      assertEquals("                                                                                                                          []", string0);
      assertEquals(66, arrayLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      arrayLiteral0.setSkipCount(4);
      assertEquals(4, arrayLiteral0.getSkipCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(0);
      arrayLiteral0.setIsDestructuring(false);
      assertFalse(arrayLiteral0.isDestructuring());
      assertEquals(66, arrayLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      LinkedList<AstNode> linkedList0 = new LinkedList<AstNode>();
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(23);
      linkedList0.add((AstNode) arrayComprehensionLoop0);
      arrayLiteral0.setElements(linkedList0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        arrayLiteral0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ArrayComprehensionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1167);
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(2, 1);
      List<AstNode> list0 = arrayComprehension0.getStatements();
      arrayLiteral0.addElement(arrayComprehension0);
      arrayLiteral0.setElements(list0);
      assertEquals(0, arrayLiteral0.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      arrayLiteral0.setElements((List<AstNode>) null);
      assertEquals(66, arrayLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral((-4417), (-4417));
      arrayLiteral0.isDestructuring();
      assertEquals("66", arrayLiteral0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      int int0 = arrayLiteral0.getSkipCount();
      assertEquals(0, int0);
      assertEquals("66", arrayLiteral0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      int int0 = arrayLiteral0.getSize();
      assertEquals("66", arrayLiteral0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1);
      // Undeclared exception!
      try { 
        arrayLiteral0.getElement(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no elements
         //
         verifyException("org.mozilla.javascript.ast.ArrayLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1617);
      int int0 = arrayLiteral0.getDestructuringLength();
      assertEquals(0, int0);
      assertEquals("66", arrayLiteral0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(0, 0);
      arrayLiteral0.setDestructuringLength((-328));
      assertEquals((-328), arrayLiteral0.getDestructuringLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(1);
      ObjectProperty objectProperty0 = new ObjectProperty(11, 2);
      arrayLiteral0.addElement(objectProperty0);
      AstNode astNode0 = arrayLiteral0.getElement(0);
      assertNotNull(astNode0);
      assertEquals(66, arrayLiteral0.getType());
  }
}
