/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:07:54 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.EmptyExpression;
import org.mozilla.javascript.ast.GeneratorExpressionLoop;
import org.mozilla.javascript.ast.Name;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratorExpressionLoop_ESTest extends GeneratorExpressionLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      Name name0 = new Name(2881, 899);
      generatorExpressionLoop0.setIteratedObject(name0);
      EmptyExpression emptyExpression0 = new EmptyExpression(17, 2);
      generatorExpressionLoop0.setIterator(emptyExpression0);
      String string0 = generatorExpressionLoop0.debugPrint();
      assertEquals("-1\tFOR -1 1\n17\t  EMPTY 18 2\n2881\t  NAME 2882 899 null\n", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      Name name0 = new Name();
      generatorExpressionLoop0.setIterator(name0);
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.toSource(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(0, 0);
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.setIsForEach(true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // this node type does not support for each
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(135);
      assertEquals(19, Node.PARENTHESIZED_PROP);
  }
}
