/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:24:48 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ConditionalExpression;
import org.mozilla.javascript.ast.StringLiteral;
import org.mozilla.javascript.ast.XmlExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlExpression_ESTest extends XmlExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression();
      XmlExpression xmlExpression0 = new XmlExpression((-1474), conditionalExpression0);
      xmlExpression0.setIsXmlAttribute(true);
      assertTrue(xmlExpression0.isXmlAttribute());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression((-1380), (-851));
      boolean boolean0 = xmlExpression0.isXmlAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral(154, 154);
      XmlExpression xmlExpression0 = new XmlExpression(154, stringLiteral0);
      AstNode astNode0 = xmlExpression0.getExpression();
      assertEquals(22, Node.DESTRUCTURING_NAMES);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral(1004, 1);
      XmlExpression xmlExpression0 = new XmlExpression(135, stringLiteral0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("135\tXML 135 1\n1004\t  STRING 869 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("135\tXML 135 1\n1004\t  STRING 869 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(1876);
      assertEquals(2, Node.ATTRIBUTE_FLAG);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression();
      // Undeclared exception!
      try { 
        xmlExpression0.toSource(54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlExpression", e);
      }
  }
}
