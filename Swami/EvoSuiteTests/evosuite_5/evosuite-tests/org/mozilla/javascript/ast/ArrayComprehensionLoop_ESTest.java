/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 16:16:23 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.ArrayComprehensionLoop;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.TryStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayComprehensionLoop_ESTest extends ArrayComprehensionLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
      Block block0 = new Block(12);
      arrayComprehensionLoop0.iteratedObject = (AstNode) block0;
      arrayComprehensionLoop0.setIterator(block0);
      StringBuffer stringBuffer0 = new StringBuffer("AW,");
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      arrayComprehensionLoop0.visit(astNode_DebugPrintVisitor0);
      assertEquals("AW,-1\tFOR -1 1\n12\t  BLOCK 13 1\n12\t  BLOCK 13 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("AW,-1\tFOR -1 1\n12\t  BLOCK 13 1\n12\t  BLOCK 13 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
      Block block0 = new Block(12);
      arrayComprehensionLoop0.setIterator(block0);
      // Undeclared exception!
      try { 
        arrayComprehensionLoop0.toSource(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ArrayComprehensionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(1751, 1751);
      AstNode astNode0 = arrayComprehensionLoop0.getBody();
      assertNull(astNode0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(2417);
      assertEquals(3, Node.LOCAL_BLOCK_PROP);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
      TryStatement tryStatement0 = new TryStatement(57);
      // Undeclared exception!
      try { 
        arrayComprehensionLoop0.setBody(tryStatement0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // this node type has no body
         //
         verifyException("org.mozilla.javascript.ast.ArrayComprehensionLoop", e);
      }
  }
}
