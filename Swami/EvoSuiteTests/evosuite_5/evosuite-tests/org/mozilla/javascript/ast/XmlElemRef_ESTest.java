/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 15:48:53 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ErrorNode;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.XmlElemRef;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlElemRef_ESTest extends XmlElemRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef((-490), (-1076));
      StringBuilder stringBuilder0 = new StringBuilder(4);
      Name name0 = new Name(1028);
      xmlElemRef0.setExpression(name0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlElemRef0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-490\tREF_MEMBER -490 -1076\n1028\t  NAME 1518 1 null\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), xmlElemRef0.getLb());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(91);
      Name name0 = new Name((-2389), 14, "XbV~cfkV*");
      xmlElemRef0.namespace = name0;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "XbV~cfkV*");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        xmlElemRef0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlElemRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(0);
      ErrorNode errorNode0 = new ErrorNode();
      xmlElemRef0.setExpression(errorNode0);
      String string0 = xmlElemRef0.toSource(19);
      assertEquals("                                      []", string0);
      assertEquals((-1), xmlElemRef0.getLb());
      assertEquals((-1), xmlElemRef0.getRb());
      assertEquals(78, xmlElemRef0.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(91);
      Name name0 = new Name((-2389), 14, "XbV~cfkV*");
      xmlElemRef0.namespace = name0;
      // Undeclared exception!
      try { 
        xmlElemRef0.toSource(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlElemRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef((-2081), (-2081));
      xmlElemRef0.atPos = 21;
      // Undeclared exception!
      try { 
        xmlElemRef0.toSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlElemRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(0, (-2292));
      xmlElemRef0.setRb(996);
      assertEquals(996, xmlElemRef0.getRb());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(91);
      xmlElemRef0.setLb(91);
      assertEquals(91, xmlElemRef0.getLb());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef((-490), (-1076));
      int int0 = xmlElemRef0.getLb();
      assertEquals((-1), int0);
      assertEquals("78", xmlElemRef0.toString());
      assertEquals((-1), xmlElemRef0.getRb());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(91);
      xmlElemRef0.setBrackets(1119, 38);
      assertEquals(38, xmlElemRef0.getRb());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef();
      xmlElemRef0.getExpression();
      assertEquals((-1), xmlElemRef0.getLb());
      assertEquals("78", xmlElemRef0.toString());
      assertEquals((-1), xmlElemRef0.getRb());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef((-2081), (-2081));
      int int0 = xmlElemRef0.getRb();
      assertEquals((-1), int0);
      assertEquals((-1), xmlElemRef0.getLb());
      assertEquals("78", xmlElemRef0.toString());
  }
}
