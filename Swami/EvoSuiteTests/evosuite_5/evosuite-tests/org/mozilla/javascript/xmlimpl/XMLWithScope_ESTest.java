/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 15:01:53 GMT 2018
 */

package org.mozilla.javascript.xmlimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.xml.XMLObject;
import org.mozilla.javascript.xmlimpl.XML;
import org.mozilla.javascript.xmlimpl.XMLLibImpl;
import org.mozilla.javascript.xmlimpl.XMLList;
import org.mozilla.javascript.xmlimpl.XMLWithScope;
import org.mozilla.javascript.xmlimpl.XmlNode;
import org.mozilla.javascript.xmlimpl.XmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLWithScope_ESTest extends XMLWithScope_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, importerTopLevel0, 11, "error reporter", 18, importerTopLevel0);
      XMLList xMLList0 = new XMLList(xMLLibImpl0, idFunctionObject0, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "language version");
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create((XmlNode.Namespace) null, "hIRTI");
      XmlNode xmlNode1 = XmlNode.newElementWithText(xmlProcessor0, xmlNode0, xmlNode_QName0, "hIRTI");
      XML xML0 = new XML(xMLLibImpl0, idFunctionObject0, xMLList0, xmlNode1);
      xmlNode1.insertChildAt(0, xmlNode0);
      XMLList xMLList1 = xML0.children();
      XMLWithScope xMLWithScope0 = new XMLWithScope(xMLLibImpl0, idFunctionObject0, xMLList1);
      xMLWithScope0.initAsDotQuery();
      Object object0 = xMLWithScope0.updateDotQuery(true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, importerTopLevel0, 11, "error reporter", 18, importerTopLevel0);
      XMLList xMLList0 = new XMLList(xMLLibImpl0, idFunctionObject0, (XMLObject) null);
      XMLWithScope xMLWithScope0 = new XMLWithScope(xMLLibImpl0, idFunctionObject0, xMLList0);
      // Undeclared exception!
      try { 
        xMLWithScope0.updateDotQuery(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLWithScope", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, importerTopLevel0, 11, "error reporter", 18, importerTopLevel0);
      XMLList xMLList0 = new XMLList(xMLLibImpl0, idFunctionObject0, (XMLObject) null);
      XMLWithScope xMLWithScope0 = new XMLWithScope(xMLLibImpl0, idFunctionObject0, xMLList0);
      xMLWithScope0.initAsDotQuery();
      XMLList xMLList1 = (XMLList)xMLWithScope0.updateDotQuery(true);
      assertEquals(0, ScriptableObject.EMPTY);
  }
}
