/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 17:48:40 GMT 2018
 */

package org.mozilla.javascript.v8dtoa;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.v8dtoa.DiyFp;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiyFp_ESTest extends DiyFp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(57L, 349);
      String string0 = diyFp0.toString();
      assertEquals("[DiyFp f:57, e:349]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(1755L, 0);
      diyFp0.setF(1755L);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(57L, 349);
      diyFp0.setE(349);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp();
      // Undeclared exception!
      try { 
        diyFp0.normalize();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp();
      DiyFp diyFp1 = DiyFp.times(diyFp0, diyFp0);
      assertNotSame(diyFp0, diyFp1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(942L, (-52));
      DiyFp diyFp1 = DiyFp.minus(diyFp0, diyFp0);
      assertNotSame(diyFp1, diyFp0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(0L, (-45));
      int int0 = diyFp0.e();
      assertEquals((-45), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp(3616, 3616);
      DiyFp diyFp1 = DiyFp.normalize(diyFp0);
      assertNotSame(diyFp1, diyFp0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DiyFp diyFp0 = new DiyFp();
      long long0 = diyFp0.f();
      assertEquals(0L, long0);
  }
}
