/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 06:28:58 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.FunctionObject;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeCallSite;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeDate;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJSON;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.NativeJavaPackage;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeJavaObject_ESTest extends NativeJavaObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      Long long0 = new Long((byte)4);
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, long0);
      assertEquals(4, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeJavaObject0.setPrototype(importerTopLevel0);
      assertEquals(4, ScriptableObject.PERMANENT);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(nativeArrayBuffer0, 0, 0);
      nativeJavaObject0.setParentScope(nativeUint8ClampedArray0);
      assertEquals(0, nativeUint8ClampedArray0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(1.0E256);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeWith nativeWith0 = new NativeWith(nativeNumber0, nativeNumber0);
      // Undeclared exception!
      try { 
        nativeJavaObject0.put("", (Scriptable) nativeNumber0, (Object) nativeWith0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        nativeJavaClass0.put((-619), (Scriptable) nativeCall0, (Object) context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.initMembers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      boolean boolean0 = nativeJavaObject0.hasInstance(nativeJavaObject0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Context context0 = Context.enter();
      NativeCall nativeCall0 = context0.currentActivationCall;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, "bad opcode for field reference", 5, "", 2024, nativeJavaObject0);
      // Undeclared exception!
      try { 
        nativeJavaObject0.has("<#Oa45 *%j1rjq", (Scriptable) idFunctionObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Delegator delegator0 = new Delegator();
      boolean boolean0 = nativeJavaClass0.has(0, (Scriptable) delegator0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<NativeCallSite> class0 = NativeCallSite.class;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.getIds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue(class0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Double> class0 = Double.TYPE;
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      int int0 = NativeJavaObject.getConversionWeight(nativeGenerator0, class0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(importerTopLevel0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "", classLoader0);
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaPackage0, class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<TopLevel> class0 = TopLevel.class;
      int int0 = NativeJavaObject.getConversionWeight(importerTopLevel0, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Class<CharBuffer> class0 = CharBuffer.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeContinuation0, class0);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Class<Integer> class0 = Integer.TYPE;
      boolean boolean0 = NativeJavaObject.canConvert(object0, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<NativeError> class0 = NativeError.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaObject0, class0);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      int int0 = NativeJavaObject.getConversionWeight(classLoader0, class0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<String> class0 = String.class;
      Class<NativeError> class1 = NativeError.class;
      int int0 = NativeJavaObject.getConversionWeight(class1, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Class<Object> class1 = Object.class;
      boolean boolean0 = NativeJavaObject.canConvert(class0, class1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Class<Double> class0 = Double.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(charBuffer0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = NativeJavaObject.canConvert(":W9~,}L!O'M", class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Byte byte0 = new Byte((byte)99);
      int int0 = NativeJavaObject.getConversionWeight(byte0, class0);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Short short0 = new Short((short) (-2982));
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(short0, class0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-3));
      Class<Integer> class0 = Integer.class;
      int int0 = NativeJavaObject.getConversionWeight(byte0, class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Byte byte0 = new Byte((byte)4);
      Class<Integer> class0 = Integer.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(byte0, class0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("LOG10E");
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(boolean0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Class<Object> class0 = Object.class;
      int int0 = NativeJavaObject.getConversionWeight(boolean0, class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      String string0 = nativeJavaObject0.getClassName();
      assertEquals("JavaObject", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Float> class0 = Float.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeJavaObject0, 0, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeJavaClass0.delete(":W9~,}L!O'M");
      assertEquals("JavaClass", nativeJavaClass0.getClassName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeJavaClass0.delete(4);
      assertEquals("JavaClass", nativeJavaClass0.getClassName());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "", (ClassLoader) null);
      NativeJavaPackage nativeJavaPackage1 = (NativeJavaPackage)NativeJavaObject.coerceTypeImpl(class0, nativeJavaPackage0);
      assertFalse(nativeJavaPackage1.isSealed());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeIterator_StopIteration0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert [object StopIteration] to org.mozilla.javascript.NativeJavaClass
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<String> class0 = String.class;
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeJavaClass0, (Scriptable) null);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeArrayIterator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Class<Double> class0 = Double.TYPE;
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, nativeError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<Object> class0 = Object.class;
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, uniqueTag0);
      assertSame(uniqueTag0, object0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Class<String> class0 = String.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeJavaObject0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to org.mozilla.javascript.IdFunctionObject
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Class<String> class0 = String.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, class0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class class1 = (Class)NativeJavaObject.coerceTypeImpl(class0, class0);
      assertFalse(class1.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, "zH:xu4C\"4");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert zH:xu4C\"4 to org.mozilla.javascript.Delegator
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Class<NativeError> class0 = NativeError.class;
      Byte byte0 = new Byte((byte) (-71));
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, byte0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert -71 to org.mozilla.javascript.NativeError
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<String> class0 = String.class;
      Short short0 = new Short((short)942);
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, short0);
      assertEquals("942", object0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Class<FunctionObject> class0 = FunctionObject.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, boolean0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert false to org.mozilla.javascript.FunctionObject
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, boolean0);
      assertEquals(false, object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 2, 1174);
      Class<NativeJSON> class0 = NativeJSON.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeFloat32Array0, (-18), class0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert undefined to org.mozilla.javascript.NativeJSON
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, (Object) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to int
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Class<Long> class0 = Long.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "");
      Object object1 = NativeJavaObject.coerceTypeImpl(class0, object0);
      assertEquals(0L, object1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "");
      Object object1 = NativeJavaObject.coerceTypeImpl(class0, object0);
      assertEquals(0L, object1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, "W[LrU\"3g Q(IKAj");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert W[LrU\"3g Q(IKAj to java.lang.Long
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Object object0 = NativeJavaObject.coerceType(class0, "tw)p_");
      assertNotNull(object0);
      assertEquals(Float.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      Double double0 = new Double(123);
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, double0);
      assertEquals(123.0F, object0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Class<NativeArrayIterator> class0 = NativeArrayIterator.class;
      boolean boolean0 = NativeJavaObject.canConvert((Object) null, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeNumber nativeNumber0 = new NativeNumber(9);
      Class<FunctionObject> class0 = FunctionObject.class;
      NativeJavaObject nativeJavaObject0 = null;
      try {
        nativeJavaObject0 = new NativeJavaObject(nativeNumber0, context0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<NativeDate> class0 = NativeDate.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, nativeJavaClass0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to org.mozilla.javascript.NativeDate
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
