/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 21:25:31 GMT 2018
 */

package org.mozilla.javascript.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.JavaScriptException;
import org.mozilla.javascript.RhinoException;
import org.mozilla.javascript.WrappedException;
import org.mozilla.javascript.ast.ErrorCollector;
import org.mozilla.javascript.tools.ToolErrorReporter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToolErrorReporter_ESTest extends ToolErrorReporter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      toolErrorReporter0.warning("msg.format3", "msg.format3", 983, "msg.format3", 983);
      assertFalse(toolErrorReporter0.isReportingWarnings());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      toolErrorReporter0.setIsReportingWarnings(false);
      assertFalse(toolErrorReporter0.isReportingWarnings());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      EvaluatorException evaluatorException0 = toolErrorReporter0.runtimeError("^S\"M4%yQS!d'>8xA M", "^S\"M4%yQS!d'>8xA M", 1201, "", 1201);
      assertTrue(toolErrorReporter0.isReportingWarnings());
      assertEquals("", evaluatorException0.lineSource());
      assertEquals("^S\"M4%yQS!d'>8xA M", evaluatorException0.sourceName());
      assertEquals(1201, evaluatorException0.getLineNumber());
      assertEquals(1201, evaluatorException0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      EvaluatorException evaluatorException0 = new EvaluatorException("msg.format3", "msg.format3", 983);
      WrappedException wrappedException0 = new WrappedException(evaluatorException0);
      toolErrorReporter0.reportException((RhinoException) wrappedException0);
      assertFalse(toolErrorReporter0.isReportingWarnings());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      EvaluatorException evaluatorException0 = new EvaluatorException("jG_!=e#@'kh(xp(");
      // Undeclared exception!
      try { 
        ToolErrorReporter.reportException((ErrorReporter) errorCollector0, (RhinoException) evaluatorException0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ErrorCollector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      boolean boolean0 = toolErrorReporter0.isReportingWarnings();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("u@rQS");
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true, mockPrintStream0);
      toolErrorReporter0.hasReportedError();
      assertTrue(toolErrorReporter0.isReportingWarnings());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolErrorReporter.getMessage("", (Object) "", (Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      String string0 = ToolErrorReporter.getMessage("msg.uncaughtEcmaError", (Object) "msg.uncaughtEcmaError", object0);
      assertEquals("uncaught JavaScript runtime exception: msg.uncaughtEcmaError", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ToolErrorReporter.getMessage("msg.format3");
      assertEquals("\"{0}\", line {1}: {2}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolErrorReporter.reportException((ErrorReporter) null, (RhinoException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      JavaScriptException javaScriptException0 = new JavaScriptException(toolErrorReporter0, "", 40);
      ToolErrorReporter.reportException((ErrorReporter) toolErrorReporter0, (RhinoException) javaScriptException0);
      assertFalse(toolErrorReporter0.isReportingWarnings());
      assertFalse(toolErrorReporter0.hasReportedError());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      EvaluatorException evaluatorException0 = new EvaluatorException("");
      ToolErrorReporter.reportException((ErrorReporter) toolErrorReporter0, (RhinoException) evaluatorException0);
      assertFalse(toolErrorReporter0.isReportingWarnings());
      assertFalse(toolErrorReporter0.hasReportedError());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
      toolErrorReporter0.warning("", (String) null, 3, "", 3);
      assertTrue(toolErrorReporter0.isReportingWarnings());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
      toolErrorReporter0.error("attachTo", "", 2, "attachTo", 2);
      assertTrue(toolErrorReporter0.hasReportedError());
  }
}
