/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 20:43:02 GMT 2018
 */

package org.mozilla.javascript.tools.debugger.treetable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JTree;
import javax.swing.plaf.synth.SynthTableUI;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModel;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TreeTableModelAdapter_ESTest extends TreeTableModelAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree((Hashtable<?, ?>) null);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      jTree0.fireTreeCollapsed((TreePath) null);
      assertTrue(jTree0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      treeTableModelAdapter0.setValueAt(jTree0, 1, 0);
      assertFalse(jTree0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree((Object[]) null);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      // Undeclared exception!
      try { 
        treeTableModelAdapter0.isCellEditable(2626, 2626);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      int int0 = treeTableModelAdapter0.getRowCount();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      String string0 = treeTableModelAdapter0.getColumnName(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(treeTableModel0).getColumnCount();
      Vector<SynthTableUI> vector0 = new Vector<SynthTableUI>();
      JTree jTree0 = new JTree(vector0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      int int0 = treeTableModelAdapter0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(treeTableModel0).getColumnClass(anyInt());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      Class<?> class0 = treeTableModelAdapter0.getColumnClass((-705));
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      treeTableModelAdapter0.delayedFireTableDataChanged();
      assertEquals(0, treeTableModelAdapter0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree((Hashtable<?, ?>) null);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      // Undeclared exception!
      try { 
        treeTableModelAdapter0.getValueAt((-1), 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter", e);
      }
  }
}
