/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 23:49:11 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.Ref;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.SpecialRef;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SpecialRef_ESTest extends SpecialRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeString nativeString0 = new NativeString((CharSequence) null);
      Ref ref0 = SpecialRef.createSpecial(context0, nativeString0, nativeString0, "__parent__");
      // Undeclared exception!
      try { 
        ref0.set(context0, (Object) nativeString0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.SpecialRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString("language version");
      Ref ref0 = SpecialRef.createSpecial(context0, nativeString0, nativeString0, "__proto__");
      boolean boolean0 = ref0.has(context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString("language version");
      Ref ref0 = SpecialRef.createSpecial(context0, nativeString0, nativeString0, "__proto__");
      Object object0 = ref0.get(context0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        SpecialRef.createSpecial(context0, nativeString0, 110, "error reporter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("org.mozilla.javascript.SpecialRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString("language version");
      Ref ref0 = SpecialRef.createSpecial(context0, nativeString0, nativeString0, "__proto__");
      Float float0 = new Float((double) 0);
      NativeNumber nativeNumber0 = (NativeNumber)ref0.set(context0, (Scriptable) nativeString0, (Object) float0);
      // Undeclared exception!
      try { 
        SpecialRef.createSpecial(context0, nativeNumber0, (Object) null, "__proto__");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"__proto__\" from null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString("error reporter");
      Ref ref0 = SpecialRef.createSpecial(context0, nativeString0, nativeString0, "__parent__");
      boolean boolean0 = ref0.delete(context0);
      assertFalse(boolean0);
  }
}
