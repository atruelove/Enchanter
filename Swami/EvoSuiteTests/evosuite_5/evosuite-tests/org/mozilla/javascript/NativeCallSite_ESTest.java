/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 22:04:48 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.NativeCallSite;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeInt16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeCallSite_ESTest extends NativeCallSite_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.RegExp;
      Function function0 = TopLevel.getBuiltinCtor(context0, (Scriptable) scriptableObject0, topLevel_Builtins0);
      NativeCallSite nativeCallSite0 = NativeCallSite.make(scriptableObject0, function0);
      // Undeclared exception!
      try { 
        nativeCallSite0.initPrototypeId(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      Class<TopLevel> class0 = TopLevel.class;
      BaseFunction baseFunction0 = ScriptableObject.buildClassCtor((Scriptable) nativeInt16Array0, class0, true, true);
      NativeCallSite nativeCallSite0 = NativeCallSite.make(baseFunction0, baseFunction0);
      int int0 = nativeCallSite0.findPrototypeId("toString");
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.RegExp;
      Function function0 = TopLevel.getBuiltinCtor(context0, (Scriptable) scriptableObject0, topLevel_Builtins0);
      NativeCallSite nativeCallSite0 = NativeCallSite.make(scriptableObject0, function0);
      nativeCallSite0.findPrototypeId("charAt");
      assertEquals("CallSite", nativeCallSite0.getClassName());
  }
}
