/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 14:21:37 GMT 2018
 */

package org.mozilla.javascript.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.JavaScriptException;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.json.JsonParser;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonParser_ESTest extends JsonParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      JavaScriptException javaScriptException0 = new JavaScriptException(jsonParser0, "J</i-!j`;7H8", 180);
      JsonParser.ParseException jsonParser_ParseException0 = new JsonParser.ParseException(javaScriptException0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      JsonParser jsonParser0 = new JsonParser(context0, nativeArrayBuffer0);
      try { 
        jsonParser0.parseValue("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Empty JSON string
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue("[chars:");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: c
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = Context.enter();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue("tr?2<o<RI)8.rOtQK");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: t
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      JsonParser jsonParser0 = new JsonParser(context0, topLevel0);
      try { 
        jsonParser0.parseValue("\"!l3GXKW[+o'Mr ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated string literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      JsonParser jsonParser0 = new JsonParser(context0, importerTopLevel0);
      try { 
        jsonParser0.parseValue("{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      JsonParser jsonParser0 = new JsonParser(context0, nativeContinuation0);
      try { 
        jsonParser0.parseValue("{'2UMD&Vm(~*OSI:E>");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token in object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Scriptable scriptable0 = ScriptableObject.getObjectPrototype(importerTopLevel0);
      JsonParser jsonParser0 = new JsonParser(context0, scriptable0);
      try { 
        jsonParser0.parseValue("6Esuw,`qWQ/O!g?B");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: 6Es
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = Context.enter();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue("-30KW+A+GT9");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: -
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = Context.enter();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      JsonParser jsonParser0 = new JsonParser(context0, nativeContinuation0);
      try { 
        jsonParser0.parseValue("nuU[^c]H=bo6!&sA");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: n
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      JsonParser jsonParser0 = new JsonParser(context0, nativeContinuation0);
      try { 
        jsonParser0.parseValue("factorymakeContext() reurned Cntext instancealready associated with some thread");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: f
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue("[8");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated array literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      JsonParser jsonParser0 = new JsonParser(context0, importerTopLevel0);
      try { 
        jsonParser0.parseValue((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Input string may not be null
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      JsonParser jsonParser0 = new JsonParser(context0, topLevel0);
      try { 
        jsonParser0.parseValue("-5nDwQd&E");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected end of stream at char 2
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue("-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: -
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      JsonParser jsonParser0 = new JsonParser(context0, topLevel0);
      try { 
        jsonParser0.parseValue(" found ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: f
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }
}
