/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 01:01:14 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BoundFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeJavaArray;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaMembers_ESTest extends JavaMembers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<NativeBoolean> class0 = NativeBoolean.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0, false);
      // Undeclared exception!
      try { 
        javaMembers0.put((Scriptable) null, "q", "q", "q", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java class \"org.mozilla.javascript.NativeBoolean\" has no public instance field or method named \"q\".
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        context0.initSafeStandardObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<NativeJavaArray>[] classArray0 = (Class<NativeJavaArray>[]) Array.newInstance(Class.class, 3);
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = classArray0[0];
      String string0 = JavaMembers.liveConnectSignature(classArray0);
      assertEquals("(org.mozilla.javascript.NativeJavaArray,org.mozilla.javascript.NativeJavaArray,org.mozilla.javascript.NativeJavaArray)", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<BoundFunction> class0 = BoundFunction.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0, false);
      boolean boolean0 = javaMembers0.has("getLength", false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(1592);
      Class<Integer> class0 = Integer.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeArrayBuffer0, class0, true);
      Object[] objectArray0 = javaMembers0.getIds(true);
      assertEquals(35, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(1592);
      Class<Integer> class0 = Integer.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeArrayBuffer0, class0, true);
      Object object0 = javaMembers0.get(nativeArrayBuffer0, "ArrayBuffer", nativeArrayBuffer0, false);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      boolean boolean0 = javaMembers0.has("u}Xz-!;+y(sFx,Ex@f", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<NativeContinuation> class0 = NativeContinuation.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      Class<NativeArray> class1 = NativeArray.class;
      // Undeclared exception!
      try { 
        javaMembers0.put((Scriptable) null, "get", class1, class1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java method \"get\" cannot be assigned to.
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }
}
