/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 18:31:15 GMT 2018
 */

package org.mozilla.javascript.regexp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.regexp.NativeRegExp;
import org.mozilla.javascript.regexp.NativeRegExpCtor;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeRegExpCtor_ESTest extends NativeRegExpCtor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdValue(1, (Object) null);
      assertEquals(2, ScriptableObject.DONTENUM);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      NativeRegExp nativeRegExp0 = new NativeRegExp();
      nativeRegExpCtor0.setInstanceIdValue(26, nativeRegExp0);
      assertEquals(4, ScriptableObject.PERMANENT);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      Short short0 = new Short((short) (-5));
      nativeRegExpCtor0.setInstanceIdValue(10, short0);
      assertEquals(13, ScriptableObject.CONST);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        ScriptableObject.putProperty((Scriptable) nativeRegExpCtor0, "multiline", (Object) "multiline");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.setInstanceIdValue(8, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(4, 16);
      assertEquals(1, ScriptableObject.READONLY);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(21, 0);
      assertEquals("RegExp", nativeRegExpCtor0.getFunctionName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(10, 10);
      assertEquals("function", nativeRegExpCtor0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(9, 9);
      assertEquals("function", nativeRegExpCtor0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(8, 2);
      assertEquals(13, ScriptableObject.CONST);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(7, 2);
      assertFalse(nativeRegExpCtor0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(6, 8);
      assertEquals("function", nativeRegExpCtor0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.setInstanceIdAttributes(1, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InternalError: Changing attributes not supported for Function length property
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      Object object0 = nativeRegExpCtor0.getInstanceIdValue(1);
      assertEquals(2, object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.getInstanceIdValue(26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        ScriptableObject.getProperty((Scriptable) nativeRegExpCtor0, "rightContext");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.get((Object) "leftContext");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.get("lastParen", (Scriptable) nativeJavaClass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        ScriptableObject.getProperty((Scriptable) nativeRegExpCtor0, "lastMatch");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.getInstanceIdValue(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.getInstanceIdValue(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = null;
      try {
        importerTopLevel0 = new ImporterTopLevel(context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      int int0 = nativeRegExpCtor0.getArity();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      int int0 = nativeRegExpCtor0.findInstanceIdInfo("y(");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      Object[] objectArray0 = ScriptableObject.getPropertyIds(nativeRegExpCtor0);
      assertEquals(21, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      Object[] objectArray0 = new Object[1];
      NativeRegExp nativeRegExp0 = (NativeRegExp)nativeRegExpCtor0.call((Context) null, nativeFloat64Array0, nativeFloat64Array0, objectArray0);
      objectArray0[0] = (Object) nativeRegExp0;
      NativeRegExp nativeRegExp1 = (NativeRegExp)nativeRegExpCtor0.call((Context) null, nativeRegExp0, nativeFloat64Array0, objectArray0);
      assertNotNull(nativeRegExp1);
      assertSame(nativeRegExp1, nativeRegExp0);
  }
}
