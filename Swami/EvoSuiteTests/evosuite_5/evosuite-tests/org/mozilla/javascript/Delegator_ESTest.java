/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 02:50:52 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Delegator_ESTest extends Delegator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(1265);
      Delegator delegator0 = new Delegator(nativeInt32Array0);
      delegator0.setPrototype(nativeInt32Array0);
      assertFalse(nativeInt32Array0.isSealed());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      synchronizer0.setParentScope((Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(17);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArrayBuffer0, false);
      Synchronizer synchronizer0 = new Synchronizer(nativeGenerator0, context0);
      synchronizer0.put("reverse", (Scriptable) nativeArrayBuffer0, (Object) synchronizer0);
      assertEquals(2, ScriptableObject.DONTENUM);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      Delegator delegator0 = new Delegator(nativeJavaMethod0);
      delegator0.put(1981, (Scriptable) nativeJavaMethod0, (Object) javaMembers0);
      assertTrue(nativeJavaMethod0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null);
      // Undeclared exception!
      try { 
        synchronizer0.newInstance();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrapped java.lang.InstantiationException: org.mozilla.javascript.Synchronizer
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      boolean boolean0 = synchronizer0.hasInstance(importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null);
      // Undeclared exception!
      try { 
        synchronizer0.has("", (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      Delegator delegator0 = new Delegator(nativeJavaMethod0);
      boolean boolean0 = delegator0.has((-543), (Scriptable) nativeJavaMethod0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      Scriptable scriptable0 = synchronizer0.getPrototype();
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      Delegator delegator0 = new Delegator(topLevel0);
      Scriptable scriptable0 = delegator0.getParentScope();
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        delegator0.getIds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)synchronizer0.getDelegee();
      assertEquals(1, ScriptableObject.READONLY);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Delegator delegator0 = new Delegator(nativeJavaClass0);
      double double0 = Context.toNumber(delegator0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null);
      // Undeclared exception!
      try { 
        synchronizer0.getClassName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      Delegator delegator0 = new Delegator(nativeJavaMethod0);
      Object object0 = delegator0.get(1, (Scriptable) null);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      synchronizer0.delete("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, (Object) null);
      synchronizer0.delete((-1));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try { 
        delegator0.construct((Context) null, delegator0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot convert null to an object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.getCurrentContext();
      Scriptable scriptable0 = delegator0.construct(context0, (Scriptable) null, context0.emptyArgs);
      assertNotSame(scriptable0, delegator0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Delegator delegator0 = new Delegator(nativeJavaClass0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        delegator0.construct(context0, nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }
}
