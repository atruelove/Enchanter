/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 03 04:41:35 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IdFunctionObjectES6_ESTest extends IdFunctionObjectES6_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(importerTopLevel0, "", 1, "", 4, importerTopLevel0);
      idFunctionObjectES6_0.setInstanceIdValue(4, "");
      assertTrue(idFunctionObjectES6_0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(41);
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(nativeArrayBuffer0, 4, 13);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint8ClampedArray0, nativeArrayBuffer0, (-670), "ArrayBuffer", 0, nativeArrayBuffer0);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      idFunctionObjectES6_0.setInstanceIdValue(1, uniqueTag0);
      Object object0 = idFunctionObjectES6_0.getInstanceIdValue(1);
      assertSame(object0, uniqueTag0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(41);
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(nativeArrayBuffer0, 4, 13);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint8ClampedArray0, nativeArrayBuffer0, (-670), "ArrayBuffer", 0, nativeArrayBuffer0);
      Object[] objectArray0 = idFunctionObjectES6_0.getAllIds();
      assertEquals(4, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(importerTopLevel0, "", 1, "", 4, importerTopLevel0);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      idFunctionObjectES6_0.setInstanceIdValue(3, uniqueTag0);
      Object object0 = idFunctionObjectES6_0.getInstanceIdValue(3);
      assertSame(object0, uniqueTag0);
  }
}
