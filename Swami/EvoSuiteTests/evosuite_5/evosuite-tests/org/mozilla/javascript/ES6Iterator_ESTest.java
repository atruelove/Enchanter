/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 22:59:03 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.NativeStringIterator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Symbol;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ES6Iterator_ESTest extends ES6Iterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeInt16Array0, (Scriptable) null);
      nativeStringIterator0.exhausted = true;
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeStringIterator0.next(context0, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeFloat64Array0, (Scriptable) null);
      // Undeclared exception!
      try { 
        nativeArrayIterator0.initPrototypeId(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4
         //
         verifyException("org.mozilla.javascript.ES6Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      NativeArrayIterator.init(nativeInt16Array0, true);
      assertEquals("Int16Array", nativeInt16Array0.getClassName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeInt16Array0, (Scriptable) null);
      SymbolKey symbolKey0 = SymbolKey.UNSCOPABLES;
      int int0 = nativeStringIterator0.findPrototypeId(symbolKey0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(4);
      NativeStringIterator.init(nativeInt16Array0, false);
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeInt16Array0, (Scriptable) null);
      SymbolKey symbolKey0 = SymbolKey.TO_STRING_TAG;
      Object object0 = ScriptableObject.getProperty((Scriptable) nativeStringIterator0, (Symbol) symbolKey0);
      assertEquals("String Iterator", object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(nativeArrayBuffer0, 2, 13);
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeInt16Array0, (Scriptable) null);
      int int0 = nativeStringIterator0.findPrototypeId("done");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeFloat64Array0, (Scriptable) null);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeFloat64Array0, "next", 13, "value", 0, nativeFloat64Array0);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        nativeArrayIterator0.execIdCall(idFunctionObject0, (Context) null, idFunctionObject0, (Scriptable) null, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=13 MASTER=org.mozilla.javascript.typedarrays.NativeFloat64Array@0
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(4);
      NativeStringIterator.init(nativeInt16Array0, false);
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeInt16Array0, (Scriptable) null);
      Context context0 = Context.enter();
      NativeObject nativeObject0 = (NativeObject)ScriptableObject.callMethod(context0, (Scriptable) nativeStringIterator0, "next", context0.emptyArgs);
      assertFalse(nativeObject0.avoidObjectDetection());
  }
}
