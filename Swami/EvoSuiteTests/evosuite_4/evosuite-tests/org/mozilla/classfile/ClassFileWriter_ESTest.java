/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 05:36:23 GMT 2018
 */

package org.mozilla.classfile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.mozilla.classfile.ClassFileMethod;
import org.mozilla.classfile.ClassFileWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassFileWriter_ESTest extends ClassFileWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("ZUI~Edvk^XX)", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", "");
      ClassFileWriter.StackMapTable classFileWriter_StackMapTable0 = classFileWriter0.new StackMapTable();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        classFileWriter_StackMapTable0.write(byteArray0, (short)32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.classfile.ExceptionTableEntry", "org.mozilla.classfile.ExceptionTableEntry", "%}fnI00v4`V{T");
      ClassFileWriter.StackMapTable classFileWriter_StackMapTable0 = classFileWriter0.new StackMapTable();
      // Undeclared exception!
      try { 
        classFileWriter_StackMapTable0.computeWriteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter$StackMapTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassFileWriter.MHandle classFileWriter_MHandle0 = new ClassFileWriter.MHandle((byte)32, "=Er7nI)+Li:`pP3]#", "=Er7nI)+Li:`pP3]#", (String) null);
      String string0 = classFileWriter_MHandle0.toString();
      assertEquals("=Er7nI)+Li:`pP3]#.=Er7nI)+Li:`pP3]#null (32)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassFileWriter.MHandle classFileWriter_MHandle0 = new ClassFileWriter.MHandle((byte)32, "=Er7nI)+Li:`pP3]#", "=Er7nI)+Li:`pP3]#", (String) null);
      ClassFileMethod classFileMethod0 = new ClassFileMethod("=Er7nI)+Li:`pP3]#", (short)3145, (String) null, (short)1299, (short)2189);
      boolean boolean0 = classFileWriter_MHandle0.equals(classFileMethod0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("P>g4v", "lc:6/0)h", "");
      ClassFileWriter.MHandle classFileWriter_MHandle0 = new ClassFileWriter.MHandle((byte) (-47), "", "<init>", "g/<0e6gCNlJ0w)");
      Object[] objectArray0 = new Object[2];
      ClassFileWriter.BootstrapEntry classFileWriter_BootstrapEntry0 = null;
      try {
        classFileWriter_BootstrapEntry0 = classFileWriter0.new BootstrapEntry(classFileWriter_MHandle0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mozilla.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("p*.T^E8gb/_>?YP)", "p*.T^E8gb/_>?YP)", "org.mozilla.javascript.UintMap");
      ClassFileWriter.MHandle classFileWriter_MHandle0 = new ClassFileWriter.MHandle((byte)3, "org.mozilla.javascript.UintMap", "Too big stack: ", "p*.T^E8gb/_>?YP)");
      Object[] objectArray0 = new Object[0];
      ClassFileWriter.BootstrapEntry classFileWriter_BootstrapEntry0 = classFileWriter0.new BootstrapEntry(classFileWriter_MHandle0, objectArray0);
      boolean boolean0 = classFileWriter_BootstrapEntry0.equals(classFileWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "U");
      // Undeclared exception!
      try { 
        classFileWriter0.addLLoad((short)2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("W5ZJ0s_,B=P!:4", "W5ZJ0s_,B=P!:4", "W5ZJ0s_,B=P!:4");
      // Undeclared exception!
      try { 
        classFileWriter0.addFLoad(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("GHNqo~wC", "c?tP=M^", "ConstantValue");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      classFileWriter0.write(mockPrintStream0);
      assertEquals("GHNqo~wC", classFileWriter0.getClassName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("uAx2QlzLAvN=s", ")i=", "uAx2QlzLAvN=s");
      // Undeclared exception!
      try { 
        classFileWriter0.stopMethod((short)14);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No method to stop
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.add((-1830), (String) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad opcode: -1830
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("= -*X", "!G#mrPe{qwjB;YU3E", "= -*X");
      // Undeclared exception!
      try { 
        classFileWriter0.setTableSwitchJump(1776, 1776, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1776 is outside a possible range of tableswitch in already generated code
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("@zM|~{e9~y0;S;9Fg", "@zM|~{e9~y0;S;9Fg", "@zM|~{e9~y0;S;9Fg");
      // Undeclared exception!
      try { 
        classFileWriter0.setTableSwitchJump(0, 0, 2059);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad jump target: 2059
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("[L", "Attempt to modify sealed array", "Attempt to modify sealed array");
      // Undeclared exception!
      try { 
        classFileWriter0.setTableSwitchJump(0, (-376), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad case index: -376
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      classFileWriter0.setStackTop((short) (-2));
      assertEquals((short) (-2), classFileWriter0.getStackTop());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("q9r\"vCXo", "q9r\"vCXo", "2!xdg^WwCsl?`q>J");
      classFileWriter0.setFlags((short) (-865));
      assertEquals("q9r\"vCXo", classFileWriter0.getClassName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("#|FqM?)=M6", "#|FqM?)=M6", "#|FqM?)=M6");
      // Undeclared exception!
      try { 
        classFileWriter0.add(2664);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad opcode: 2664
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("GHNqo~wC", "c?tP=M^", "ConstantValue");
      // Undeclared exception!
      try { 
        classFileWriter0.markTableSwitchDefault(1589);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("handler label not defined", "Nx", "(QM9cPU_");
      // Undeclared exception!
      try { 
        classFileWriter0.markTableSwitchCase(2092, (int) (byte)99, (int) (byte)99);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad stack index: 99
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("\"@l_$", "\"@l_$", "\"@l_$");
      // Undeclared exception!
      try { 
        classFileWriter0.markTableSwitchCase((-1432), (-1432), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("=?", "<", "5_;cSMG");
      // Undeclared exception!
      try { 
        classFileWriter0.markTableSwitchCase(1552, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("(=3eJ.ZiMD=A.2", "(=3eJ.ZiMD=A.2", "(=3eJ.ZiMD=A.2");
      // Undeclared exception!
      try { 
        classFileWriter0.markLabel((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad label
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "yGs{", "");
      // Undeclared exception!
      try { 
        classFileWriter0.markHandler(1858);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad label, no biscuit
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("\"@l_$", "\"@l_$", "\"@l_$");
      // Undeclared exception!
      try { 
        classFileWriter0.isUnderStringSizeLimit((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.classfile.ConstantPool", "org.mozilla.classfile.ConstantPool", "org.mozilla.classfile.ConstantPool");
      short short0 = classFileWriter0.getStackTop();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.getLabelPC((-3847));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad label
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Uo[CJ", "", "org.mozilla.javascript.ObjArray");
      // Undeclared exception!
      try { 
        classFileWriter0.getLabelPC((short)2189);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad label, no biscuit
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("P]mkrSr{9l", ",Jn5+XQFsr. 'M)_", ",Jn5+XQFsr. 'M)_");
      int int0 = classFileWriter0.getCurrentCodeOffset();
      assertEquals(0, int0);
      assertEquals("P]mkrSr{9l", classFileWriter0.getClassName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("uAx2QlzLAvN=s", ")i=", "uAx2QlzLAvN=s");
      String string0 = classFileWriter0.getClassName();
      assertEquals("uAx2QlzLAvN=s", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("GHNqo~wC", "c?tP=M^", "ConstantValue");
      char[] charArray0 = classFileWriter0.getCharBuffer(210);
      assertEquals(210, charArray0.length);
      assertEquals("GHNqo~wC", classFileWriter0.getClassName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.javascript.UintMap", " \u2209 [0, ", "org.mozilla.javascript.UintMap");
      ClassFileWriter.StackMapTable classFileWriter_StackMapTable0 = classFileWriter0.new StackMapTable();
      // Undeclared exception!
      try { 
        classFileWriter_StackMapTable0.generate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = ClassFileWriter.classNameToSignature("`k.2");
      assertEquals("L`k/2;", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "9g#o");
      // Undeclared exception!
      try { 
        classFileWriter0.adjustStackTop(Integer.MAX_VALUE);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Too big stack: 2147483647
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("GHNqo~wC", "c?tP=M^", "ConstantValue");
      classFileWriter0.adjustStackTop(3508);
      assertEquals((short)3508, classFileWriter0.getStackTop());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("p*.T^E8gb/_>?YP)", "p*.T^E8gb/_>?YP)", "org.mozilla.javascript.UintMap");
      classFileWriter0.addVariableDescriptor("org.mozilla.javascript.UintMap", "p*.T^E8gb/_>?YP)", (short)0, 2294);
      assertEquals((short)1, ClassFileWriter.ACC_PUBLIC);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("U\"^dfW", "~8{1Zn8ix5", "U\"^dfW");
      classFileWriter0.acquireLabel();
      classFileWriter0.markLabel(Integer.MIN_VALUE, (short)157);
      // Undeclared exception!
      try { 
        classFileWriter0.addTableSwitch(Integer.MIN_VALUE, 239);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter(";H~Rtj8;V|Qp(", ";H~Rtj8;V|Qp(", "NOT_FOUND");
      // Undeclared exception!
      try { 
        classFileWriter0.addTableSwitch(732, (byte) (-85));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad bounds: 732 -85
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!");
      // Undeclared exception!
      try { 
        classFileWriter0.addTableSwitch(647, 647);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -1
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Uo[CJ", "", "org.mozilla.javascript.ObjArray");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush(false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("y=J*#9<EK}<i", "y=J*#9<EK}<i", "y=J*#9<EK}<i");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush(1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "org.mozilla.classfile.ClassFileWriter$BootstrapEntry", "G~");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter(";q", ":6toAlih", ";q");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("\"lzOy_&e+H' 9", "0gZJJ>)$5RF70m~", "org.mozilla.classfile.ExceptionTableEntry");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadConstant(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "thH}8/3", "out of range increment");
      classFileWriter0.startMethod("", "", (short) (-1724));
      classFileWriter0.addLoadConstant(58);
      assertEquals(2, classFileWriter0.getCurrentCodeOffset());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("\"@l_$", "\"@l_$", "\"@l_$");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadConstant((int) (short)2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("/(<.7[C8!y&:qK0", "/(<.7[C8!y&:qK0", "dfK})");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadConstant(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Ll]Sn^/ebszDSwh;a$;", "l]Sn^/ebszDSwh;a$", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadConstant(0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("oR?+o<", "oR?+o<", "oR?+o<");
      // Undeclared exception!
      try { 
        classFileWriter0.addLineNumberEntry((short)227);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to stop
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("U\"^dfW", "~8{1Zn8ix5", "Please build and run with JDK 1.7 for +nvokedylamic support");
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        classFileWriter0.addInvokeDynamic("", "ouu$c||KP}U)pk<@Aa", (ClassFileWriter.MHandle) null, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad parameter signature: ouu$c||KP}U)pk<@Aa
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Unexpected operands", "Unexpected operands", "Empty stack");
      // Undeclared exception!
      try { 
        classFileWriter0.addInvoke(0, (String) null, "Unexpected operands", "Empty stack");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad parameter signature: Empty stack
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter(" \u2209 [0, ", " \u2209 [0, ", " \u2209 [0, ");
      classFileWriter0.addInterface(" \u2209 [0, ");
      assertEquals((short)32, ClassFileWriter.ACC_SYNCHRONIZED);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter(" \u2209 [0, ", " \u2209 [0, ", " \u2209 [0, ");
      classFileWriter0.addField("AgUdz %r3iPTlgRYH7P", "&", (short)63, (long) (short)63);
      assertEquals((short)32, ClassFileWriter.ACC_SYNCHRONIZED);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("GHNqo~wC", "c?tP=M^", "ConstantValue");
      classFileWriter0.addField("c?tP=M^", "GHNqo~wC", (short)0, (int) (short)0);
      assertEquals((short)64, ClassFileWriter.ACC_VOLATILE);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("qvQsWcBzS@AtjujX[", "", "qvQsWcBzS@AtjujX[");
      classFileWriter0.addField("(I)V", "qvQsWcBzS@AtjujX[", (short) (-1300), (-141.13706915));
      assertEquals("qvQsWcBzS@AtjujX[", classFileWriter0.getClassName());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      classFileWriter0.addField("org.mozilla.classfile.SuperBlock", "", (short) (-2039));
      assertEquals((short)256, ClassFileWriter.ACC_NATIVE);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Kx", "java/lang/String", "java/lang/String");
      // Undeclared exception!
      try { 
        classFileWriter0.addFStore(830);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -1
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.classfile.ClassFileField", "", "bad local variable type: ");
      // Undeclared exception!
      try { 
        classFileWriter0.addFLoad((-3648));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of range variable
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Unexpected operands", " \"3q;&ELXryE0zgZc^", "Unexpected operands");
      // Undeclared exception!
      try { 
        classFileWriter0.addExceptionHandler(0, 0, 2047, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad startLabel
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "BootstrapMethods", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addExceptionHandler((-1927), (-1927), 4, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad handlerLabel
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "Bad label for branch");
      // Undeclared exception!
      try { 
        classFileWriter0.addDStore(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -2
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("out of range byte", "append", "out of range byte");
      // Undeclared exception!
      try { 
        classFileWriter0.addDLoad(298);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addAStore(48);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -1
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("value ", "ConstantValue", (String) null);
      // Undeclared exception!
      try { 
        classFileWriter0.addALoad(6020);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.classfile.ClassFileWriter$BootstrapEntry", "org.mozilla.classfile.ClassFileWriter$BootstrapEntry", "org.mozilla.classfile.ClassFileWriter$BootstrapEntry");
      // Undeclared exception!
      try { 
        classFileWriter0.add(42, "org.mozilla.classfile.ClassFileWriter$BootstrapEntry", "org.mozilla.classfile.SuperBlock", "8+q_B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad opcode for field reference
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.add(0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad opcode for class reference
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("Bg~", "}|m>eHhl", "}|m>eHhl");
      // Undeclared exception!
      try { 
        classFileWriter0.add(191, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -1
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!");
      // Undeclared exception!
      try { 
        classFileWriter0.add((int) (short)166, (int) (short)166, 159);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -2
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("bad operand", "bad operand", "");
      // Undeclared exception!
      try { 
        classFileWriter0.add(7, 7, 2069);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected opcode for 2 operands
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "x)", "");
      // Undeclared exception!
      try { 
        classFileWriter0.add(192, (-4211));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected opcode for 1 operand
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("org.mozilla.javascript.UintMap", "org.mozilla.javascript.UintMap", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addILoad((-127));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of range variable
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("r'yI/;dsCzZ=}k@P`u", "r'yI/;dsCzZ=}k@P`u", "r'yI/;dsCzZ=}k@P`u");
      // Undeclared exception!
      try { 
        classFileWriter0.addLLoad(233);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!", "^3><Vkg_$ZBjli5O#S!");
      classFileWriter0.startMethod("Too big stack: ", "^3><Vkg_$ZBjli5O#S!", (short)166);
      classFileWriter0.addPush("^3><Vkg_$ZBjli5O#S!");
      assertEquals((short)1, classFileWriter0.getStackTop());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("qvQsWcBzS@AtjujX[", "", "qvQsWcBzS@AtjujX[");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush((-141.13706915));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("bad merge attempt", "bad merge attempt", "bad merge attempt");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush((int) (short)32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "{9Q\"\"JInEd03n_YPsbY", "?0d");
      // Undeclared exception!
      try { 
        classFileWriter0.addLStore(1026);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -2
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "bmtp35XY\"a$g$");
      // Undeclared exception!
      try { 
        classFileWriter0.addPush((-1749L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("ul*9.ZK'9xKo", "ul*9.ZK'9xKo", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addIStore(3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Stack underflow: -1
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "<init>", "");
      // Undeclared exception!
      try { 
        classFileWriter0.add(155);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected operands
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassFileWriter classFileWriter0 = new ClassFileWriter("", "", "");
      // Undeclared exception!
      try { 
        classFileWriter0.addLoadConstant(3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No method to add to
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }
}
