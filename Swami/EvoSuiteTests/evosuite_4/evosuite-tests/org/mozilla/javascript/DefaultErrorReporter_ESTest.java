/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 02:59:10 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultErrorReporter_ESTest extends DefaultErrorReporter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        errorReporter0.warning("TypeError: java", "TypeError: java", (-557101942), "TypeError: java", (-557101942));
       //  fail("Expecting exception: StackOverflowError");
       // Unstable assertion
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      //  // Unstable assertion: assertNotSame(errorReporter0, defaultErrorReporter0);
      
      // Undeclared exception!
      try { 
        errorReporter0.runtimeError("msJ.bad-default.valie", "msJ.bad-default.valie", 74, "msJ.bad-default.valie", 74);
       //  fail("Expecting exception: StackOverflowError");
       // Unstable assertion
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        defaultErrorReporter0.error("msJ.bad-default.valie", "msJ.bad-default.valie", 74, "msJ.bad-default.valie", 74);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // SyntaxError: msJ.bad-default.valie (msJ.bad-default.valie#74)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      // Undeclared exception!
      try { 
        errorReporter0.error("TypeError: z0~#O=8[&g", "TypeError: z0~#O=8[&g", (-1232), "TypeError: z0~#O=8[&g", (-1232));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1232
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }
}
