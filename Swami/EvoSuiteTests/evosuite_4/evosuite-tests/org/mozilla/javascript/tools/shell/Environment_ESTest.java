/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 18:55:04 GMT 2018
 */

package org.mozilla.javascript.tools.shell;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.tools.shell.Environment;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Environment environment0 = new Environment();
      Object[] objectArray0 = environment0.getIds();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Environment environment0 = new Environment(baseFunction0);
      Object[] objectArray0 = environment0.getIds();
      assertEquals(71, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Environment environment0 = new Environment();
      Object[] objectArray0 = environment0.getAllIds();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context.getCurrentContext();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(0);
      Environment environment0 = new Environment(nativeFloat64Array0);
      // Undeclared exception!
      try { 
        Environment.defineClass((ScriptableObject) environment0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.tools.shell.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Environment environment0 = new Environment(baseFunction0);
      Environment environment1 = new Environment();
      // Undeclared exception!
      try { 
        environment0.put("msg.isnt.function.in", (Scriptable) baseFunction0, (Object) environment1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }
}
