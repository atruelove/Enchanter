/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 23:14:27 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PipedOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Method;
import java.security.CodeSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.InterpretedFunction;
import org.mozilla.javascript.JavaAdapter;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaPackage;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeMath;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.ObjToIntMap;
import org.mozilla.javascript.Script;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaAdapter_ESTest extends JavaAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, (Class<?>[]) null, (ObjToIntMap) null);
      Class<InputStream> class1 = InputStream.class;
      // Undeclared exception!
      try { 
        JavaAdapter.convertResult(javaAdapter_JavaAdapterSignature0, class1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter$JavaAdapterSignature", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<NativeArray> class0 = NativeArray.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, classArray0, (ObjToIntMap) null);
      boolean boolean0 = javaAdapter_JavaAdapterSignature0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      try { 
        JavaAdapter.writeAdapterObject(javaAdapter0, objectOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(64);
      // Undeclared exception!
      try { 
        JavaAdapter.readAdapterObject(nativeArrayBuffer0, (ObjectInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter((Context) null, contextFactory0);
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter(context0, delegator0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: JavaAdapter requires at least one argument.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<NativeJavaTopPackage>[] classArray0 = (Class<NativeJavaTopPackage>[]) Array.newInstance(Class.class, 2);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter(context0, nativeArrayBuffer0, classArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Argument 0 is not Java class: null.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(nativeArrayBuffer0, 0, 200);
      Scriptable scriptable0 = context0.newArray((Scriptable) nativeFloat64Array0, (-30));
      JavaAdapter.init(context0, scriptable0, true);
      assertEquals(180, Context.VERSION_1_8);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      Function function0 = JavaAdapter.getFunction(nativeInt16Array0, "");
      assertNull(function0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<InterpretedFunction>[] classArray0 = (Class<InterpretedFunction>[]) Array.newInstance(Class.class, 6);
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      classArray0[0] = class0;
      classArray0[1] = classArray0[0];
      classArray0[2] = class0;
      classArray0[3] = classArray0[0];
      classArray0[4] = classArray0[2];
      classArray0[5] = class0;
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertArrayEquals(new int[] {0, 1, 2, 3, 4, 5}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<CodeSource>[] classArray0 = (Class<CodeSource>[]) Array.newInstance(Class.class, 0);
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      try { 
        JavaAdapter.getAdapterSelf(class0, class0);
        fail("Expecting exception: NoSuchFieldException");
      
      } catch(NoSuchFieldException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeArray> class0 = NativeArray.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 7);
      Class<Integer> class1 = Integer.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "org.mozilla.javascript.NativeBoolean", class0, classArray0, "?Uq][sk\"(|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(106);
      Class<NativeMath> class0 = NativeMath.class;
      Class<InputStream>[] classArray0 = (Class<InputStream>[]) Array.newInstance(Class.class, 4);
      Class<InputStream> class1 = InputStream.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "gN", class0, classArray0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<Float> class0 = Float.class;
      Class<Method>[] classArray0 = (Class<Method>[]) Array.newInstance(Class.class, 4);
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "", class0, classArray0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<BaseFunction> class0 = BaseFunction.class;
      Class<NativeJavaTopPackage>[] classArray0 = (Class<NativeJavaTopPackage>[]) Array.newInstance(Class.class, 2);
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "a$3", class0, classArray0, "a$3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 1, (-2231));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, nativeArrayBuffer0, 2, 0);
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, idFunctionObject0, idFunctionObject0, classArray0, (-4835449396872013077L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=2 MASTER=org.mozilla.javascript.typedarrays.NativeUint16Array@0
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeGenerator> class0 = NativeGenerator.class;
      objToIntMap0.put((Object) null, 22);
      Class<NativeIterator>[] classArray0 = (Class<NativeIterator>[]) Array.newInstance(Class.class, 9);
      Class<NativeIterator> class1 = NativeIterator.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      classArray0[2] = classArray0[1];
      classArray0[3] = class1;
      classArray0[4] = classArray0[0];
      classArray0[5] = classArray0[1];
      classArray0[6] = classArray0[2];
      classArray0[7] = classArray0[1];
      classArray0[8] = classArray0[1];
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "_aVHxveFwP6]", class0, classArray0, "_aVHxveFwP6]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      objToIntMap0.intern((Object) null);
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      Class<NativeWith>[] classArray0 = (Class<NativeWith>[]) Array.newInstance(Class.class, 2);
      Class<NativeWith> class1 = NativeWith.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "oz", class0, classArray0, "oz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      Class<NativeWith>[] classArray0 = (Class<NativeWith>[]) Array.newInstance(Class.class, 2);
      Class<NativeWith> class1 = NativeWith.class;
      classArray0[0] = class1;
      classArray0[1] = class1;
      byte[] byteArray0 = JavaAdapter.createAdapterCode(objToIntMap0, "oz", class0, classArray0, "oz");
      assertEquals(4789, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(3);
      Class<IdFunctionObjectES6> class0 = IdFunctionObjectES6.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 9);
      Class<String> class1 = String.class;
      classArray0[0] = class1;
      // Undeclared exception!
      JavaAdapter.createAdapterCode(objToIntMap0, "", class0, classArray0, "2s");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 1, (-2231));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, nativeArrayBuffer0, 2, 0);
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, idFunctionObject0, idFunctionObject0, classArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=2 MASTER=org.mozilla.javascript.typedarrays.NativeUint16Array@0
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(nativeArrayBuffer0, (-27), (-3098));
      Object[] objectArray0 = new Object[1];
      Object object0 = JavaAdapter.callMethod(contextFactory0, nativeInt8Array0, (Function) null, objectArray0, 4080L);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 1, (-2231));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, nativeArrayBuffer0, 2, 0);
      JavaAdapter javaAdapter0 = new JavaAdapter();
      Synchronizer synchronizer0 = new Synchronizer(nativeArrayBuffer0, javaAdapter0);
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod((ContextFactory) null, synchronizer0, idFunctionObject0, (Object[]) null, 130);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      NativeNumber nativeNumber0 = new NativeNumber((-1504.0));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(javaAdapter0, nativeNumber0, 2, 47);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        javaAdapter0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=2 MASTER=org.mozilla.javascript.JavaAdapter@1
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
