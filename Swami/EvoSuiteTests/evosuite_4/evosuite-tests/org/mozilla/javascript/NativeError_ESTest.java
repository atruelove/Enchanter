/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 01:48:14 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeError_ESTest extends NativeError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Context context0 = Context.enter();
      NativeError nativeError0 = new NativeError();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      IdFunctionObject idFunctionObject0 = nativeError0.exportAsJSClass(180, nativeFloat32Array0, true);
      // Undeclared exception!
      try { 
        nativeError0.defineOwnProperties(context0, idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type number
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeError nativeError0 = new NativeError();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      IdFunctionObject idFunctionObject0 = nativeError0.exportAsJSClass(6, nativeFloat32Array0, true);
      Object[] objectArray0 = new Object[9];
      NativeError nativeError1 = NativeError.make(context0, nativeFloat32Array0, idFunctionObject0, objectArray0);
      objectArray0[0] = (Object) nativeError1;
      contextFactory0.doTopCall(idFunctionObject0, context0, nativeError1, nativeFloat32Array0, objectArray0);
      assertEquals(1, idFunctionObject0.getArity());
      assertEquals(1, idFunctionObject0.getLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeError0, "Error", 24, "prepareStackTrace", 1883, nativeError0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeError0.execIdCall(idFunctionObjectES6_0, context0, idFunctionObjectES6_0, idFunctionObjectES6_0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 24
         //
         verifyException("org.mozilla.javascript.NativeError", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeError nativeError0 = new NativeError();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      IdFunctionObject idFunctionObject0 = nativeError0.exportAsJSClass(6, nativeFloat32Array0, true);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) nativeError0;
      NativeError nativeError1 = (NativeError)contextFactory0.doTopCall(idFunctionObject0, context0, nativeError0, nativeFloat32Array0, objectArray0);
      assertEquals("Error", nativeError1.getClassName());
      assertEquals(1, idFunctionObject0.getLength());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Object object0 = nativeError0.getStackDelegated(nativeError0);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeError0, object0, 1, "(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;", 13, nativeError0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeError0.execIdCall(idFunctionObjectES6_0, context0, nativeError0, idFunctionObjectES6_0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=1 MASTER=Error: 
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
