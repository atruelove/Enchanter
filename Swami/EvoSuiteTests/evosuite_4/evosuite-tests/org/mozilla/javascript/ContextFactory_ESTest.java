/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 00:47:44 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Symbol;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.typedarrays.NativeUint32Array;
import org.mozilla.javascript.xml.XMLLib;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContextFactory_ESTest extends ContextFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory_GlobalSetter0.setContextFactoryGlobal(contextFactory0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.seal();
      assertTrue(contextFactory0.isSealed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.disableContextListening();
      // Undeclared exception!
      try { 
        contextFactory0.removeListener(contextFactory_Listener0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      SymbolKey symbolKey0 = SymbolKey.SPECIES;
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(13);
      nativeContinuation0.put((Symbol) symbolKey0, (Scriptable) nativeUint32Array0, (Object) contextFactory0);
      Context context0 = contextFactory0.enter();
      ScriptableObject.hasProperty((Scriptable) nativeContinuation0, 921);
      nativeUint32Array0.setArrayElement(110, "");
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction0).run(any(org.mozilla.javascript.Context.class));
      contextFactory0.call(contextAction0);
      Object[] objectArray0 = new Object[1];
      context0.newArray((Scriptable) nativeContinuation0, objectArray0);
      ScriptableObject.hasProperty((Scriptable) nativeContinuation0, "error reporter");
      objectArray0[0] = (Object) context0;
      contextFactory0.doTopCall(nativeContinuation0, context0, nativeContinuation0, nativeContinuation0, objectArray0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      nativeUint32Array0.delete("error reporter");
      contextFactory0.removeListener(contextFactory_Listener0);
      contextFactory0.exit();
      ContextAction contextAction1 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction1).run(any(org.mozilla.javascript.Context.class));
      contextFactory0.call(contextAction1);
      Context context1 = Context.enter();
      contextFactory0.observeInstructionCount(context1, (-839));
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      contextFactory0.observeInstructionCount(context1, 13);
      contextFactory0.onContextCreated(context0);
      assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      contextFactory0.observeInstructionCount(context0, 13);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      contextFactory0.isSealed();
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory.getGlobalSetter();
      // Undeclared exception!
      try { 
        ContextFactory.initGlobal(contextFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ContextFactory.initGlobal((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory.initGlobal(contextFactory0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.checkNotSealed();
      Context context0 = contextFactory0.enter();
      context0.instructionCount = 0;
      contextFactory0.onContextReleased(context0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.hasFeature(context0, 15);
      classLoader0.getParent();
      context0.lastInterpreterFrame = null;
      contextFactory0.initApplicationClassLoader(classLoader0);
      // Undeclared exception!
      try { 
        contextFactory0.addListener((ContextFactory.Listener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        contextFactory0.initApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        contextFactory0.initApplicationClassLoader((ClassLoader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // loader is null
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.initApplicationClassLoader(classLoader0);
      assertFalse(contextFactory0.isSealed());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        contextFactory0.hasFeature(context0, 387);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 387
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 14);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0, false);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = Context.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 10);
      assertFalse(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 7);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = context0.stringIsCompilableUnit("language version");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = Context.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 1);
      assertFalse(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = ContextFactory.hasExplicitGlobal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      // Undeclared exception!
      try { 
        ContextFactory.getGlobalSetter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      XMLLib.Factory xMLLib_Factory0 = contextFactory0.getE4xImplementationFactory();
      assertNotNull(xMLLib_Factory0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 9);
      assertFalse(boolean0);
  }
}
