/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 04:05:42 GMT 2018
 */

package org.mozilla.javascript.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Callable;
import org.mozilla.javascript.ConsString;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeFunction;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.ScriptRuntime;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.optimizer.OptRuntime;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OptRuntime_ESTest extends OptRuntime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble((-1.0));
      assertEquals((-1.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble(1.0);
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble(0.0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = OptRuntime.padStart(objectArray0, 0);
      assertNotSame(objectArray1, objectArray0);
      assertEquals(0, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        OptRuntime.newObjectSpecial(context0, contextFactory0, context0.emptyArgs, (Scriptable) null, (Scriptable) null, (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array();
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeUint32Array0, 1431655765, 13);
      Object[] objectArray0 = OptRuntime.getGeneratorStackState(optRuntime_GeneratorState0);
      assertNotNull(objectArray0);
      assertEquals(13, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeContinuation0, 4, 1);
      Object[] objectArray0 = OptRuntime.getGeneratorLocalsState(optRuntime_GeneratorState0);
      assertEquals(4, objectArray0.length);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[6];
      String string0 = OptRuntime.encodeIntArray(intArray0);
      assertEquals("\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(16);
      Object object0 = OptRuntime.elemIncrDecr((Object) "\u0001\u0000\u02C6\uFFFF\uF861\u0000\u0702\u0000\u0372\u0000\u0304", 701.54, context0, (Scriptable) nativeUint16Array0, 1381);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Context context0 = Context.getCurrentContext();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral(objectArray0, "language version", 8, context0, (Scriptable) baseFunction0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.OptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral(objectArray0, (String) null, 0, context0, (Scriptable) null);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint16Array0, (Object) null, 2, "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", 4, nativeUint16Array0);
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral((Object[]) null, "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", 1, (Context) null, (Scriptable) idFunctionObjectES6_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(16);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint16Array0, "\u0001\u0000\u02C6\uFFFF\uF861\u0000\u0702\u0000\u0372\u0000\u0304", 18, "error reporter", 2578, nativeUint16Array0);
      // Undeclared exception!
      try { 
        OptRuntime.callSpecial(context0, idFunctionObjectES6_0, nativeUint16Array0, context0.emptyArgs, (Scriptable) null, nativeUint16Array0, 13, "Unknown icode : ", 13);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(0);
      // Undeclared exception!
      try { 
        OptRuntime.callName0("", context0, nativeUint8ClampedArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        OptRuntime.callName(context0.emptyArgs, "getClass", context0, importerTopLevel0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"getClass\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(0);
      Synchronizer synchronizer0 = new Synchronizer(nativeFloat32Array0);
      Object[] objectArray0 = new Object[2];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext((Context) null);
      // Undeclared exception!
      try { 
        OptRuntime.callN(synchronizer0, synchronizer0, objectArray0, context0, synchronizer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.typedarrays.NativeFloat32Array cannot be cast to org.mozilla.javascript.Function
         //
         verifyException("org.mozilla.javascript.Synchronizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeFunction nativeFunction0 = mock(NativeFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(nativeFunction0).getAssociatedValue(any());
      doReturn((Scriptable) null, (Scriptable) null).when(nativeFunction0).getParentScope();
      doReturn((Scriptable) null).when(nativeFunction0).getPrototype();
      Scriptable scriptable0 = OptRuntime.createNativeGenerator(nativeFunction0, nativeFunction0, nativeFunction0, 8, (-1501));
      Synchronizer synchronizer0 = new Synchronizer(scriptable0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.call2((Callable) null, scriptable0, synchronizer0, synchronizer0, context0, scriptable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.OptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null, (Object) null);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        OptRuntime.call0(synchronizer0, synchronizer0, context0, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Synchronizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.bindThis((NativeFunction) null, context0, (Scriptable) null, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConsString consString0 = (ConsString)OptRuntime.add((Object) "ru.moz)la.javascipt.optimizer.OptRuiime", (double) 2281);
      assertEquals(43, consString0.length());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        OptRuntime.add((Object) nativeObject0, (double) 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble((-1952.0));
      Object object0 = OptRuntime.add((Object) double0, (-1952.0));
      assertEquals((-3904.0), object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(4);
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeArrayBuffer0, 5, 1);
      Object object0 = OptRuntime.add((double) 5, (Object) optRuntime_GeneratorState0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptRuntime optRuntime0 = new OptRuntime();
      assertEquals(2, ScriptRuntime.ENUMERATE_ARRAY);
  }
}
