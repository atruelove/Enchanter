/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 03:54:57 GMT 2018
 */

package org.mozilla.javascript.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.FunctionCall;
import org.mozilla.javascript.ast.FunctionNode;
import org.mozilla.javascript.ast.LabeledStatement;
import org.mozilla.javascript.ast.PropertyGet;
import org.mozilla.javascript.ast.SwitchStatement;
import org.mozilla.javascript.ast.XmlMemberGet;
import org.mozilla.javascript.ast.XmlPropRef;
import org.mozilla.javascript.optimizer.OptFunctionNode;
import org.mozilla.javascript.optimizer.Optimizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimizer_ESTest extends Optimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      FunctionCall functionCall0 = new FunctionCall(9);
      XmlPropRef xmlPropRef0 = new XmlPropRef(2);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet(functionCall0, xmlPropRef0, (-183));
      functionCall0.addChild(xmlMemberGet0);
      functionNode0.addChildToBack(functionCall0);
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.flattenSymbolTable(false);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertNotSame(functionNode1, functionNode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      Node node0 = new Node(36);
      functionNode0.addChildToBack(node0);
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.flattenSymbolTable(false);
      functionNode1.addFunction(optFunctionNode0.fnode);
      // Undeclared exception!
      try { 
        optimizer0.optimize(functionNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.Optimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      Node node0 = new Node(37);
      functionNode0.addChildToBack(node0);
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.flattenSymbolTable(false);
      functionNode1.addFunction(optFunctionNode0.fnode);
      // Undeclared exception!
      try { 
        optimizer0.optimize(functionNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.Optimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.addChildToBack(functionNode1);
      functionNode0.flattenSymbolTable(true);
      functionNode0.setType(25);
      functionNode1.addFunction(optFunctionNode0.fnode);
      // Undeclared exception!
      try { 
        optimizer0.optimize(functionNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.Optimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.addChildToBack(functionNode1);
      optFunctionNode0.fnode.flattenSymbolTable(true);
      SwitchStatement switchStatement0 = new SwitchStatement();
      switchStatement0.setType(40);
      functionNode0.addChildToBack(switchStatement0);
      optFunctionNode0.fnode.setType(17);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertEquals(0, Node.END_UNREACHED);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      optFunctionNode0.fnode.flattenSymbolTable(false);
      LabeledStatement labeledStatement0 = new LabeledStatement();
      labeledStatement0.addChildToFront(functionNode1);
      functionNode0.addChildrenToFront(labeledStatement0);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertEquals(3, Node.LOCAL_BLOCK_PROP);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      Node node0 = new Node(40);
      functionNode0.addChildToBack(node0);
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.flattenSymbolTable(false);
      PropertyGet propertyGet0 = new PropertyGet();
      functionNode1.addChildAfter(propertyGet0, node0);
      functionNode0.setType(2);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertEquals(1, Node.END_DROPS_OFF);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      Node node0 = new Node(40);
      functionNode0.addChildToBack(node0);
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.flattenSymbolTable(false);
      functionNode0.setType(2);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertEquals(0, Node.BOTH);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Optimizer optimizer0 = new Optimizer();
      FunctionNode functionNode0 = new FunctionNode();
      OptFunctionNode optFunctionNode0 = new OptFunctionNode(functionNode0);
      FunctionNode functionNode1 = new FunctionNode();
      functionNode0.addChildToBack(functionNode1);
      optFunctionNode0.fnode.flattenSymbolTable(false);
      SwitchStatement switchStatement0 = new SwitchStatement(1, 4);
      functionNode0.addChildToBack(switchStatement0);
      functionNode0.setType(21);
      functionNode1.addFunction(optFunctionNode0.fnode);
      optimizer0.optimize(functionNode1);
      assertEquals(26, Node.DESTRUCTURING_SHORTHAND);
  }
}
