/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 02:16:25 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Set;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.FieldAndMethods;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaConstructor;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.NativeScript;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeObject_ESTest extends NativeObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeObject.ValueCollection nativeObject_ValueCollection0 = nativeObject0.new ValueCollection();
      int int0 = nativeObject_ValueCollection0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeObject.KeySet nativeObject_KeySet0 = nativeObject0.new KeySet();
      int int0 = nativeObject_KeySet0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeObject.KeySet nativeObject_KeySet0 = nativeIterator_StopIteration0.new KeySet();
      boolean boolean0 = nativeObject_KeySet0.contains(nativeIterator_StopIteration0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.putProperty((Scriptable) nativeObject0, 13, (Object) null);
      BiFunction<NativeScript, NativeJavaMethod, NativeContinuation> biFunction0 = (BiFunction<NativeScript, NativeJavaMethod, NativeContinuation>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any(org.mozilla.javascript.NativeScript.class) , any(org.mozilla.javascript.NativeJavaMethod.class));
      // Undeclared exception!
      try { 
        nativeObject0.replaceAll(biFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeObject$EntrySet$1$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeObject.EntrySet nativeObject_EntrySet0 = nativeObject0.new EntrySet();
      int int0 = nativeObject_EntrySet0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Byte byte0 = new Byte((byte)0);
      Object object0 = nativeObject0.remove((Object) byte0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      HashMap<ArrowFunction, FieldAndMethods> hashMap0 = new HashMap<ArrowFunction, FieldAndMethods>();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.putAll(hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Set<Object> set0 = nativeIterator_StopIteration0.keySet();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.put((Object) set0, (Object) "StopIteration");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      String string0 = nativeObject0.toString();
      assertEquals("[object Object]", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[7];
      objectArray0[4] = (Object) "Object";
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, objectArray0[4], 110, 13);
      // Undeclared exception!
      try { 
        nativeObject0.execIdCall(idFunctionObject0, (Context) null, idFunctionObject0, nativeObject0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 110
         //
         verifyException("org.mozilla.javascript.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, (Object) null, 0, 4);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        nativeObject0.execIdCall(idFunctionObject0, context0, nativeUint16Array0, nativeUint16Array0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=0 MASTER=org.mozilla.javascript.typedarrays.NativeUint16Array@0
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.putProperty((Scriptable) nativeObject0, 13, (Object) null);
      boolean boolean0 = nativeObject0.containsValue((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      ScriptableObject.putProperty((Scriptable) nativeObject0, 13, (Object) null);
      boolean boolean0 = nativeObject0.containsValue(consumer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Double double0 = new Double((-533.38));
      BiFunction<NativeBoolean, ArrowFunction, NativeJavaConstructor> biFunction0 = (BiFunction<NativeBoolean, ArrowFunction, NativeJavaConstructor>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any(org.mozilla.javascript.NativeBoolean.class) , any(org.mozilla.javascript.ArrowFunction.class));
      Object object0 = nativeObject0.compute(double0, biFunction0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = nativeIterator_StopIteration0.getOrDefault("org.mozilla.javascript.NativeObject$EntrySet$1$1", "org.mozilla.javascript.NativeObject$EntrySet$1$1");
      assertEquals("org.mozilla.javascript.NativeObject$EntrySet$1$1", object0);
  }
}
