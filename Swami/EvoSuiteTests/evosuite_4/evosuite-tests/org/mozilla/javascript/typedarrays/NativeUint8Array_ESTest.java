/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 21:38:42 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeUint8Array_ESTest extends NativeUint8Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array((NativeArrayBuffer) null, 184, 5539);
      // Undeclared exception!
      try { 
        nativeUint8Array0.set(1546, (Integer) nativeUint8Array0.EMPTY);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(2148);
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint8Array0.realThis(nativeUint8Array0, (IdFunctionObject) null);
      assertEquals(2148, nativeTypedArrayView0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      Object object0 = nativeUint8Array0.js_get(0);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeArrayBuffer0, object0, 2, "log", 0, nativeArrayBuffer0);
      // Undeclared exception!
      try { 
        nativeUint8Array0.realThis(nativeArrayBuffer0, idFunctionObjectES6_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"log\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(2148);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initSafeStandardObjects((ScriptableObject) nativeUint8Array0, true);
      Object object0 = nativeUint8Array0.js_set(0, scriptableObject0);
      assertEquals("Uint8Array", scriptableObject0.getClassName());
      assertNull(object0);
      assertEquals("Uint8Array", nativeUint8Array0.getClassName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      Object object0 = nativeUint8Array0.js_set(2589, nativeUint8Array0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(nativeArrayBuffer0, 0, 2);
      // Undeclared exception!
      try { 
        nativeUint8Array0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(2148);
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint8Array0.construct(nativeArrayBuffer0, 4, (-1231));
      assertEquals((-1231), nativeTypedArrayView0.getByteLength());
      assertEquals(4, nativeTypedArrayView0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(5);
      // Undeclared exception!
      try { 
        nativeUint8Array0.set((-2751), (Integer) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      // Undeclared exception!
      try { 
        nativeUint8Array0.get(99);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint8Array", e);
      }
  }
}
