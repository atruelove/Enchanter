/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 21:44:52 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeDataView;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeDataView_ESTest extends NativeDataView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, "DataView", 4, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, nativeDataView0, nativeDataView0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // RangeError: offset out of range
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 13, "DataView", 13, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, nativeDataView0, nativeDataView0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: missing required offset parameter
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeDataView0, "DataView", 8, "DataView", 2, nativeDataView0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        idFunctionObjectES6_0.call(context0, nativeDataView0, nativeDataView0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: missing required offset parameter
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      // Undeclared exception!
      try { 
        nativeDataView0.initPrototypeId(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeDataView", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      int int0 = nativeDataView0.findPrototypeId("setFloat64");
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      int int0 = nativeDataView0.findPrototypeId("selot32");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", (-1346), 13);
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1346
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeDataView", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 17, 13);
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 16, "DataView", 16, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, nativeDataView0, nativeDataView0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: missing required offset parameter
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 15, 13);
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 14, "DataView", 14, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 12, "DataView", 12, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 11, 13);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 10, "DataView", 10, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 9, 13);
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 7, "DataView", 7, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 6, "DataView", 6, nativeDataView0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 5, "DataView", 5, nativeDataView0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"DataView\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 3, 13);
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeDataView nativeDataView0 = new NativeDataView(nativeArrayBuffer0, 2, 2);
      Object[] objectArray0 = Context.emptyArgs;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, nativeArrayBuffer0.UNINITIALIZED_CONST, 2, 2);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=2 MASTER=org.mozilla.javascript.typedarrays.NativeDataView@3
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeDataView nativeDataView0 = new NativeDataView(nativeArrayBuffer0, 2, 8);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, "DataView", 4, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, nativeDataView0, nativeDataView0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.mozilla.javascript.typedarrays.ByteIo", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NativeDataView nativeDataView0 = new NativeDataView();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeDataView0, "DataView", 2, 13);
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        nativeDataView0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }
}
