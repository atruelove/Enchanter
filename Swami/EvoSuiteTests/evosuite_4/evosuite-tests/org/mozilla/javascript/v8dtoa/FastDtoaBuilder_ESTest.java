/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:59:20 GMT 2018
 */

package org.mozilla.javascript.v8dtoa;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.v8dtoa.FastDtoaBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastDtoaBuilder_ESTest extends FastDtoaBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      String string0 = fastDtoaBuilder0.toString();
      assertEquals("[chars:, point:0]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.point = 3;
      String string0 = fastDtoaBuilder0.format();
      assertEquals("000", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.end = 22;
      fastDtoaBuilder0.point = 21;
      String string0 = fastDtoaBuilder0.format();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.append('4');
      String string0 = fastDtoaBuilder0.format();
      assertEquals("0.4", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.point = (int) 'I';
      fastDtoaBuilder0.append('I');
      fastDtoaBuilder0.append('I');
      String string0 = fastDtoaBuilder0.format();
      assertEquals("I.Ie+72", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.reset();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.point = (-1571);
      fastDtoaBuilder0.format();
      fastDtoaBuilder0.decreaseLast();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FastDtoaBuilder fastDtoaBuilder0 = new FastDtoaBuilder();
      fastDtoaBuilder0.append('-');
      String string0 = fastDtoaBuilder0.format();
      assertEquals("-0.0", string0);
  }
}
