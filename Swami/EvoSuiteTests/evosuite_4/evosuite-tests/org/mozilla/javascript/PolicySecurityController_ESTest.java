/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 00:41:52 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Callable;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.GeneratedClassLoader;
import org.mozilla.javascript.PolicySecurityController;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolicySecurityController_ESTest extends PolicySecurityController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      Class<?> class0 = policySecurityController0.getStaticSecurityDomainClassInternal();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      Object object0 = policySecurityController0.getDynamicSecurityDomain((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ClassLoader classLoader0 = contextFactory0.getApplicationClassLoader();
      GeneratedClassLoader generatedClassLoader0 = policySecurityController0.createClassLoader(classLoader0, classLoader0);
      assertNotNull(generatedClassLoader0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        policySecurityController0.callWithDomain((Object) null, context0, (Callable) null, nativeArrayBuffer0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.PolicySecurityController$SecureCallerImpl", e);
      }
  }
}
