/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 03:16:56 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.TokenStream;
import org.mozilla.javascript.ast.AstRoot;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenStream_ESTest extends TokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("Ti9RcZ`{FlXf");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      String string0 = tokenStream0.tokenToString((-1846));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("kt0Q=FnQkgqpVOA&&%", "M}-<Qe", (-2386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2386
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Parser parser0 = new Parser();
      AstRoot astRoot0 = parser0.parse("_o&!Hnt$6u4Y", (String) null, 3061);
      assertEquals(3061, astRoot0.getEndLineno());
      assertEquals(12, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("kt0Q=FnQkgqp;OA&&%", "kt0Q=FnQkgqp;OA&&%", 1324);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (kt0Q=FnQkgqp;OA&&%#1324)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("return", 154, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("kt0Q=FnCkp;OA&&%", "M}-<Qe", (-2360));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2360
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("let (", (-1215), false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "uHW>ps[,uL(", 65536);
      int int0 = tokenStream0.getToken();
      assertEquals(3, tokenStream0.getCursor());
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("^:/o'h+%n", 919, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("@{BHLmps", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("o4R_uM%", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("lt (", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("et (", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("lt$", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("rt", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("Ti9RcZ`{FlXf");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      boolean boolean0 = tokenStream0.isXMLAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = TokenStream.isKeyword("let (", 588, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = TokenStream.isJSSpace(65536);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = new Parser();
      StringReader stringReader0 = new StringReader("v6vN'k< ~GqAn");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 65536);
      int int0 = tokenStream0.getTokenLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "org.mozilla.javascript.regexp.RegExpImpl", (-6450));
      int int0 = tokenStream0.getTokenEnd();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "\"", (-2691));
      int int0 = tokenStream0.getTokenBeg();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "7TY35o&`", 65536);
      tokenStream0.getToken();
      // Undeclared exception!
      try { 
        tokenStream0.getToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse(" -d~nFyi`IIu[?", "LA8gAze3rC&", 1000000000);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (LA8gAze3rC&#1000000000)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "><ho}M:psw8B^1']-Y", 147);
      tokenStream0.getToken();
      int int0 = tokenStream0.getToken();
      assertEquals(1, tokenStream0.getTokenLength());
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("t0Q=F^Qkqp;OA&z&%", "org.mozilla.javascript.json.JsonParser$ParseException", (-2386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2386
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("|DA~^[^qJ$+9", "LA8gAze3rC&", 1000000000);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (LA8gAze3rC&#1000000000)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("$?E '*33~i", "M}-<Qe", (-2386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2386
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      StringReader stringReader0 = new StringReader("/_*9:Z)1$J@_\"c-[5J7");
      stringReader0.read();
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "synchronized", 588);
      assertEquals(588, astRoot0.getEndLineno());
      assertEquals(11, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("M}-<Qe", "M}-<Qe", (-2386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2386
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, ",Gx{l", 65536);
      tokenStream0.getToken();
      tokenStream0.getToken();
      int int0 = tokenStream0.getToken();
      assertEquals(4, tokenStream0.getCursor());
      assertEquals(86, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("T]S^wM0f", "throw", 1825);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (throw#1825)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Parser parser0 = new Parser();
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "[]ka[&", 823);
      int int0 = tokenStream0.getToken();
      assertEquals(1, tokenStream0.getTokenLength());
      assertEquals(84, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "", 2012);
      assertEquals(10, astRoot0.getLength());
      assertEquals(2012, astRoot0.getEndLineno());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("synchronized", "M}ue", (-2386));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Parser parser0 = new Parser();
      StringReader stringReader0 = new StringReader("let (");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, (-3012));
      int int0 = tokenStream0.getToken();
      assertEquals(3, tokenStream0.getTokenLength());
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("java.io.ObectInputStrea_");
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "synchronized", 588);
      assertEquals(588, astRoot0.getBaseLineno());
      assertEquals(24, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Parser parser0 = new Parser();
      // Undeclared exception!
      try { 
        parser0.parse("kt0Q=FnCkgp;OA&&%", "M}-<Qe", (-2386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2386
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("error reporter");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 0);
      tokenStream0.getSourceString();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "org.mozilla.javascript.regexp.RegExpImpl", (-6450));
      char char0 = tokenStream0.getQuoteChar();
      assertEquals(0, tokenStream0.getCursor());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      StringReader stringReader0 = new StringReader(".2cc8AUolSam$Tv");
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "synchronized", 588);
      assertEquals(588, astRoot0.getEndLineno());
      assertEquals(15, astRoot0.getLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      parser0.parse("ENUM_INIT_KEYS", "ENUM_INIT_KEYS", 318);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "switch", 823);
      tokenStream0.getFirstXMLToken();
      assertEquals(6, tokenStream0.getTokenEnd());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "7?TT35o`", 65536);
      tokenStream0.getToken();
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      tokenStream0.getToken();
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "x !UfZr6QGH5", 989);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "M`ZD;=V", 65536);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("Ti9RcZ`{FlXf");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      tokenStream0.getFirstXMLToken();
      assertEquals((-1), tokenStream0.getTokenBeg());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, ">SmK~", 65536);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Parser parser0 = new Parser();
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "break", 0);
      int int0 = tokenStream0.getCursor();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Parser parser0 = new Parser();
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "Cannot capture continuation from JavaScript code not called directly by executeScriptWithContinuations or callFunctionWithContinuations", 115);
      tokenStream0.getCommentType();
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      int int0 = tokenStream0.getToken();
      assertEquals(1, tokenStream0.getTokenLength());
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Parser parser0 = new Parser();
      StringReader stringReader0 = new StringReader("*RiQRg&");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 65536);
      // Undeclared exception!
      try { 
        tokenStream0.getAndResetCurrentComment();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "uHW>ps[,uL(", 65536);
      String string0 = tokenStream0.getAndResetCurrentComment();
      assertEquals(0, tokenStream0.getCursor());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("error reporter");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 0);
      boolean boolean0 = tokenStream0.eof();
      assertFalse(boolean0);
      assertEquals(0, tokenStream0.getCursor());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      stringReader0.close();
      String string0 = tokenStream0.getLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      StringReader stringReader0 = new StringReader("/_*9:Z)1$J@_\"c-[5J7");
      AstRoot astRoot0 = parser0.parse((Reader) stringReader0, "null", 588);
      assertEquals(17, astRoot0.getLength());
      assertEquals(588, astRoot0.getLineno());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      String string0 = tokenStream0.getLine();
      assertEquals("4!a(0IJeMc'M]C`#4:", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      StringReader stringReader0 = new StringReader("4!a(0IJeMc'M]C`#4:");
      TokenStream tokenStream0 = new TokenStream(parser0, stringReader0, (String) null, 39);
      // Undeclared exception!
      try { 
        tokenStream0.getFirstXMLToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0);
      TokenStream tokenStream0 = new TokenStream(parser0, (Reader) null, "switch", 823);
      int int0 = tokenStream0.getToken();
      assertEquals(5, tokenStream0.getCursor());
      assertEquals(115, int0);
  }
}
