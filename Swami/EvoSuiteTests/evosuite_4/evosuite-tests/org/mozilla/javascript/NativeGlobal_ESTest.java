/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 02:43:23 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeGlobal;
import org.mozilla.javascript.TopLevel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeGlobal_ESTest extends NativeGlobal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Byte byte0 = new Byte((byte)15);
      Object[] objectArray0 = new Object[9];
      objectArray0[1] = (Object) byte0;
      Object object0 = NativeGlobal.js_parseInt(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-113));
      Object[] objectArray0 = new Object[11];
      objectArray0[1] = (Object) byte0;
      Object object0 = NativeGlobal.js_parseInt(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long long0 = new Long((-1010L));
      Object[] objectArray0 = new Object[15];
      objectArray0[0] = (Object) long0;
      Object object0 = NativeGlobal.js_parseInt(objectArray0);
      assertEquals((-1010.0), object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) " els";
      Object object0 = NativeGlobal.js_parseInt(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[11];
      objectArray0[0] = (Object) "";
      Object object0 = NativeGlobal.js_parseInt(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-19));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) byte0;
      Object object0 = NativeGlobal.js_parseFloat(objectArray0);
      assertEquals((-19.0), object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) " els";
      Object object0 = NativeGlobal.js_parseFloat(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object[] objectArray0 = new Object[11];
      objectArray0[0] = (Object) "";
      Object object0 = NativeGlobal.js_parseFloat(objectArray0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Context context0 = Context.enter();
      Object object0 = NativeGlobal.js_parseFloat(context0.emptyArgs);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.ReferenceError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      boolean boolean0 = NativeGlobal.isEvalFunction(baseFunction0);
      assertFalse(boolean0);
  }
}
