/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 02:54:02 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.NativeFunction;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeGenerator_ESTest extends NativeGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      String string0 = nativeGenerator0.getClassName();
      assertTrue(nativeGenerator0.isSealed());
      assertEquals("Generator", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArrayBuffer0, true);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "ArrayBuffer";
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeGenerator0, "send", objectArray0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // TypeError: Attempt to send value to newborn generator
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArrayBuffer0, false);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeGenerator0, nativeGenerator0, 0, 1);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeGenerator0.execIdCall(idFunctionObject0, context0, nativeArrayBuffer0, nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=0 MASTER=org.mozilla.javascript.NativeGenerator@6
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      NativeGenerator nativeGenerator0 = new NativeGenerator(nativeUint16Array0, (NativeFunction) null, nativeUint16Array0);
      // Undeclared exception!
      try { 
        nativeGenerator0.initPrototypeId(13);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 13
         //
         verifyException("org.mozilla.javascript.NativeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArrayBuffer0, false);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeGenerator0, "throw", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // undefined
         //
         verifyException("org.mozilla.javascript.NativeGenerator", e);
      }
  }
}
