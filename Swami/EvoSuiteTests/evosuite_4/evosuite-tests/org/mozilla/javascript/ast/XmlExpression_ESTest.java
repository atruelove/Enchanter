/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:30:54 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ContinueStatement;
import org.mozilla.javascript.ast.ErrorNode;
import org.mozilla.javascript.ast.IfStatement;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.XmlExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlExpression_ESTest extends XmlExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0);
      ErrorNode errorNode0 = new ErrorNode(3612, 26);
      xmlExpression0.setExpression(errorNode0);
      StringBuilder stringBuilder0 = new StringBuilder("&{<eRJB,ucHNJXT,Wy");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("&{<eRJB,ucHNJXT,Wy0\tXML 0 1\n3612\t  ERROR 3612 26\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("&{<eRJB,ucHNJXT,Wy0\tXML 0 1\n3612\t  ERROR 3612 26\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Name name0 = new Name(18, "nw~mE#RO");
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      XmlExpression xmlExpression0 = new XmlExpression((-2246), continueStatement0);
      String string0 = xmlExpression0.toSource(1);
      assertEquals("  {  continue nw~mE#RO;\n}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Name name0 = new Name(18, "nw~mE#RO");
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      XmlExpression xmlExpression0 = new XmlExpression((-2246), continueStatement0);
      xmlExpression0.setIsXmlAttribute(true);
      assertTrue(xmlExpression0.isXmlAttribute());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0);
      AstNode astNode0 = xmlExpression0.getExpression();
      assertNull(astNode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IfStatement ifStatement0 = new IfStatement();
      XmlExpression xmlExpression0 = new XmlExpression(0, ifStatement0);
      boolean boolean0 = xmlExpression0.isXmlAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0, (-1167));
      assertEquals(23, Node.DESTRUCTURING_PARAMS);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression();
      assertEquals(1, Node.END_DROPS_OFF);
  }
}
