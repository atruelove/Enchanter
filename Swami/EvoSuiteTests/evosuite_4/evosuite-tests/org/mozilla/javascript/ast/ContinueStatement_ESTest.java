/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 15:56:53 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ContinueStatement;
import org.mozilla.javascript.ast.ForInLoop;
import org.mozilla.javascript.ast.Name;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContinueStatement_ESTest extends ContinueStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Name name0 = new Name(0, 0);
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      StringBuilder stringBuilder0 = new StringBuilder(5);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      continueStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tCONTINUE -1 1\n0\t  NAME 1 0 null\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("122", continueStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Name name0 = new Name(0, (-192));
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      continueStatement0.toSource(3669);
      assertEquals("122", continueStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Name name0 = new Name(0, (-192));
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      ForInLoop forInLoop0 = new ForInLoop();
      continueStatement0.setTarget(forInLoop0);
      assertEquals("122", continueStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Name name0 = new Name(0, (-192));
      ContinueStatement continueStatement0 = new ContinueStatement(name0);
      continueStatement0.getTarget();
      assertEquals(122, continueStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Name name0 = new Name(154, 1791);
      ContinueStatement continueStatement0 = new ContinueStatement(1791, name0);
      assertEquals((-1637), name0.getPosition());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ContinueStatement continueStatement0 = new ContinueStatement((-1523), (-1523), (Name) null);
      assertEquals("122", continueStatement0.toString());
      assertEquals((-1523), continueStatement0.getLength());
      assertEquals((-1523), continueStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ContinueStatement continueStatement0 = new ContinueStatement();
      continueStatement0.getLabel();
      assertEquals("122", continueStatement0.toString());
  }
}
