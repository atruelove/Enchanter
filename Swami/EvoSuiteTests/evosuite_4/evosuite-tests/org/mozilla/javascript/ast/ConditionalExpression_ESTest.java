/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 16:34:21 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.BreakStatement;
import org.mozilla.javascript.ast.ConditionalExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConditionalExpression_ESTest extends ConditionalExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      BreakStatement breakStatement0 = new BreakStatement();
      conditionalExpression0.setTrueExpression(breakStatement0);
      conditionalExpression0.setFalseExpression(breakStatement0);
      conditionalExpression0.setTestExpression(breakStatement0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      conditionalExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("1336\tHOOK 1336 1336\n-1\t  BREAK -1337 1\n-1\t  BREAK -1337 1\n-1\t  BREAK -1337 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), conditionalExpression0.getColonPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      BreakStatement breakStatement0 = new BreakStatement();
      conditionalExpression0.setTrueExpression(breakStatement0);
      conditionalExpression0.setFalseExpression(breakStatement0);
      conditionalExpression0.setTestExpression(breakStatement0);
      conditionalExpression0.toSource(569);
      assertEquals(103, conditionalExpression0.getType());
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression((-3527), (-3527));
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      
      conditionalExpression0.setQuestionMarkPosition(1);
      assertEquals(1, conditionalExpression0.getQuestionMarkPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(549, 549);
      conditionalExpression0.setColonPosition(17);
      assertEquals(17, conditionalExpression0.getColonPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      BreakStatement breakStatement0 = new BreakStatement();
      conditionalExpression0.setTrueExpression(breakStatement0);
      conditionalExpression0.setFalseExpression(breakStatement0);
      conditionalExpression0.setTestExpression(breakStatement0);
      boolean boolean0 = conditionalExpression0.hasSideEffects();
      assertEquals((-1), conditionalExpression0.getColonPosition());
      assertTrue(boolean0);
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      assertEquals(103, conditionalExpression0.getType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      // Undeclared exception!
      try { 
        conditionalExpression0.hasSideEffects();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      conditionalExpression0.getTrueExpression();
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      assertEquals((-1), conditionalExpression0.getColonPosition());
      assertEquals("103", conditionalExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(549, 549);
      conditionalExpression0.getTestExpression();
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      assertEquals((-1), conditionalExpression0.getColonPosition());
      assertEquals("103", conditionalExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression((-3527), (-3527));
      int int0 = conditionalExpression0.getQuestionMarkPosition();
      assertEquals((-1), int0);
      assertEquals(103, conditionalExpression0.getType());
      assertEquals((-1), conditionalExpression0.getColonPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(340);
      conditionalExpression0.getFalseExpression();
      assertEquals((-1), conditionalExpression0.getColonPosition());
      assertEquals(103, conditionalExpression0.getType());
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression(1336, 1336);
      int int0 = conditionalExpression0.getColonPosition();
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      assertEquals((-1), int0);
      assertEquals("103", conditionalExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConditionalExpression conditionalExpression0 = new ConditionalExpression();
      assertEquals((-1), conditionalExpression0.getQuestionMarkPosition());
      assertEquals(103, conditionalExpression0.getType());
      assertEquals((-1), conditionalExpression0.getColonPosition());
  }
}
