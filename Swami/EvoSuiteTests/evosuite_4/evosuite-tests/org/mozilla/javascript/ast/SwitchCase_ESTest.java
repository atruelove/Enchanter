/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:14:30 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.NewExpression;
import org.mozilla.javascript.ast.RegExpLiteral;
import org.mozilla.javascript.ast.Scope;
import org.mozilla.javascript.ast.SwitchCase;
import org.mozilla.javascript.ast.TryStatement;
import org.mozilla.javascript.ast.WithStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SwitchCase_ESTest extends SwitchCase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      Scope scope0 = new Scope();
      switchCase0.addStatement(scope0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      switchCase0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tCASE -1 1\n-1\t  BLOCK 0 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(1, switchCase0.getLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase((-1), 0);
      WithStatement withStatement0 = new WithStatement();
      switchCase0.addStatement(withStatement0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        switchCase0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.WithStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase((-783));
      NewExpression newExpression0 = new NewExpression();
      switchCase0.setExpression(newExpression0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "default:\n");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        switchCase0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.NewExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      SwitchCase switchCase1 = new SwitchCase(1);
      switchCase0.addStatement(switchCase1);
      switchCase0.toSource(176);
      assertEquals(3, switchCase0.getLength());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(1429);
      RegExpLiteral regExpLiteral0 = new RegExpLiteral();
      switchCase0.setExpression(regExpLiteral0);
      switchCase0.toSource(0);
      assertFalse(switchCase0.isDefault());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      LinkedList<AstNode> linkedList0 = new LinkedList<AstNode>();
      linkedList0.add((AstNode) switchCase0);
      switchCase0.setStatements(linkedList0);
      assertEquals(1, switchCase0.getLength());
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      TryStatement tryStatement0 = new TryStatement();
      switchCase0.addStatement(tryStatement0);
      LinkedList<AstNode> linkedList0 = new LinkedList<AstNode>();
      switchCase0.setStatements(linkedList0);
      assertEquals(1, switchCase0.getLength());
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      boolean boolean0 = switchCase0.isDefault();
      assertTrue(boolean0);
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(3980);
      switchCase0.getStatements();
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      switchCase0.getExpression();
      assertEquals("116", switchCase0.toString());
  }
}
