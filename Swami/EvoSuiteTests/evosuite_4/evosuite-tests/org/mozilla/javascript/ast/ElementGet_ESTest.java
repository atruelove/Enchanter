/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 16:57:33 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ElementGet;
import org.mozilla.javascript.ast.LabeledStatement;
import org.mozilla.javascript.ast.VariableDeclaration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ElementGet_ESTest extends ElementGet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VariableDeclaration variableDeclaration0 = new VariableDeclaration(0);
      ElementGet elementGet0 = new ElementGet(variableDeclaration0, variableDeclaration0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "                                                                                                                                                                                              var [var ]");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      elementGet0.visit(astNode_DebugPrintVisitor0);
      assertEquals("                                                                                                                                                                                              var [var ]-1\tGETELEM -1 1\n0\t  VAR 1 1\n0\t  VAR 1 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), elementGet0.getRb());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VariableDeclaration variableDeclaration0 = new VariableDeclaration(0);
      ElementGet elementGet0 = new ElementGet(variableDeclaration0, variableDeclaration0);
      String string0 = elementGet0.toSource(95);
      assertEquals((-1), elementGet0.getLb());
      assertEquals("                                                                                                                                                                                              var [var ]", string0);
      assertEquals(36, elementGet0.getType());
      assertEquals((-1), elementGet0.getRb());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VariableDeclaration variableDeclaration0 = new VariableDeclaration(0);
      ElementGet elementGet0 = new ElementGet(variableDeclaration0, variableDeclaration0);
      elementGet0.setRb(470);
      assertEquals(470, elementGet0.getRb());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet(997);
      elementGet0.setLb((-471));
      assertEquals((-471), elementGet0.getLb());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet();
      elementGet0.getTarget();
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), elementGet0.getLb());
      assertEquals("36", elementGet0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      VariableDeclaration variableDeclaration0 = new VariableDeclaration(0);
      ElementGet elementGet0 = new ElementGet(variableDeclaration0, variableDeclaration0);
      AstNode astNode0 = elementGet0.getElement();
      assertEquals((-1), elementGet0.getLb());
      assertEquals(36, elementGet0.getType());
      assertEquals((-1), elementGet0.getRb());
      assertNotNull(astNode0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LabeledStatement labeledStatement0 = new LabeledStatement((-826));
      ElementGet elementGet0 = new ElementGet(labeledStatement0, labeledStatement0);
      elementGet0.setParens(0, 3);
      assertEquals(3, elementGet0.getRb());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet((-2494), 0);
      int int0 = elementGet0.getLb();
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), int0);
      assertEquals(36, elementGet0.getType());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet();
      int int0 = elementGet0.getRb();
      assertEquals((-1), elementGet0.getLb());
      assertEquals((-1), int0);
      assertEquals("36", elementGet0.toString());
  }
}
