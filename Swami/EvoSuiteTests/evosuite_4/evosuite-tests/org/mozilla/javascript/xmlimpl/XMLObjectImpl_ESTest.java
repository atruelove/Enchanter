/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 14:49:11 GMT 2018
 */

package org.mozilla.javascript.xmlimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.xml.XMLObject;
import org.mozilla.javascript.xmlimpl.QName;
import org.mozilla.javascript.xmlimpl.XML;
import org.mozilla.javascript.xmlimpl.XMLLibImpl;
import org.mozilla.javascript.xmlimpl.XMLList;
import org.mozilla.javascript.xmlimpl.XMLName;
import org.mozilla.javascript.xmlimpl.XmlNode;
import org.mozilla.javascript.xmlimpl.XmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLObjectImpl_ESTest extends XMLObjectImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.xmlFromNode((XmlNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        xMLList0.put(context0, (Object) context0, (Object) context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.defineProperty("b:|dMP,$q1=k:G", (Object) "B,'", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.newXMLListFrom(nativeObject0.DONTENUM);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.put(8, (Scriptable) nativeObject0, (Object) "ZV#BTTvI1`$Y(7?~i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "B,'", "__lookupGetter__");
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "__lookupGetter__");
      XmlNode xmlNode1 = XmlNode.newElementWithText(xmlProcessor0, xmlNode0, xmlNode_QName0, "B,'");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode1);
      XMLName xMLName0 = XMLName.formStar();
      XMLList xMLList0 = xML0.getPropertyList(xMLName0);
      assertFalse(xMLList0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "eUzJTn", "T*`");
      XML xML0 = new XML(xMLLibImpl0, nativeArrayBuffer0, (XMLObject) null, xmlNode0);
      XMLList xMLList0 = xML0.comments();
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.create("error reporter");
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "language version");
      // Undeclared exception!
      try { 
        xMLList0.newTextElementXML(xmlNode0, xmlNode_QName0, "m:{)|5:5iQn\"LOkFS>+");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sun.org.apache.xerces.internal.dom.DeferredTextImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.mozilla.javascript.xmlimpl.XmlNode$QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "B,'", "__lookupGetter__");
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "__lookupGetter__");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLName xMLName0 = XMLName.formStar();
      XMLList xMLList0 = xML0.getPropertyList(xMLName0);
      QName qName0 = xMLList0.newQName(xmlNode_QName0);
      assertEquals(2, ScriptableObject.DONTENUM);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "");
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      // Undeclared exception!
      try { 
        xML0.newQName("", "Symbol.hasInstance", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLLibImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        xMLList0.memberRef(context0, (Object) null, (Object) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.memberRef((Context) null, (Object) null, (-472));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.memberRef((Context) null, (Object) null, (-1539));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.initPrototypeId(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.hasInstance((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        xMLList0.has(context0, (Object) "b:|dMP,$q1=k:G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Object[] objectArray0 = ScriptableObject.getPropertyIds(xMLList0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, topLevel0, (XMLObject) null);
      XMLLibImpl xMLLibImpl0 = xMLList0.getLib();
      assertNull(xMLLibImpl0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.enter();
      Object object0 = xMLList0.getFunctionProperty(context0, "error reporter");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.enter();
      Object object0 = xMLList0.getFunctionProperty(context0, 16);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Class<XMLList> class0 = XMLList.class;
      Object object0 = xMLList0.getDefaultValue(class0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      // Undeclared exception!
      try { 
        xMLList0.get((Context) null, (Object) uniqueTag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("B", "language version");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      int int0 = xMLList0.findPrototypeId("0r0rortreporter");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      int int0 = xMLList0.findPrototypeId("error reporter");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.create("ZeiV5$0F#", "B,'");
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, ">'*uwxj%vN");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      int int0 = xMLList0.findPrototypeId("bind");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, (Object) null, 0, "B,'", 8, nativeObject0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        xMLList0.execIdCall(idFunctionObject0, context0, importerTopLevel0, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=0 MASTER=null
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      SymbolKey symbolKey0 = SymbolKey.MATCH;
      Object object0 = xMLList0.equivalentValues(symbolKey0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      NativeWith nativeWith0 = xMLList0.enterWith((Scriptable) null);
      assertEquals("With", nativeWith0.getClassName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(540);
      XMLLibImpl xMLLibImpl1 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XMLList xMLList0 = new XMLList(xMLLibImpl1, nativeInt32Array0, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeInt32Array0, xMLList0, xmlNode0);
      NativeWith nativeWith0 = xMLList0.enterDotQuery(xML0);
      assertEquals("With", nativeWith0.getClassName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.ecmaToXml("B,'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xMLLibImpl0).escapeAttributeValue(any());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "setLocalName", "msg.nonjava.method");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLName xMLName0 = XMLName.formProperty("DT)5Wv", ".5w`O?D@JF;i");
      XMLList xMLList0 = xML0.processingInstructions(xMLName0);
      // Undeclared exception!
      try { 
        xMLList0.ecmaEscapeAttributeValue(".5w`O?D@JF;i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        xMLList0.delete(context0, (Object) nativeObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.delete("B,'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      XmlNode.Namespace[] xmlNode_NamespaceArray0 = new XmlNode.Namespace[4];
      // Undeclared exception!
      try { 
        xMLList0.createNamespaces(xmlNode_NamespaceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, (String) null, "hasOwnProperty");
      XmlNode.Namespace xmlNode_Namespace0 = xmlNode0.getNamespaceDeclaration();
      // Undeclared exception!
      try { 
        xMLList0.createNamespace(xmlNode_Namespace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.createEmptyXML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, nativeObject0, (XMLObject) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Object object0 = xMLList0.addValues(context0, true, nativeObject0);
      assertNotNull(object0);
  }
}
