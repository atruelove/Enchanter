/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 23:26:00 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Decompiler;
import org.mozilla.javascript.UintMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionStart(36);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionEnd(29);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0018/uc/x0_Pk[DrLw3bIcW4.vE)\byej`PoQz\u0016\u0001)\byej`PoQz\u00A7", 49, uintMap0);
      assertEquals("\"yej`PoQz\"", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0017/uc/x0_Pk[DLw3bIcW4.vE)\u0002uc\u0012\u0001)\u0013x0_Pk[DLw3bIcW4.vE\u00A7", 53, uintMap0);
      assertEquals("\"x0_Pk[DLw3bIcW\\x7f4.vE\"", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\nswitch do  || case  -=  : typeof ", 130, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("Yz/_&63C6", (-1560), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("^'L@s}/'!", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("*=1Dsi{", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 61
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("if ", 28, uintMap0);
      assertEquals("\n ||  %= typeof \n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("jsStathcFunction must be Ise with static method.", 2813, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("[{#'_{", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0002//(S\u0001'\u00040\u0002//'\u00000\u0006//0\u0002//(S\u0003'\u00040\u0002//\u00A7'\u00040\u0002//\u0004\u00A7", 2, uintMap0);
      assertEquals("(//10\u0002////0\u0002//30\u0002//0\u0002//return )", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("~]eu21%W", 39, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("Ivaid ize or cont value", 3688, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("msg.bad.radix", 1, uintMap0);
      assertEquals("\n.switch  ?  ===  +=  >>>=  *=  === else  >>>=  *=  || for ", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UintMap uintMap0 = new UintMap(45);
      // Undeclared exception!
      try { 
        Decompiler.decompile("q}V2;e+v,J)F", 45, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      String string0 = Decompiler.decompile("msg.not.a.string", 3, uintMap0);
      assertEquals(".switch  ?  === function case  ===  >>>=  === switch case else  || function ", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("0\"/Uint8C|amedArray/Uint8C|amedArray(S$n$'$0\"/Uint8C|amedArray/Uint8C|amedArray\u0001'\u0010Uint8C|amedArray", 477, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0017/uc/x0_Pk[DLw3bIcW4.vE)\u0006yjPoQz\u0018\u0001)\u0006yjPoQz\u00A7", 44, uintMap0);
      assertEquals("\n/uc/x0_Pk[DLw3bIcW4.vE\"yjPoQz\" / \n\"yjPoQz\"\n", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("Uint8ClampedArray", 38, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 56
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("Chl/X`", 137, uintMap0);
      assertEquals("\n:  : -- !== ( >>= ", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("Wk|ijt|D#xc", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("uCuVeWjD.xyQ", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UintMap uintMap0 = new UintMap(266);
      // Undeclared exception!
      try { 
        Decompiler.decompile("Z56XK#.0B(nJqA'bi", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 54
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UintMap uintMap0 = new UintMap(212);
      // Undeclared exception!
      try { 
        Decompiler.decompile("|aRg+TAw]V7:vh.", 212, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 65
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UintMap uintMap0 = new UintMap(556);
      // Undeclared exception!
      try { 
        Decompiler.decompile("-,4[9p3", 97, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0$/Uint8ClampedArray/Uint8ClampedArray(D\uFFF0\u0000\u0000\u0000n&'&0$/Uint8ClampedArray/Uint8ClampedArray\u0098'\u0011Uint8ClampedArray", 477, uintMap0);
      assertEquals("\n/Uint8ClampedArray/Uint8ClampedArray-Infinityfunction 0$/Uint8ClampedArray/Uint8ClampedArrayget Uint8ClampedArray", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      uintMap0.put(1, 2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("(Lorg/mozilla/javascript/Context;)V", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("yej`P3Qz", 29, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 80
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile(")\byej`P3Qz\u001D\u0001)\byej`P3Qz\u00A7", 23, uintMap0);
      assertEquals("\"yej`P3Qz\"-\"yej`P3Qz\"", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addRegexp("Uint8ClampedArray", "Uint8ClampedArray");
      decompiler0.addNumber(Double.NEGATIVE_INFINITY);
      decompiler0.addName("0$/Uint8ClampedArray/Uint8ClampedArray");
      decompiler0.addName("Uint8ClampedArray");
      decompiler0.addNumber(Double.NEGATIVE_INFINITY);
      decompiler0.addRegexp("0$/Uint8ClampedArray/Uint8ClampedArray", "0$/Uint8ClampedArray/Uint8ClampedArray(D\uFFF0\u0000\u0000\u0000n&'&0$/Uint8ClampedArray/Uint8ClampedArray\u0098'\u0011Uint8ClampedArray");
      decompiler0.addName("0$/Uint8ClampedArray/Uint8ClampedArray");
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(448);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("yej`P3Qz");
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1.0E7);
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(29);
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL((-869));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addEOL(18);
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }
}
