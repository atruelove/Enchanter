/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 00:43:49 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Callable;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.Evaluator;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.PolicySecurityController;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.SecurityController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolicySecurityController_ESTest extends PolicySecurityController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      Class<?> class0 = policySecurityController0.getStaticSecurityDomainClassInternal();
      assertFalse(class0.isArray());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      // Undeclared exception!
      try { 
        context0.compileString("", (Evaluator) null, errorReporter0, "error reporter", 1, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        policySecurityController0.callWithDomain((Object) null, context0, (Callable) null, (Scriptable) null, importerTopLevel0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.PolicySecurityController$2", e);
      }
  }
}
