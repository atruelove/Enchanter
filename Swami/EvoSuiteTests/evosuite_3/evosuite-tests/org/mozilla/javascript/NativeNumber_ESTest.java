/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 01:00:18 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.typedarrays.NativeInt8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeNumber_ESTest extends NativeNumber_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3680.9675722875672));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 8, 8);
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "13";
      Object object0 = nativeNumber0.execIdCall(idFunctionObject0, context0, nativeNumber0, nativeNumber0, objectArray0);
      assertEquals("-3680.967572288", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(365.0);
      Object object0 = NativeNumber.isFinite(double0);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      // Undeclared exception!
      try { 
        NativeNumber.init(nativeNumber0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3680.908456786898));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 13, 8);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeNumber0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeNumber0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 13
         //
         verifyException("org.mozilla.javascript.NativeNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3680.9675722875672));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 8, 8);
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        nativeNumber0.execIdCall(idFunctionObject0, context0, nativeNumber0, nativeNumber0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // RangeError: Precision null out of range.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3680.9675722875672));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 8, 8);
      Context context0 = Context.getCurrentContext();
      Object object0 = nativeNumber0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeNumber0, context0.emptyArgs);
      assertEquals("-3680.9675722875672", object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3681.187484785191));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 4, 8);
      Context context0 = Context.getCurrentContext();
      Object object0 = nativeNumber0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeNumber0, context0.emptyArgs);
      assertEquals("(new Number(-3681.187484785191))", object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      // Undeclared exception!
      try { 
        nativeNumber0.exportAsJSClass(2, nativeNumber0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3680.9675722875672));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 8, 8);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeNumber0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(3599999.9542662455);
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      // Undeclared exception!
      try { 
        nativeNumber0.exportAsJSClass(13, nativeInt8Array0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-674.0335463725518));
      Short short0 = new Short((short)260);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, short0, 13, "#(YD mTl0ypfc", (short)260, nativeNumber0);
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(393.999);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, "Number", 0, 1);
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3171.20622101));
      nativeNumber0.activatePrototypeMap(13);
      // Undeclared exception!
      try { 
        nativeNumber0.getIds();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }
}
