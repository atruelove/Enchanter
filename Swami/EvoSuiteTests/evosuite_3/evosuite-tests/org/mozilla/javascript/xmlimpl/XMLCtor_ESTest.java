/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 14:28:42 GMT 2018
 */

package org.mozilla.javascript.xmlimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.xml.XMLObject;
import org.mozilla.javascript.xmlimpl.XML;
import org.mozilla.javascript.xmlimpl.XMLCtor;
import org.mozilla.javascript.xmlimpl.XMLLibImpl;
import org.mozilla.javascript.xmlimpl.XmlNode;
import org.mozilla.javascript.xmlimpl.XmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLCtor_ESTest extends XMLCtor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "settings", "settings");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 4, 1);
      xMLCtor0.setInstanceIdValue(4, "settings");
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "3do+!([L`q5");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 1, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(9, xmlProcessor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "3do+!Y([L`q56", "3do+!Y([L`q56");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 2, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(8, "3do+!Y([L`q56");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "3do+!([L`q5");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 2, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.initPrototypeId(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 8, 1);
      boolean boolean0 = xMLCtor0.hasInstance(xML0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "3do+!Y([L`q56", "3do+!Y([L`q56");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 2, 1);
      Object object0 = xMLCtor0.getInstanceIdValue(1);
      assertEquals(1, object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "XTQol!#$", "XTQol!#$");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 13, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "3do+!([L`q5");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 1, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "M+B-PgodqY2X^6sLf0Nh", "M+B-PgodqY2X^6sLf0Nh");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, (-4), 1);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "3do+!Y([L`q56", "3do+!Y([L`q56");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 13, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 1, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 8, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) xML0;
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) xMLCtor0, "setSettings", objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 8, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) xMLCtor0, "setSettings", context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "M+B-PgodqY2X^6sLf0Nh", "M+B-PgodqY2X^6sLf0Nh");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 1, 1);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) xMLCtor0, "settings", context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaObject0, 4, 1);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext((Context) null);
      // Undeclared exception!
      try { 
        xMLCtor0.execIdCall(xMLCtor0, context0, xMLCtor0, xML0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=4 MASTER=
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 8, 1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) xMLCtor0, "defaultSettings", context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "3do+![L`q5");
      XML xML0 = new XML(xMLLibImpl0, nativeJavaClass0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeJavaClass0, 1, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(6, "3do+![L`q5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }
}
