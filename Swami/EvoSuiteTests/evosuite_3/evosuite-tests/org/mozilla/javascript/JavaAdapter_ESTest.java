/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 23:14:57 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.FunctionObject;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.InterpretedFunction;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.JavaAdapter;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeMath;
import org.mozilla.javascript.NativeStringIterator;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.ObjToIntMap;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.regexp.RegExpImpl;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaAdapter_ESTest extends JavaAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<NativeMath> class0 = NativeMath.class;
      Class<NativeMath>[] classArray0 = (Class<NativeMath>[]) Array.newInstance(Class.class, 9);
      ObjToIntMap objToIntMap0 = new ObjToIntMap(11);
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, classArray0, objToIntMap0);
      NativeError nativeError0 = new NativeError();
      boolean boolean0 = javaAdapter_JavaAdapterSignature0.equals(nativeError0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("org.mozilla.javascript.criptableObject$xetterSlot");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("0eA6o]ChDa");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      try { 
        JavaAdapter.writeAdapterObject(stringBuilder0, objectOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        JavaAdapter.readAdapterObject(nativeIterator_StopIteration0, (ObjectInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(nativeArrayBuffer0, 13, 2);
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter(context0, nativeInt8Array0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: JavaAdapter requires at least one argument.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Function function0 = JavaAdapter.getFunction(nativeError0, "3VIK58hl}?,foR^WW");
      assertNull(function0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<NativeBoolean>[] classArray0 = (Class<NativeBoolean>[]) Array.newInstance(Class.class, 1);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      classArray0[0] = class0;
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Method>[] classArray0 = (Class<Method>[]) Array.newInstance(Class.class, 0);
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Synchronizer> class0 = Synchronizer.class;
      try { 
        JavaAdapter.getAdapterSelf(class0, "'gp59q");
        fail("Expecting exception: NoSuchFieldException");
      
      } catch(NoSuchFieldException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeStringIterator> class0 = NativeStringIterator.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 4);
      Class<Integer> class1 = Integer.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "java/lang/String", class0, classArray0, "java/lang/String");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      Class<FilterInputStream>[] classArray0 = (Class<FilterInputStream>[]) Array.newInstance(Class.class, 2);
      Class<FilterInputStream> class1 = FilterInputStream.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "J&p[@Xz?fs6n8bektF", class0, classArray0, "J&p[@Xz?fs6n8bektF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeIterator_StopIteration0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      Object[] objectArray0 = new Object[16];
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, nativeIterator_StopIteration0, nativeJavaMethod0, objectArray0, 8);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.reflect.Constructor cannot be cast to java.lang.reflect.Method
         //
         verifyException("org.mozilla.javascript.MemberBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "error reporter", true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      Scriptable scriptable0 = regExpImpl0.wrapRegExp(context0, interpretedFunction0, (Object) null);
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterWrapper(scriptable0, regExpImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      objToIntMap0.put("", 102);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "", class0, (Class<?>[]) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property JavaAdapter can not subclass methods with more then 64 arguments.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.enter();
      ObjToIntMap objToIntMap0 = context0.iterating;
      Class<InputStream> class0 = InputStream.class;
      Class<FunctionObject>[] classArray0 = (Class<FunctionObject>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "error reporter", class0, classArray0, "ya1]\"y-_?u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<Integer> class0 = Integer.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 7);
      Class<String> class1 = String.class;
      classArray0[0] = class1;
      // Undeclared exception!
      JavaAdapter.createAdapterCode(objToIntMap0, "", class0, classArray0, "Lorg/mozilla/javascript/Scriptable;");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<ArrowFunction> class0 = ArrowFunction.class;
      Object object0 = JavaAdapter.convertResult((Object) null, class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      NativeWith nativeWith0 = new NativeWith(delegator0, nativeIterator_StopIteration0);
      Object[] objectArray0 = nativeWith0.getIds();
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod((ContextFactory) null, delegator0, delegator0, objectArray0, (-2858L));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.NativeIterator$StopIteration cannot be cast to org.mozilla.javascript.Function
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array((NativeArrayBuffer) null, (-889), (-889));
      Object[] objectArray0 = new Object[0];
      Object object0 = JavaAdapter.callMethod(contextFactory0, nativeUint32Array0, (Function) null, objectArray0, 48L);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<NativeBoolean>[] classArray0 = (Class<NativeBoolean>[]) Array.newInstance(Class.class, 1);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      ContextFactory contextFactory0 = new ContextFactory();
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, delegator0, delegator0, classArray0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.NativeIterator$StopIteration cannot be cast to org.mozilla.javascript.Function
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<IdFunctionObjectES6>[] classArray0 = (Class<IdFunctionObjectES6>[]) Array.newInstance(Class.class, 0);
      ObjToIntMap objToIntMap0 = new ObjToIntMap(0);
      Class<Long> class0 = Long.class;
      byte[] byteArray0 = JavaAdapter.createAdapterCode(objToIntMap0, "self", class0, classArray0, " :}yG+Yps.U&");
      //  // Unstable assertion: assertEquals(2079, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(javaAdapter0, (Object) null, 9, "\nmj.u~-jH1SZL0_Z", 9, nativeFloat64Array0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        javaAdapter0.execIdCall(idFunctionObject0, context0, nativeFloat64Array0, nativeFloat64Array0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=9 MASTER=org.mozilla.javascript.JavaAdapter@1
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
