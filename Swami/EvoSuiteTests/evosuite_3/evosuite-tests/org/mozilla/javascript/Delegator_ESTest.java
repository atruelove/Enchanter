/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 01:23:07 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Delegator_ESTest extends Delegator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArrayBuffer0, nativeArrayBuffer0);
      synchronizer0.setPrototype(nativeArrayBuffer0);
      assertFalse(nativeArrayBuffer0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Synchronizer synchronizer0 = new Synchronizer(nativeInt32Array0);
      synchronizer0.setParentScope(nativeInt32Array0);
      assertEquals(0, nativeInt32Array0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      synchronizer0.put("", (Scriptable) baseFunction0, (Object) "");
      assertEquals(1, ScriptableObject.READONLY);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      synchronizer0.put((-537), (Scriptable) importerTopLevel0, (Object) baseFunction0);
      assertEquals("Function", baseFunction0.getClassName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        delegator0.put((-1624), (Scriptable) null, (Object) "msg.bad.parms");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Synchronizer synchronizer0 = new Synchronizer(nativeInt32Array0);
      // Undeclared exception!
      try { 
        synchronizer0.newInstance();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrapped java.lang.InstantiationException: org.mozilla.javascript.Synchronizer
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(nativeArrayBuffer0, 1321, 2248);
      // Undeclared exception!
      try { 
        delegator0.hasInstance(nativeUint8Array0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      Delegator delegator0 = new Delegator(nativeUint8Array0);
      boolean boolean0 = delegator0.has("", (Scriptable) nativeUint8Array0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      boolean boolean0 = delegator0.has((-4100), (Scriptable) delegator0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      BaseFunction baseFunction1 = (BaseFunction)synchronizer0.getPrototype();
      assertEquals(2, ScriptableObject.DONTENUM);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Synchronizer synchronizer0 = new Synchronizer(nativeInt32Array0);
      Scriptable scriptable0 = synchronizer0.getParentScope();
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      Object[] objectArray0 = delegator0.getIds();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Delegator delegator0 = new Delegator((Scriptable) null);
      Scriptable scriptable0 = delegator0.getDelegee();
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<ArrowFunction> class0 = ArrowFunction.class;
      // Undeclared exception!
      try { 
        delegator0.getDefaultValue(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Delegator delegator0 = new Delegator((Scriptable) null);
      // Undeclared exception!
      try { 
        delegator0.getClassName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      // Undeclared exception!
      try { 
        delegator0.get("ltt4Q<\f@*_LeCcp", (Scriptable) scriptableObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      Object object0 = synchronizer0.get(12, (Scriptable) importerTopLevel0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      synchronizer0.delete("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.SyntaxError;
      BaseFunction baseFunction0 = importerTopLevel0.getNativeErrorCtor(topLevel_NativeErrors0);
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0, (Object) null);
      synchronizer0.delete(100);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        delegator0.construct(context0, delegator0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot convert null to an object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      Scriptable scriptable0 = delegator0.construct(context0, delegator0, context0.emptyArgs);
      assertNotSame(scriptable0, delegator0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      Synchronizer synchronizer0 = new Synchronizer(nativeInt8Array0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        synchronizer0.construct(context0, nativeInt8Array0, context0.emptyArgs);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.typedarrays.NativeInt8Array cannot be cast to org.mozilla.javascript.Function
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Synchronizer synchronizer0 = new Synchronizer(delegator0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        synchronizer0.call(context0, (Scriptable) null, delegator0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }
}
