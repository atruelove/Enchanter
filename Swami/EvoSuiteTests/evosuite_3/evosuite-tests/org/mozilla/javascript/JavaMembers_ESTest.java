/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 23:32:08 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.InterpretedFunction;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.Synchronizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaMembers_ESTest extends JavaMembers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object[] objectArray0 = new Object[2];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      // Undeclared exception!
      try { 
        javaMembers0.put(nativeBoolean0, "org.mozilla.javascript.IdScriptableObject$PrototypeValues", nativeArray0, synchronizer0, false);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Java class \"org.mozilla.javascript.ImporterTopLevel\" has no public instance field or method named \"org.mozilla.javascript.IdScriptableObject$PrototypeValues\".
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<NativeJavaObject> class0 = NativeJavaObject.class;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = Context.enter(context0, contextFactory0);
      BaseFunction baseFunction0 = context1.typeErrorThrower;
      NativeJavaClass nativeJavaClass0 = null;
      try {
        nativeJavaClass0 = new NativeJavaClass(baseFunction0, class0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      boolean boolean0 = javaMembers0.has("getGetterOrSetter", false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = (ImporterTopLevel)context0.topCallScope;
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      JavaMembers javaMembers0 = new JavaMembers(importerTopLevel0, class0);
      Object[] objectArray0 = javaMembers0.getIds(false);
      assertEquals(87, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0);
      NativeJavaMethod nativeJavaMethod0 = (NativeJavaMethod)javaMembers0.get((Scriptable) null, "getGetterOrSetter", (Object) null, false);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        javaMembers0.put(nativeJavaMethod0, "getGetterOrSetter", "getGetterOrSetter", nativeContinuation0, false);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Java method \"getGetterOrSetter\" cannot be assigned to.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0, true);
      boolean boolean0 = javaMembers0.has("W6(g!iCVLCc:aG", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      JavaMembers javaMembers0 = new JavaMembers((Scriptable) null, class0, false);
      Object object0 = javaMembers0.get((Scriptable) null, "(a`%\"d", "(a`%\"d", true);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = (ImporterTopLevel)context0.topCallScope;
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      JavaMembers javaMembers0 = new JavaMembers(importerTopLevel0, class0);
      Object object0 = javaMembers0.get(importerTopLevel0, "language version", class0, false);
      assertNotNull(object0);
  }
}
