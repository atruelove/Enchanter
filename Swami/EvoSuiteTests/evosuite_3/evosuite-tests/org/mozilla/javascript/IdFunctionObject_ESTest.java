/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 02 00:19:38 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IdFunctionObject_ESTest extends IdFunctionObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, nativeCall0, 13, "[native code for ", 1, nativeCall0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        idFunctionObject0.call(context0, nativeCall0, nativeCall0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=13 MASTER=org.mozilla.javascript.NativeCall@3
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeJavaTopPackage0, classLoader0, 189, 2);
      idFunctionObject0.getTag();
      assertEquals(189, idFunctionObject0.methodId());
      assertEquals(2, idFunctionObject0.getArity());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-646.7787483993));
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeNumber0, nativeBoolean0, 0, "$xb", 8, nativeNumber0);
      idFunctionObjectES6_0.getPrototype();
      assertEquals(8, idFunctionObjectES6_0.getArity());
      assertEquals(0, idFunctionObjectES6_0.methodId());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(46);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeArrayBuffer0, nativeArrayBuffer0, 0, "ArrayBuffer", 46, nativeArrayBuffer0);
      int int0 = idFunctionObjectES6_0.getLength();
      assertEquals(0, idFunctionObjectES6_0.methodId());
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-646.7787483993));
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeNumber0, nativeBoolean0, 0, "$xb", 8, nativeNumber0);
      String string0 = idFunctionObjectES6_0.decompile(8, 2);
      assertEquals("function $xb() { [native code for Number.$xb, arity=8] }\n", string0);
      assertEquals(0, idFunctionObjectES6_0.methodId());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, nativeUint16Array0, 2, "ArrayBuffer", 2, nativeUint16Array0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        idFunctionObject0.createObject(context0, nativeArrayBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: \"ArrayBuffer\" is not a constructor.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      IdFunctionObjectES6 idFunctionObjectES6_0 = null;
      try {
        idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeInt8Array0, nativeJavaClass0, 1, (String) null, 4, nativeInt8Array0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, nativeIterator_StopIteration0, 8, "`a[k~Idt,xRA", (-1199), nativeIterator_StopIteration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      assertEquals("object", importerTopLevel0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(importerTopLevel0, importerTopLevel0, 0, (-738));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
