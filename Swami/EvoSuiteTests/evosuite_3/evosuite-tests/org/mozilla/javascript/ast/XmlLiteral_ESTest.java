/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 15:35:03 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.XmlExpression;
import org.mozilla.javascript.ast.XmlFragment;
import org.mozilla.javascript.ast.XmlLiteral;
import org.mozilla.javascript.ast.XmlString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlLiteral_ESTest extends XmlLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      XmlString xmlString0 = new XmlString();
      xmlLiteral0.addFragment(xmlString0);
      xmlLiteral0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tXML -1 1\n-1\t  XML 0 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      xmlLiteral0.toSource(4);
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral(25, 1362);
      LinkedList<XmlFragment> linkedList0 = new LinkedList<XmlFragment>();
      XmlExpression xmlExpression0 = new XmlExpression((-1080), xmlLiteral0);
      linkedList0.add((XmlFragment) xmlExpression0);
      xmlLiteral0.setFragments(linkedList0);
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      xmlLiteral0.getFragments();
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral(0);
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      XmlString xmlString0 = new XmlString(18, "z=zQ!");
      xmlLiteral0.addFragment(xmlString0);
      String string0 = xmlLiteral0.toSource(4);
      assertEquals("z=zQ!", string0);
      assertEquals(146, xmlLiteral0.getType());
  }
}
