/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 15:56:17 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.SwitchCase;
import org.mozilla.javascript.ast.SwitchStatement;
import org.mozilla.javascript.ast.XmlLiteral;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SwitchStatement_ESTest extends SwitchStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(159);
      XmlLiteral xmlLiteral0 = new XmlLiteral(4, 12);
      switchStatement0.setExpression(xmlLiteral0);
      SwitchCase switchCase0 = new SwitchCase();
      switchStatement0.addCase(switchCase0);
      assertEquals((-160), switchCase0.getPosition());
      
      String string0 = switchStatement0.debugPrint();
      assertEquals("159\tSWITCH 159 1\n4\t  XML -155 12\n-1\t  CASE -160 1\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(159);
      XmlLiteral xmlLiteral0 = new XmlLiteral(4, 12);
      switchStatement0.setExpression(xmlLiteral0);
      assertEquals((-155), xmlLiteral0.getPosition());
      
      SwitchCase switchCase0 = new SwitchCase();
      switchStatement0.addCase(switchCase0);
      switchStatement0.toSource(213);
      assertEquals(159, switchStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      // Undeclared exception!
      try { 
        switchStatement0.toSource(122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.SwitchStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      assertEquals((-1), switchStatement0.getRp());
      
      switchStatement0.setRp(1);
      assertEquals(1, switchStatement0.getRp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      switchStatement0.setParens(1, 1);
      assertEquals(1, switchStatement0.getLp());
      assertEquals(1, switchStatement0.getRp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      switchStatement0.setLp(8);
      assertEquals(8, switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      SwitchCase switchCase0 = new SwitchCase();
      LinkedList<SwitchCase> linkedList0 = new LinkedList<SwitchCase>();
      linkedList0.add(switchCase0);
      switchStatement0.setCases(linkedList0);
      assertEquals((-1), switchStatement0.getRp());
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      SwitchCase switchCase0 = new SwitchCase();
      switchStatement0.addCase(switchCase0);
      LinkedList<SwitchCase> linkedList0 = new LinkedList<SwitchCase>();
      switchStatement0.setCases(linkedList0);
      assertEquals((-1), switchStatement0.getRp());
      assertEquals((-1), switchStatement0.getLp());
      assertEquals(115, switchStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      switchStatement0.setCases((List<SwitchCase>) null);
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getRp());
      assertEquals((-1), switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(1699, 1699);
      int int0 = switchStatement0.getRp();
      assertEquals(1699, switchStatement0.getLength());
      assertEquals((-1), switchStatement0.getLp());
      assertEquals(115, switchStatement0.getType());
      assertEquals((-1), int0);
      assertEquals(1699, switchStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(1699, 1699);
      int int0 = switchStatement0.getLp();
      assertEquals(1699, switchStatement0.getLength());
      assertEquals(1699, switchStatement0.getAbsolutePosition());
      assertEquals((-1), switchStatement0.getRp());
      assertEquals((-1), int0);
      assertEquals("115", switchStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(1699, 1699);
      switchStatement0.getExpression();
      assertEquals(1699, switchStatement0.getLength());
      assertEquals((-1), switchStatement0.getLp());
      assertEquals(1699, switchStatement0.getPosition());
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getRp());
  }
}
