/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:01:01 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Token;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Comment;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Comment_ESTest extends Comment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Token.CommentType token_CommentType0 = Token.CommentType.LINE;
      Comment comment0 = new Comment((-900), (-900), token_CommentType0, "NxHTQd'-");
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      comment0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-900\tCOMMENT -900 -900\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(162, comment0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
      Comment comment0 = new Comment(1270, 1270, token_CommentType0, "i8mejEy|b");
      String string0 = comment0.toSource((-1449));
      assertEquals("i8mejEy|b", string0);
      assertEquals("162", comment0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Token.CommentType token_CommentType0 = Token.CommentType.HTML;
      Comment comment0 = new Comment(0, 0, token_CommentType0, "2%");
      comment0.setCommentType(token_CommentType0);
      assertEquals("162", comment0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
      Comment comment0 = new Comment(3, 3, token_CommentType0, "");
      comment0.getValue();
      assertEquals("162", comment0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Token.CommentType token_CommentType0 = Token.CommentType.LINE;
      Comment comment0 = new Comment((-900), (-900), token_CommentType0, "NxHTQd'-");
      comment0.getCommentType();
      assertEquals(162, comment0.getType());
  }
}
