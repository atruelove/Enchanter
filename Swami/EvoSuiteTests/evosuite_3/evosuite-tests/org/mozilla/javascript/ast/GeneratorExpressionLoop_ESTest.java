/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:16:27 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.EmptyStatement;
import org.mozilla.javascript.ast.GeneratorExpressionLoop;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratorExpressionLoop_ESTest extends GeneratorExpressionLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(17);
      EmptyStatement emptyStatement0 = new EmptyStatement(8, 19);
      generatorExpressionLoop0.setIteratedObject(emptyStatement0);
      generatorExpressionLoop0.setIterator(emptyStatement0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "                                       for (;\n in ;\n)");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      generatorExpressionLoop0.visit(astNode_DebugPrintVisitor0);
      assertEquals("                                       for (;\n in ;\n)17\tFOR 17 1\n8\t  EMPTY -9 19\n8\t  EMPTY -9 19\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("                                       for (;\n in ;\n)17\tFOR 17 1\n8\t  EMPTY -9 19\n8\t  EMPTY -9 19\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      EmptyStatement emptyStatement0 = new EmptyStatement();
      generatorExpressionLoop0.setIterator(emptyStatement0);
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.toSource(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.setIsForEach(false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // this node type does not support for each
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(6, 6);
      assertEquals(12, Node.OBJECT_IDS_PROP);
  }
}
