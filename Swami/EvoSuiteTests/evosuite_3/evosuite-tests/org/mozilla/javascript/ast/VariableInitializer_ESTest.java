/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:03:54 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.VariableInitializer;
import org.mozilla.javascript.ast.Yield;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VariableInitializer_ESTest extends VariableInitializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      Yield yield0 = new Yield(111, 14);
      variableInitializer0.setTarget(yield0);
      variableInitializer0.setInitializer(yield0);
      String string0 = variableInitializer0.debugPrint();
      assertEquals("-1\tVAR -1 1\n111\t  YIELD 112 14\n111\t  YIELD 112 14\n", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      Yield yield0 = new Yield(4);
      variableInitializer0.setTarget(yield0);
      variableInitializer0.setInitializer(yield0);
      String string0 = variableInitializer0.toSource(25);
      assertEquals("123", variableInitializer0.toString());
      assertEquals("                                                  yield = yield", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      // Undeclared exception!
      try { 
        variableInitializer0.setTarget((AstNode) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid target arg
         //
         verifyException("org.mozilla.javascript.ast.VariableInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      // Undeclared exception!
      try { 
        variableInitializer0.setNodeType(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid node type
         //
         verifyException("org.mozilla.javascript.ast.VariableInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      variableInitializer0.setNodeType(123);
      assertEquals("123", variableInitializer0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      boolean boolean0 = variableInitializer0.isDestructuring();
      assertTrue(boolean0);
      assertEquals("123", variableInitializer0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      variableInitializer0.getTarget();
      assertEquals(123, variableInitializer0.getType());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer(154, 154);
      assertEquals(123, variableInitializer0.getType());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer(0);
      assertEquals(123, variableInitializer0.getType());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      variableInitializer0.getInitializer();
      assertEquals("123", variableInitializer0.toString());
  }
}
