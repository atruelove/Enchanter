/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 17:32:39 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ObjectLiteral;
import org.mozilla.javascript.ast.XmlExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlExpression_ESTest extends XmlExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(",e");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1285));
      XmlExpression xmlExpression0 = new XmlExpression(0, objectLiteral0);
      xmlExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals(",e0\tXML 0 1\n-1285\t  OBJECTLIT -1285 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(",e0\tXML 0 1\n-1285\t  OBJECTLIT -1285 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0, 0);
      StringBuilder stringBuilder0 = new StringBuilder(",e");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        xmlExpression0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0, 0);
      // Undeclared exception!
      try { 
        xmlExpression0.toSource((-1079));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0);
      AstNode astNode0 = xmlExpression0.getExpression();
      assertNull(astNode0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(0, 0);
      boolean boolean0 = xmlExpression0.isXmlAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression();
      xmlExpression0.setIsXmlAttribute(true);
      assertTrue(xmlExpression0.isXmlAttribute());
  }
}
