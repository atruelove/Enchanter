/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 18:54:07 GMT 2018
 */

package org.mozilla.javascript.tools.shell;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.tools.shell.Environment;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      Environment environment0 = new Environment(nativeFloat64Array0);
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeFloat64Array0, environment0);
      ScriptableObject.putConstProperty(environment0, "pFVoZ2WatLVZsT5NsA", nativeArrayIterator0);
      assertFalse(environment0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Environment environment0 = new Environment();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(1347);
      boolean boolean0 = environment0.has("", (Scriptable) nativeArrayBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 0, 26);
      Environment environment0 = new Environment(nativeFloat32Array0);
      Object[] objectArray0 = environment0.getIds();
      assertEquals(71, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Environment environment0 = new Environment();
      Delegator delegator0 = new Delegator(environment0);
      Object[] objectArray0 = delegator0.getIds();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array();
      Environment environment0 = new Environment(nativeFloat64Array0);
      environment0.put("pFVoZ2WatLVZsT5NsA", (Scriptable) nativeFloat64Array0, (Object) "pFVoZ2WatLVZsT5NsA");
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeFloat64Array0, environment0);
      // Undeclared exception!
      try { 
        environment0.get("pFVoZ2WatLVZsT5NsA", (Scriptable) nativeArrayIterator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(32);
      Environment environment0 = new Environment(nativeFloat32Array0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) environment0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      Environment environment0 = new Environment(nativeUint8Array0);
      // Undeclared exception!
      try { 
        Environment.defineClass((ScriptableObject) environment0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.tools.shell.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(32);
      Environment.defineClass((ScriptableObject) nativeFloat32Array0);
      Environment environment0 = new Environment(nativeFloat32Array0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) environment0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 0, 26);
      Environment environment0 = new Environment(nativeFloat32Array0);
      Object[] objectArray0 = environment0.getAllIds();
      assertEquals(71, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Environment environment0 = new Environment();
      Object[] objectArray0 = environment0.getAllIds();
      assertEquals(0, objectArray0.length);
  }
}
