/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 19:27:22 GMT 2018
 */

package org.mozilla.javascript.tools.shell;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.ProtectionDomain;
import java.security.SecurityPermission;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Callable;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefiningClassLoader;
import org.mozilla.javascript.GeneratedClassLoader;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.tools.shell.JavaPolicySecurity;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaPolicySecurity_ESTest extends JavaPolicySecurity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      Object object0 = javaPolicySecurity0.getDynamicSecurityDomain((Object) null);
      SecurityPermission securityPermission0 = new SecurityPermission("\"&)!}km/@");
      ProtectionDomain protectionDomain0 = (ProtectionDomain)javaPolicySecurity0.getDynamicSecurityDomain(object0);
      assertNotNull(protectionDomain0);
      
      boolean boolean0 = protectionDomain0.implies(securityPermission0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      // Undeclared exception!
      try { 
        javaPolicySecurity0.callProcessFileSecure(context0, nativeUint16Array0, "file:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.SourceReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        javaPolicySecurity0.callProcessFileSecure(context0, importerTopLevel0, "IQ:!7/qv.2;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not construct file URL for 'IQ:!7/qv.2;':unknown protocol: iq
         //
         verifyException("org.mozilla.javascript.tools.shell.JavaPolicySecurity", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      Class<?> class0 = javaPolicySecurity0.getStaticSecurityDomainClassInternal();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      DefiningClassLoader definingClassLoader0 = new DefiningClassLoader();
      GeneratedClassLoader generatedClassLoader0 = javaPolicySecurity0.createClassLoader(definingClassLoader0, (Object) null);
      assertNotNull(generatedClassLoader0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(0);
      // Undeclared exception!
      try { 
        javaPolicySecurity0.callWithDomain((Object) null, context0, (Callable) null, nativeUint32Array0, nativeUint32Array0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.shell.JavaPolicySecurity$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JavaPolicySecurity javaPolicySecurity0 = new JavaPolicySecurity();
      Context context0 = Context.getCurrentContext();
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      // Undeclared exception!
      try { 
        javaPolicySecurity0.callProcessFileSecure(context0, nativeInt16Array0, "language version");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.SourceReader", e);
      }
  }
}
