/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 22:44:14 GMT 2018
 */

package org.mozilla.javascript.commonjs.module.provider;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.MalformedURLException;
import java.net.URI;
import java.util.ArrayDeque;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.commonjs.module.provider.ModuleSource;
import org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModuleSourceProviderBase_ESTest extends ModuleSourceProviderBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayDeque<URI> arrayDeque0 = new ArrayDeque<URI>(0);
      UrlModuleSourceProvider urlModuleSourceProvider0 = new UrlModuleSourceProvider(arrayDeque0, arrayDeque0);
      URI uRI0 = MockURI.aFTPURI;
      // Undeclared exception!
      try { 
        urlModuleSourceProvider0.loadSource(uRI0, uRI0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      LinkedHashSet<URI> linkedHashSet0 = new LinkedHashSet<URI>();
      UrlModuleSourceProvider urlModuleSourceProvider0 = new UrlModuleSourceProvider(linkedHashSet0, linkedHashSet0);
      Object object0 = new Object();
      ModuleSource moduleSource0 = urlModuleSourceProvider0.loadSource(".initPototypeId(int id) did not initialize id=", (Scriptable) importerTopLevel0, object0);
      assertNull(moduleSource0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeSet<URI> treeSet0 = new TreeSet<URI>();
      UrlModuleSourceProvider urlModuleSourceProvider0 = new UrlModuleSourceProvider(treeSet0, treeSet0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "0-{!X%BU]tH/7$";
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      try { 
        urlModuleSourceProvider0.loadSource("0-{!X%BU]tH/7$", (Scriptable) nativeArray0, (Object) treeSet0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Illegal character in path at index 2: 0-{!X%BU]tH/7$/
         //
         verifyException("org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<URI> linkedList0 = new LinkedList<URI>();
      ArrayDeque<URI> arrayDeque0 = new ArrayDeque<URI>();
      UrlModuleSourceProvider urlModuleSourceProvider0 = new UrlModuleSourceProvider(arrayDeque0, linkedList0);
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(nativeArrayBuffer0, (-3456), (-3456));
      // Undeclared exception!
      try { 
        urlModuleSourceProvider0.loadSource("ArrayBuffer", (Scriptable) nativeInt32Array0, (Object) arrayDeque0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider", e);
      }
  }
}
