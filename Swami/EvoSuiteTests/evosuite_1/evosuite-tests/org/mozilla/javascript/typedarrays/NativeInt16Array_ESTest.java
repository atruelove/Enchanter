/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 00:02:12 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeInt16Array_ESTest extends NativeInt16Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      // Undeclared exception!
      try { 
        nativeInt16Array0.set(0, (Short) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(0);
      Context context0 = Context.enter();
      Scriptable scriptable0 = context0.newObject((Scriptable) nativeInt16Array0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, nativeInt16Array0, (-1496), "", 21, scriptable0);
      // Undeclared exception!
      try { 
        nativeInt16Array0.realThis(scriptable0, idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      NativeTypedArrayView nativeTypedArrayView0 = nativeInt16Array0.realThis(nativeInt16Array0, (IdFunctionObject) null);
      assertTrue(nativeTypedArrayView0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array((NativeArrayBuffer) null, 0, (-461));
      Object object0 = nativeInt16Array0.js_set((-3708), (Object) null);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      Short short0 = new Short((short) (-1529));
      Short short1 = nativeInt16Array0.set(0, short0);
      assertNull(short1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(5);
      Object object0 = nativeInt16Array0.js_get(30);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array((NativeArrayBuffer) null, 0, (-461));
      int int0 = nativeInt16Array0.getBytesPerElement();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array((NativeArrayBuffer) null, 0, (-461));
      // Undeclared exception!
      try { 
        nativeInt16Array0.get(8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array((NativeArrayBuffer) null, 0, (-461));
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeTypedArrayView nativeTypedArrayView0 = nativeInt16Array0.construct(nativeArrayBuffer0, 2770, 2);
      assertEquals(2770, nativeTypedArrayView0.getByteOffset());
      assertEquals(2, nativeTypedArrayView0.getArrayLength());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(2315);
      Predicate<Short> predicate0 = Predicate.isEqual((Object) nativeInt16Array0);
      boolean boolean0 = nativeInt16Array0.removeIf(predicate0);
      assertFalse(boolean0);
  }
}
