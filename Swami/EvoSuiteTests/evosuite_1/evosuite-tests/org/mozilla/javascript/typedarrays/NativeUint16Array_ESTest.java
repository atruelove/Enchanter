/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 00:01:21 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeUint16Array_ESTest extends NativeUint16Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      // Undeclared exception!
      try { 
        nativeUint16Array0.set(0, (Integer) 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(614);
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Number;
      BaseFunction baseFunction0 = importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      // Undeclared exception!
      try { 
        nativeUint16Array0.realThis(baseFunction0, (IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeUint16Array0, (Object) null, 0, 120);
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint16Array0.realThis(nativeUint16Array0, idFunctionObject0);
      assertEquals(0, nativeTypedArrayView0.getByteOffset());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(11);
      Object object0 = nativeUint16Array0.js_set(2812, context0.VERSION_1_4);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 4, (-45));
      Object object0 = nativeUint16Array0.js_get(2);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 4, (-45));
      // Undeclared exception!
      try { 
        nativeUint16Array0.get(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeUint16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(11);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(17, (-456), 18, 5, (-1724)).when(comparator0).compare(any() , any());
      nativeUint16Array0.sort(comparator0);
      assertTrue(nativeUint16Array0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeTypedArrayView nativeTypedArrayView0 = nativeUint16Array0.construct(nativeArrayBuffer0, 8, 1186);
      assertEquals(8, nativeTypedArrayView0.getByteOffset());
      assertEquals(1186, nativeTypedArrayView0.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(1);
      Integer integer0 = nativeUint16Array0.set(0, (Integer) nativeUint16Array0.READONLY);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initSafeStandardObjects((ScriptableObject) null, false);
      NativeUint16Array.init(context0, scriptableObject0, false);
      assertEquals(11, Context.FEATURE_STRICT_MODE);
  }
}
