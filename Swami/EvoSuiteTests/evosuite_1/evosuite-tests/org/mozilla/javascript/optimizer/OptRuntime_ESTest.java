/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 06:51:18 GMT 2018
 */

package org.mozilla.javascript.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Callable;
import org.mozilla.javascript.ConsString;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeFunction;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.optimizer.OptRuntime;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class OptRuntime_ESTest extends OptRuntime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble((-1.0));
      assertEquals((-1.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = OptRuntime.wrapDouble(1);
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = OptRuntime.add(0.0, (Object) null);
      assertEquals(0.0, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        OptRuntime.throwStopIteration(importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // [object StopIteration]
         //
         verifyException("org.mozilla.javascript.optimizer.OptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = OptRuntime.padStart(objectArray0, 2231);
      assertEquals(2231, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeFunction nativeFunction0 = mock(NativeFunction.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(nativeFunction0).getFunctionName();
      Context context0 = Context.getCurrentContext();
      OptRuntime.initFunction(nativeFunction0, 1, (Scriptable) nativeFunction0, context0);
      assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeObject0, 2, 4);
      Object[] objectArray0 = OptRuntime.getGeneratorStackState(optRuntime_GeneratorState0);
      assertEquals(4, objectArray0.length);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(15);
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeFloat32Array0, 100, 4);
      Object[] objectArray0 = OptRuntime.getGeneratorLocalsState(optRuntime_GeneratorState0);
      assertEquals(100, objectArray0.length);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[9];
      String string0 = OptRuntime.encodeIntArray(intArray0);
      assertEquals("\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        OptRuntime.elemIncrDecr((Object) nativeContinuation0, (-3655.8791990578156), (Context) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeObject nativeObject0 = new NativeObject();
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeObject0, 2, 4);
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral(context0.emptyArgs, "language version", 8, context0, optRuntime_GeneratorState0.thisObj);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.OptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral(objectArray0, "\u0001\u0000\u0CD6\u0000\u00C7\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u00C7\u0000\u067D", 7, context0, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.newArrayLiteral(context0.emptyArgs, (String) null, 0, context0, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        OptRuntime.createNativeGenerator((NativeFunction) null, (Scriptable) null, (Scriptable) null, 406, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(0);
      // Undeclared exception!
      try { 
        OptRuntime.callSpecial(context0, (Callable) null, (Scriptable) null, objectArray0, (Scriptable) null, nativeInt32Array0, 6, "%e?G4NdHhH#chr", 8);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(15);
      OptRuntime.GeneratorState optRuntime_GeneratorState0 = new OptRuntime.GeneratorState(nativeFloat32Array0, 100, 4);
      // Undeclared exception!
      try { 
        OptRuntime.callName0("QName", context0, optRuntime_GeneratorState0.thisObj);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"QName\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object[] objectArray0 = new Object[7];
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.callName(objectArray0, "P7C]4H~^{", context0, nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"P7C]4H~^{\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptRuntime optRuntime0 = new OptRuntime();
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Object object0 = OptRuntime.callN(baseFunction0, baseFunction0, optRuntime0.emptyStrings, context0, baseFunction0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        OptRuntime.call2(delegator0, delegator0, delegator0, delegator0, context0, delegator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, nativeArrayBuffer0, 1, 2043);
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 2321, 8);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        OptRuntime.call1(idFunctionObject0, nativeUint16Array0, idFunctionObject0, context0, nativeArrayBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=1 MASTER=org.mozilla.javascript.typedarrays.NativeArrayBuffer@7
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        OptRuntime.bindThis((NativeFunction) null, context0, (Scriptable) null, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = OptRuntime.add((Object) null, (-1861.0231621810901));
      assertEquals((-1861.0231621810901), object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConsString consString0 = (ConsString)OptRuntime.add((Object) "N", 2591.3010605021186);
      assertEquals(19, consString0.length());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        OptRuntime.add((Object) nativeContinuation0, (double) 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConsString consString0 = (ConsString)OptRuntime.add((double) 6, (Object) "error reporter");
      assertEquals(15, consString0.length());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        OptRuntime.add((-1844.8074849819864), (Object) nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OptRuntime optRuntime0 = new OptRuntime();
      Object object0 = OptRuntime.add((double) optRuntime0.oneObj, (Object) optRuntime0);
      assertEquals(Double.NaN, object0);
  }
}
