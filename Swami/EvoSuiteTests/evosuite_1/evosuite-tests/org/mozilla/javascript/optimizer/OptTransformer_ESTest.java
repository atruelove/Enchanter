/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 06:13:58 GMT 2018
 */

package org.mozilla.javascript.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ObjArray;
import org.mozilla.javascript.ast.AstRoot;
import org.mozilla.javascript.ast.FunctionNode;
import org.mozilla.javascript.ast.IfStatement;
import org.mozilla.javascript.ast.Label;
import org.mozilla.javascript.ast.NumberLiteral;
import org.mozilla.javascript.ast.XmlMemberGet;
import org.mozilla.javascript.optimizer.OptTransformer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class OptTransformer_ESTest extends OptTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet();
      AstRoot astRoot0 = new AstRoot(12);
      optTransformer0.visitNew(xmlMemberGet0, astRoot0);
      assertEquals(16, Node.MEMBER_TYPE_PROP);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet(2);
      Label label0 = new Label();
      label0.addChildToFront(xmlMemberGet0);
      NumberLiteral numberLiteral0 = new NumberLiteral(2, 25);
      numberLiteral0.setType(34);
      label0.addChildBefore(numberLiteral0, xmlMemberGet0);
      FunctionNode functionNode0 = new FunctionNode(3);
      // Undeclared exception!
      try { 
        optTransformer0.visitCall(label0, functionNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet(4, 0);
      Label label0 = new Label(27, 21);
      label0.addChildToFront(xmlMemberGet0);
      NumberLiteral numberLiteral0 = new NumberLiteral(19);
      numberLiteral0.setType(33);
      label0.addChildBefore(numberLiteral0, xmlMemberGet0);
      FunctionNode functionNode0 = new FunctionNode();
      // Undeclared exception!
      try { 
        optTransformer0.visitCall(label0, functionNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.OptTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet(4, 4);
      Label label0 = new Label(8, 27);
      label0.addChildToFront(xmlMemberGet0);
      NumberLiteral numberLiteral0 = new NumberLiteral(0);
      numberLiteral0.setType(39);
      label0.addChildBefore(numberLiteral0, xmlMemberGet0);
      FunctionNode functionNode0 = new FunctionNode(12);
      // Undeclared exception!
      try { 
        optTransformer0.visitCall(label0, functionNode0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.ast.NumberLiteral cannot be cast to org.mozilla.javascript.ast.Name
         //
         verifyException("org.mozilla.javascript.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      XmlMemberGet xmlMemberGet0 = new XmlMemberGet();
      Label label0 = new Label(27, 2);
      label0.addChildToFront(xmlMemberGet0);
      NumberLiteral numberLiteral0 = new NumberLiteral();
      label0.addChildBefore(numberLiteral0, xmlMemberGet0);
      FunctionNode functionNode0 = new FunctionNode();
      optTransformer0.visitCall(label0, functionNode0);
      assertEquals(1, Node.DECR_FLAG);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ObjArray objArray0 = new ObjArray();
      OptTransformer optTransformer0 = new OptTransformer(nativeObject0, objArray0);
      FunctionNode functionNode0 = new FunctionNode(1);
      IfStatement ifStatement0 = new IfStatement(0, 9);
      ifStatement0.addChildrenToFront(functionNode0);
      // Undeclared exception!
      try { 
        optTransformer0.visitNew(ifStatement0, functionNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.OptTransformer", e);
      }
  }
}
