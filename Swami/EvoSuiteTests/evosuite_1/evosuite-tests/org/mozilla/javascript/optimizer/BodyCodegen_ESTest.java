/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 06:30:01 GMT 2018
 */

package org.mozilla.javascript.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.ast.ArrayComprehensionLoop;
import org.mozilla.javascript.ast.AstRoot;
import org.mozilla.javascript.ast.FunctionNode;
import org.mozilla.javascript.ast.LabeledStatement;
import org.mozilla.javascript.ast.RegExpLiteral;
import org.mozilla.javascript.ast.ScriptNode;
import org.mozilla.javascript.optimizer.BodyCodegen;
import org.mozilla.javascript.optimizer.Codegen;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BodyCodegen_ESTest extends BodyCodegen_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BodyCodegen.FinallyReturnPoint bodyCodegen_FinallyReturnPoint0 = new BodyCodegen.FinallyReturnPoint();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      astRoot0.setBaseLineno(124);
      byte[] byteArray0 = codegen0.compileToClassFile(compilerEnvirons0, "setDefaultNamespace", astRoot0, "setDefaultNamespace", false);
      assertEquals(3398, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      LabeledStatement labeledStatement0 = new LabeledStatement();
      astRoot0.addChild(labeledStatement0);
      // Undeclared exception!
      try { 
        codegen0.compileToClassFile(compilerEnvirons0, "setDefaultNamespace", astRoot0, "setDefaultNamespace", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.BodyCodegen", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
      astRoot0.addChildrenToBack(arrayComprehensionLoop0);
      // Undeclared exception!
      try { 
        codegen0.compileToClassFile(compilerEnvirons0, "etefaultNamespae", astRoot0, "etefaultNamespae", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Bad tree in codegen
         //
         verifyException("org.mozilla.javascript.optimizer.Codegen", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      astRoot0.setEndLineno(152);
      byte[] byteArray0 = codegen0.compileToClassFile(compilerEnvirons0, "setDefaultNamespace", astRoot0, "setDefaultNamespace", false);
      assertEquals(3398, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      AstRoot astRoot0 = new AstRoot();
      RegExpLiteral regExpLiteral0 = new RegExpLiteral();
      astRoot0.addRegExp(regExpLiteral0);
      // Undeclared exception!
      try { 
        codegen0.compileToClassFile(compilerEnvirons0, "setDefaultNamespace", astRoot0, "setDefaultNamespace", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateObserverCount(true);
      AstRoot astRoot0 = new AstRoot();
      byte[] byteArray0 = codegen0.compileToClassFile(compilerEnvirons0, "setDefaultNamespace", astRoot0, "setDefaultNamespace", false);
      assertEquals(3458, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BodyCodegen bodyCodegen0 = new BodyCodegen();
      FunctionNode functionNode0 = new FunctionNode(3);
      bodyCodegen0.scriptOrFn = (ScriptNode) functionNode0;
      // Undeclared exception!
      try { 
        bodyCodegen0.generateBodyCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.optimizer.BodyCodegen", e);
      }
  }
}
