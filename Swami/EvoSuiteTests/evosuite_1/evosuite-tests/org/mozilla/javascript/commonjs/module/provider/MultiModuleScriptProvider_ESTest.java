/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 01:49:13 GMT 2018
 */

package org.mozilla.javascript.commonjs.module.provider;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.URI;
import java.util.ServiceLoader;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.commonjs.module.ModuleScript;
import org.mozilla.javascript.commonjs.module.provider.MultiModuleScriptProvider;
import org.mozilla.javascript.commonjs.module.provider.StrongCachingModuleScriptProvider;
import org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MultiModuleScriptProvider_ESTest extends MultiModuleScriptProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stack<StrongCachingModuleScriptProvider> stack0 = new Stack<StrongCachingModuleScriptProvider>();
      Class<URI> class0 = URI.class;
      ServiceLoader<URI> serviceLoader0 = ServiceLoader.load(class0);
      UrlModuleSourceProvider urlModuleSourceProvider0 = new UrlModuleSourceProvider(serviceLoader0, serviceLoader0);
      StrongCachingModuleScriptProvider strongCachingModuleScriptProvider0 = new StrongCachingModuleScriptProvider(urlModuleSourceProvider0);
      stack0.add(strongCachingModuleScriptProvider0);
      MultiModuleScriptProvider multiModuleScriptProvider0 = new MultiModuleScriptProvider(stack0);
      Context context0 = Context.getCurrentContext();
      NativeObject nativeObject0 = new NativeObject();
      ModuleScript moduleScript0 = multiModuleScriptProvider0.getModuleScript(context0, "error reporter", (URI) null, (URI) null, nativeObject0);
      assertNull(moduleScript0);
  }
}
