/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 23:15:48 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.debug.DebuggableScript;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class InterpreterData_ESTest extends InterpreterData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-39), "org.mozilla.javascript.InterpreterData", "org.mozilla.javascript.InterpreterData", true);
      boolean boolean0 = interpreterData0.isTopLevel();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      boolean boolean0 = interpreterData0.isGeneratedScript();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "Vd;k]|n0yVCT", "Vd;k]|n0yVCT", true);
      boolean boolean0 = interpreterData0.isFunction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      String string0 = interpreterData0.getSourceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(1024, "Nd<49C<wMf", "Nd<49C<wMf", false);
      interpreterData0.parentData = interpreterData0;
      DebuggableScript debuggableScript0 = interpreterData0.parentData.getParent();
      assertNull(debuggableScript0.getFunctionName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "1/H\" ~ZG", "1/H\" ~ZG", false);
      // Undeclared exception!
      try { 
        interpreterData0.getParamOrVarName(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(1024, "Nd<49C<wMf", "Nd<49C<wMf", false);
      // Undeclared exception!
      try { 
        interpreterData0.getParamOrVarConst(1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-1488), "Z<6l^d8,.V%:kIpH8", "Z<6l^d8,.V%:kIpH8", false);
      int int0 = interpreterData0.getParamCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      // Undeclared exception!
      try { 
        interpreterData0.getParamAndVarCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      int[] intArray0 = interpreterData0.getLineNumbers();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(1024, "Nd<49C<wMf", "Nd<49C<wMf", false);
      String string0 = interpreterData0.getFunctionName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(1024, "Nd<49C<wMf", "Nd<49C<wMf", false);
      int int0 = interpreterData0.getFunctionCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(1164, "", "", true);
      // Undeclared exception!
      try { 
        interpreterData0.getFunction(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      InterpreterData interpreterData1 = new InterpreterData(interpreterData0);
      assertFalse(interpreterData1.isTopLevel());
  }
}
