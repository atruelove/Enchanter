/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 07:52:00 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.FieldAndMethods;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJSON;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaConstructor;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.NativeStringIterator;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeJavaObject_ESTest extends NativeJavaObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(170);
      Scriptable scriptable0 = context0.newObject((Scriptable) nativeUint8ClampedArray0);
      Class<FieldAndMethods> class0 = FieldAndMethods.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.wrap(scriptable0, scriptable0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float(21.559365459727672);
      Class<Short> class0 = Short.TYPE;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, float0);
      assertEquals((short)21, object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.setPrototype(nativeUint32Array0);
      assertEquals("JavaObject", nativeJavaObject0.getClassName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeWith nativeWith0 = new NativeWith(nativeArrayBuffer0, nativeArrayBuffer0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeJavaClass0.setParentScope(nativeWith0);
      assertEquals("JavaClass", nativeJavaClass0.getClassName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<NativeJSON> class0 = NativeJSON.class;
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.put("X[(lz4*zn6BK5x`i=,", (Scriptable) null, (Object) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        nativeJavaClass0.put((-1060), (Scriptable) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<NativeJavaObject> class0 = NativeJavaObject.class;
      NativeJavaObject nativeJavaObject0 = null;
      try {
        nativeJavaObject0 = new NativeJavaObject((Scriptable) null, class0, class0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      boolean boolean0 = nativeJavaObject0.hasInstance((Scriptable) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(99);
      // Undeclared exception!
      try { 
        nativeJavaObject0.has("Coerced Interface", (Scriptable) nativeUint16Array0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = nativeJavaClass0.has(13, (Scriptable) nativeArrayBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      NativeCall nativeCall0 = new NativeCall();
      int int0 = NativeJavaObject.getConversionWeight(nativeCall0, class0);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Delegator> class0 = Delegator.class;
      NativeJavaClass nativeJavaClass0 = null;
      try {
        nativeJavaClass0 = new NativeJavaClass(nativeJavaObject0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.getIds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Synchronizer> class0 = Synchronizer.class;
      nativeJavaObject0.javaObject = (Object) class0;
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(18);
      NativeStringIterator nativeStringIterator0 = new NativeStringIterator(nativeUint32Array0, nativeJavaObject0);
      assertEquals(13, ScriptableObject.CONST);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Byte> class0 = Byte.TYPE;
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeWith nativeWith0 = new NativeWith(nativeArrayBuffer0, nativeArrayBuffer0);
      Class<Annotation> class0 = Annotation.class;
      boolean boolean0 = NativeJavaObject.canConvert(nativeWith0.parent, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<String> class0 = String.class;
      boolean boolean0 = NativeJavaObject.canConvert(delegator0, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaTopPackage0, class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeIterator_StopIteration0, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = NativeJavaObject.canConvert(nativeIterator_StopIteration0, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      Class<Object> class0 = Object.class;
      int int0 = NativeJavaObject.getConversionWeight(object0, class0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Long> class0 = Long.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaObject0, class0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      Class<String> class1 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(class0, class1);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      Class<NativeJavaConstructor> class1 = NativeJavaConstructor.class;
      int int0 = NativeJavaObject.getConversionWeight(class0, class1);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Coerced Interface");
      int int0 = NativeJavaObject.getConversionWeight(charBuffer0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<Float> class0 = Float.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeBoolean0.READONLY, class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Double double0 = new Double(72.57755630321);
      int int0 = NativeJavaObject.getConversionWeight(double0, class0);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<String> class0 = String.class;
      Long long0 = new Long(0);
      int int0 = NativeJavaObject.getConversionWeight(long0, class0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      Class<Double> class0 = Double.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(byte0, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<Float> class0 = Float.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(nativeBoolean0.CONST, class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Boolean boolean0 = new Boolean("Coerced Interface");
      Class<Short> class0 = Short.TYPE;
      int int0 = NativeJavaObject.getConversionWeight(boolean0, class0);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      int int0 = NativeJavaObject.getConversionWeight((Object) null, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      String string0 = nativeJavaObject0.getClassName();
      assertEquals("JavaObject", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.get(1, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.delete("iR=T<JCh0$$[,9ro");
      assertEquals("JavaObject", nativeJavaObject0.getClassName());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.delete((-3083));
      assertEquals("JavaObject", nativeJavaObject0.getClassName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<Long> class0 = Long.class;
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(nativeArrayBuffer0, 1, (-2725));
      // Undeclared exception!
      try { 
        NativeJavaObject.createInterfaceAdapter(class0, nativeInt8Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Delegator delegator0 = new Delegator();
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, delegator0);
      assertSame(delegator0, object0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<ArrowFunction> class0 = ArrowFunction.class;
      NativeNumber nativeNumber0 = new NativeNumber(1312.0428875696102);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert 1312.0428875696102 to org.mozilla.javascript.ArrowFunction
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Class<String> class0 = String.class;
      NativeNumber nativeNumber0 = new NativeNumber(4196.70576913);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, uniqueTag0);
      assertSame(object0, uniqueTag0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Class<String> class0 = String.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, class0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, class0);
      assertEquals("class java.lang.Object", object0.toString());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<ArrowFunction> class0 = ArrowFunction.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeJavaClass0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert null to org.mozilla.javascript.ArrowFunction
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Class<ArrowFunction> class0 = ArrowFunction.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, "Zf:SzS4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert Zf:SzS4 to org.mozilla.javascript.ArrowFunction
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Class<NativeContinuation> class0 = NativeContinuation.class;
      Double double0 = new Double((-1176.565636));
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert -1176.565636 to org.mozilla.javascript.NativeContinuation
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Float float0 = new Float(0.0F);
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, float0);
      assertEquals((byte)0, object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Boolean boolean0 = new Boolean("Coerced Interface");
      Class<TopLevel> class0 = TopLevel.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert false to org.mozilla.javascript.TopLevel
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray();
      Class<NativeString> class0 = NativeString.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeUint8ClampedArray0, (-2042), class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert undefined to org.mozilla.javascript.NativeString
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert null to float
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Class<NativeGenerator> class0 = NativeGenerator.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      NativeBoolean nativeBoolean1 = (NativeBoolean)NativeJavaObject.coerceTypeImpl(class0, nativeBoolean0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert java.lang.Object@0000000001 to java.lang.Long
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "");
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Class<Double> class0 = Double.TYPE;
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(0);
      Class<ImporterTopLevel> class1 = ImporterTopLevel.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeFloat64Array0, class1, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeJavaMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Double double0 = new Double(72.57755630321);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = null;
      try {
        importerTopLevel0 = new ImporterTopLevel(context0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<NativeNumber> class0 = NativeNumber.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, nativeJavaObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert null to org.mozilla.javascript.NativeNumber
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }
}
