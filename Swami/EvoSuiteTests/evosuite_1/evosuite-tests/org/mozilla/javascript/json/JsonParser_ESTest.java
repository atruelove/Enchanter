/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 15:14:31 GMT 2018
 */

package org.mozilla.javascript.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.json.JsonParser;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class JsonParser_ESTest extends JsonParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockException mockException0 = new MockException();
      JsonParser.ParseException jsonParser_ParseException0 = new JsonParser.ParseException(mockException0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      JsonParser jsonParser0 = new JsonParser(context0, nativeArrayBuffer0);
      try { 
        jsonParser0.parseValue("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Empty JSON string
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(6);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, nativeArrayBuffer0, 170, 170);
      JsonParser jsonParser0 = new JsonParser(context0, idFunctionObject0);
      try { 
        jsonParser0.parseValue("t(4iNU,:6PfrmK#&");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: t
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      JsonParser jsonParser0 = new JsonParser(context0, nativeArrayBuffer0);
      try { 
        jsonParser0.parseValue("\"0{[");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated string literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      JsonParser jsonParser0 = new JsonParser(context0, importerTopLevel0);
      try { 
        jsonParser0.parseValue("{,q__YA4WAyEsi+3[S");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected comma in object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      JsonParser jsonParser0 = new JsonParser(context0, importerTopLevel0);
      try { 
        jsonParser0.parseValue("{xB9\"6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token in object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, 2284, 147);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint16Array0);
      try { 
        jsonParser0.parseValue("5.&]J");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: 5.&
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(14);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 11, 180);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      try { 
        jsonParser0.parseValue("[-\u0005");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: -\u0005
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(6);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, nativeArrayBuffer0, 170, 4444);
      JsonParser jsonParser0 = new JsonParser(context0, idFunctionObject0);
      try { 
        jsonParser0.parseValue("nwA cW- EQr");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: n
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser((Context) null, (Scriptable) null);
      try { 
        jsonParser0.parseValue("fa BMx+");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: f
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 1985, 6);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      try { 
        jsonParser0.parseValue("[6nYnc$");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing comma in array literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(3718);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 1985, 3718);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      try { 
        jsonParser0.parseValue("[,6nYnc2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected comma in array literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 1985, 3718);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      NativeArray nativeArray0 = (NativeArray)jsonParser0.parseValue("[]");
      assertEquals(0L, nativeArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(6);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, nativeArrayBuffer0, 170, 120);
      JsonParser jsonParser0 = new JsonParser(context0, idFunctionObject0);
      try { 
        jsonParser0.parseValue("\"_ 5z\"Yv@j%H");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected end of stream at char 6
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser((Context) null, (Scriptable) null);
      try { 
        jsonParser0.parseValue((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Input string may not be null
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(3695);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 1985, 3695);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      try { 
        jsonParser0.parseValue("-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: -
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(12);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(nativeArrayBuffer0, 0, 11);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint32Array0);
      try { 
        jsonParser0.parseValue("[-5");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated array literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser((Context) null, (Scriptable) null);
      try { 
        jsonParser0.parseValue(" GMT");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: G
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      JsonParser jsonParser0 = new JsonParser(context0, importerTopLevel0);
      try { 
        jsonParser0.parseValue("{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }
}
