/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 02:00:39 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Array;
import java.security.CodeSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.JavaAdapter;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCallSite;
import org.mozilla.javascript.NativeDate;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.ObjToIntMap;
import org.mozilla.javascript.Script;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.Undefined;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat64Array;
import org.mozilla.javascript.typedarrays.NativeInt16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaAdapter_ESTest extends JavaAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(0);
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      Class<NativeJavaTopPackage>[] classArray0 = (Class<NativeJavaTopPackage>[]) Array.newInstance(Class.class, 9);
      Class<NativeJavaTopPackage> class1 = NativeJavaTopPackage.class;
      JavaAdapter.JavaAdapterSignature javaAdapter_JavaAdapterSignature0 = new JavaAdapter.JavaAdapterSignature(class0, classArray0, objToIntMap0);
      boolean boolean0 = javaAdapter_JavaAdapterSignature0.equals(class1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      MockFile mockFile0 = new MockFile("Uv~<T;Lf^g8G$eerU", "Uv~<T;Lf^g8G$eerU");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      try { 
        JavaAdapter.writeAdapterObject(javaAdapter0, objectOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        JavaAdapter.readAdapterObject(nativeArrayBuffer0, (ObjectInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.JavaAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeFloat64Array nativeFloat64Array0 = new NativeFloat64Array(nativeArrayBuffer0, 103, 1);
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter((Context) null, nativeFloat64Array0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Argument 0 is not Java class: null.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter(context0, nativeBoolean0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: JavaAdapter requires at least one argument.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<NativeDate>[] classArray0 = (Class<NativeDate>[]) Array.newInstance(Class.class, 1);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(0);
      BaseFunction baseFunction0 = new BaseFunction(nativeInt16Array0, nativeInt16Array0);
      Object object0 = JavaAdapter.callMethod(contextFactory0, nativeInt16Array0, baseFunction0, classArray0, 2);
      // Undeclared exception!
      try { 
        JavaAdapter.js_createAdapter(context0, ((Undefined) object0).SCRIPTABLE_UNDEFINED, classArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(2558);
      Function function0 = JavaAdapter.getFunction(nativeArrayBuffer0, "ArrayBuffer");
      assertNull(function0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<NativeJavaTopPackage>[] classArray0 = (Class<NativeJavaTopPackage>[]) Array.newInstance(Class.class, 0);
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<NativeDate>[] classArray0 = (Class<NativeDate>[]) Array.newInstance(Class.class, 1);
      Class<NativeDate> class0 = NativeDate.class;
      classArray0[0] = class0;
      int[] intArray0 = JavaAdapter.getArgsToConvert(classArray0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<JavaAdapter> class0 = JavaAdapter.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      try { 
        JavaAdapter.getAdapterSelf(class0, nativeJavaTopPackage0);
        fail("Expecting exception: NoSuchFieldException");
      
      } catch(NoSuchFieldException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<NativeCallSite> class0 = NativeCallSite.class;
      ObjToIntMap objToIntMap0 = new ObjToIntMap(120);
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 7);
      Class<Integer> class1 = Integer.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "~", class0, classArray0, "~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeBoolean> class0 = NativeBoolean.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 14);
      Class<String> class1 = String.class;
      classArray0[0] = class1;
      // Undeclared exception!
      JavaAdapter.createAdapterCode(objToIntMap0, "", class0, classArray0, "");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(javaAdapter0, nativeBoolean0, 8, "y2ZP%_*G", 23, nativeBoolean0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        javaAdapter0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeBoolean0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=8 MASTER=org.mozilla.javascript.JavaAdapter@1
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Scriptable scriptable0 = JavaAdapter.createAdapterWrapper(scriptableObject0, context0);
      assertEquals("JavaObject", scriptable0.getClassName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap(0);
      Class<String> class0 = String.class;
      Class<CodeSource>[] classArray0 = (Class<CodeSource>[]) Array.newInstance(Class.class, 5);
      Class<CodeSource> class1 = CodeSource.class;
      objToIntMap0.put("!zJ@+aUAq3e", 0);
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      classArray0[2] = classArray0[1];
      classArray0[3] = classArray0[1];
      classArray0[4] = class1;
      byte[] byteArray0 = JavaAdapter.createAdapterCode(objToIntMap0, "!zJ@+aUAq3e", class0, classArray0, "");
      //  // Unstable assertion: assertEquals(11077, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<NativeArray> class0 = NativeArray.class;
      Class<NativeArrayIterator>[] classArray0 = (Class<NativeArrayIterator>[]) Array.newInstance(Class.class, 4);
      Class<NativeArrayIterator> class1 = NativeArrayIterator.class;
      classArray0[0] = class1;
      classArray0[1] = classArray0[0];
      classArray0[2] = classArray0[1];
      classArray0[3] = classArray0[0];
      byte[] byteArray0 = JavaAdapter.createAdapterCode(objToIntMap0, "Hz", class0, classArray0, "");
      assertEquals(2169, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      Class<NativeArray>[] classArray0 = (Class<NativeArray>[]) Array.newInstance(Class.class, 4);
      Class<NativeArray> class1 = NativeArray.class;
      classArray0[0] = class1;
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterCode(objToIntMap0, "Z6zM$uLoBo%", class0, classArray0, "Z6zM$uLoBo%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<IdFunctionObjectES6> class1 = IdFunctionObjectES6.class;
      // Undeclared exception!
      try { 
        JavaAdapter.convertResult(class0, class1);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert class java.lang.Integer to org.mozilla.javascript.IdFunctionObjectES6
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeWith nativeWith0 = new NativeWith(importerTopLevel0, importerTopLevel0);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(importerTopLevel0, nativeWith0, 13, "L.,*/VE#mE?)", 561, importerTopLevel0);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, idFunctionObjectES6_0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod(contextFactory0, importerTopLevel0, synchronizer0, objectArray0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.ImporterTopLevel cannot be cast to org.mozilla.javascript.Function
         //
         verifyException("org.mozilla.javascript.Synchronizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeBoolean0, nativeBoolean0, 4, "", 4, nativeBoolean0);
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        JavaAdapter.callMethod((ContextFactory) null, nativeBoolean0, idFunctionObjectES6_0, objectArray0, (-3202L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=4 MASTER=org.mozilla.javascript.NativeBoolean@3
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Object object0 = JavaAdapter.callMethod(contextFactory0, (Scriptable) null, (Function) null, (Object[]) null, 1L);
      assertNull(object0);
  }
}
