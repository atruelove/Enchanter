/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 21:43:13 GMT 2018
 */

package org.mozilla.javascript.tools.debugger.treetable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Stack;
import javax.swing.Box;
import javax.swing.JTree;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModel;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class TreeTableModelAdapter_ESTest extends TreeTableModelAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      jTree0.fireTreeExpanded((TreePath) null);
      assertFalse(jTree0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      Stack<String> stack0 = new Stack<String>();
      JTree jTree0 = new JTree(stack0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      jTree0.fireTreeCollapsed((TreePath) null);
      assertFalse(jTree0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      Box box0 = Box.createHorizontalBox();
      treeTableModelAdapter0.setValueAt(box0, 0, 0);
      assertFalse(box0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      // Undeclared exception!
      try { 
        treeTableModelAdapter0.isCellEditable((-1613), (-1613));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      // Undeclared exception!
      try { 
        treeTableModelAdapter0.getValueAt(0, 2772);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      int int0 = treeTableModelAdapter0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      String string0 = treeTableModelAdapter0.getColumnName((-431));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTree jTree0 = new JTree(treeTableModel0);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      int int0 = treeTableModelAdapter0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(treeTableModel0).getColumnClass(anyInt());
      JTree jTree0 = new JTree();
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      Class<?> class1 = treeTableModelAdapter0.getColumnClass(0);
      assertEquals("class java.lang.Object", class1.toString());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      JTree jTree0 = new JTree((TreeModel) null);
      TreeTableModelAdapter treeTableModelAdapter0 = new TreeTableModelAdapter(treeTableModel0, jTree0);
      treeTableModelAdapter0.delayedFireTableDataChanged();
      assertEquals(0, treeTableModelAdapter0.getColumnCount());
  }
}
