/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 21:48:29 GMT 2018
 */

package org.mozilla.javascript.tools.debugger.treetable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.event.MouseWheelEvent;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.time.DayOfWeek;
import java.util.Vector;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.TreeModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.treetable.JTreeTable;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModel;
import sun.awt.SunHints;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class JTreeTable_ESTest extends JTreeTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      jTreeTable_TreeTableCellRenderer0.setBounds(2327, 2327, 2961, 2961);
      assertFalse(jTreeTable_TreeTableCellRenderer0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.new TreeTableCellRenderer((TreeModel) null);
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.getGraphics();
      jTreeTable_TreeTableCellRenderer0.paint(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke('M');
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer1 = (JTreeTable.TreeTableCellRenderer)jTreeTable_TreeTableCellRenderer0.getTableCellRendererComponent(jTreeTable0, keyStroke0, false, false, 'M', 'M');
      assertFalse(jTreeTable_TreeTableCellRenderer1.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1223);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(treeTableModel0).getChildCount(any());
      doReturn(integer0, styledEditorKit_UnderlineAction0, sunHints_Key0, "").when(treeTableModel0).getRoot();
      doReturn(false, false, false, false).when(treeTableModel0).isLeaf(any());
      doReturn((Class) null).when(treeTableModel0).getColumnClass(anyInt());
      doReturn(1223, 0).when(treeTableModel0).getColumnCount();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellEditor jTreeTable_TreeTableCellEditor0 = jTreeTable0.new TreeTableCellEditor();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTreeTable0, 0, 0L, 0, (-127), 1591, (-127), 0, 118, true, 0, 0, 0, 0.0);
      boolean boolean0 = jTreeTable_TreeTableCellEditor0.isCellEditable(mouseWheelEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellEditor jTreeTable_TreeTableCellEditor0 = jTreeTable0.new TreeTableCellEditor();
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = (JTreeTable.TreeTableCellRenderer)jTreeTable_TreeTableCellEditor0.getTableCellEditorComponent(jTreeTable0, jTreeTable0, true, 0, 0);
      assertFalse(jTreeTable_TreeTableCellRenderer0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long long0 = new Long((-3188L));
      Vector<Object> vector0 = new Vector<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(long0, defaultTableModel0, vector0, long0).when(treeTableModel0).getRoot();
      doReturn(true, true, true).when(treeTableModel0).isLeaf(any());
      doReturn(36, 36, 36, 34, 1581).when(treeTableModel0).getColumnCount();
      doReturn(";n*Mm970^`?4l`", ";n*Mm970^`?4l`", ";n*Mm970^`?4l`", ";n*Mm970^`?4l`", ";n*Mm970^`?4l`").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.selectAll();
      assertFalse(jTreeTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(1223);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(treeTableModel0).getChildCount(any());
      doReturn(integer0, styledEditorKit_UnderlineAction0, sunHints_Key0, "", integer0).when(treeTableModel0).getRoot();
      doReturn(false, false, false, false, false).when(treeTableModel0).isLeaf(any());
      doReturn(1223, 0).when(treeTableModel0).getColumnCount();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.updateUI();
      assertTrue(jTreeTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer(1223);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(treeTableModel0).getChildCount(any());
      doReturn(integer0, styledEditorKit_UnderlineAction0, sunHints_Key0, "").when(treeTableModel0).getRoot();
      doReturn(false, false, false, false).when(treeTableModel0).isLeaf(any());
      doReturn(1223, 0).when(treeTableModel0).getColumnCount();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTree jTree0 = jTreeTable0.getTree();
      assertTrue(jTree0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      Class<DayOfWeek> class0 = DayOfWeek.class;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn((Class) null).when(treeTableModel0).getColumnClass(anyInt());
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.getEditingRow();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(treeTableModel0).getChildCount(any());
      doReturn(attributedCharacterIterator_Attribute0, attributedCharacterIterator_Attribute0, attributedCharacterIterator_Attribute0, (Object) null).when(treeTableModel0).getRoot();
      doReturn(false, false, false, false).when(treeTableModel0).isLeaf(any());
      JTreeTable jTreeTable0 = null;
      try {
        jTreeTable0 = new JTreeTable(treeTableModel0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }
}
