/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 21:00:59 GMT 2018
 */

package org.mozilla.javascript.tools.debugger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.MyTableModel;
import org.mozilla.javascript.tools.debugger.SwingGui;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MyTableModel_ESTest extends MyTableModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      myTableModel0.updateModel();
      assertEquals(1, myTableModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      myTableModel0.setValueAt((Object) null, 1, 1);
      assertEquals(1, myTableModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      // Undeclared exception!
      try { 
        myTableModel0.setValueAt("", 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.MyTableModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      boolean boolean0 = myTableModel0.isCellEditable(2246, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      Object object0 = myTableModel0.getValueAt(61, 61);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      // Undeclared exception!
      try { 
        myTableModel0.getValueAt(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      // Undeclared exception!
      try { 
        myTableModel0.getValueAt(65443, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 65443, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      int int0 = myTableModel0.getRowCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      String string0 = myTableModel0.getColumnName(65443);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MyTableModel myTableModel0 = new MyTableModel((SwingGui) null);
      JTable jTable0 = new JTable(myTableModel0);
      assertEquals(2, myTableModel0.getColumnCount());
  }
}
