/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 21:11:52 GMT 2018
 */

package org.mozilla.javascript.tools.debugger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import javax.swing.JTree;
import javax.swing.event.TreeModelListener;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.tools.debugger.Dim;
import org.mozilla.javascript.tools.debugger.VariableModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class VariableModel_ESTest extends VariableModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      Object object0 = variableModel0.getRoot();
      variableModel0.valueForPathChanged((TreePath) null, object0);
      assertEquals(2, variableModel0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      Object object0 = variableModel0.getRoot();
      variableModel0.setValueAt(object0, variableModel0, (-3800));
      assertEquals(2, variableModel0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel((Dim) null, (Object) null);
      variableModel0.removeTreeModelListener((TreeModelListener) null);
      assertEquals(2, variableModel0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      boolean boolean0 = variableModel0.isLeaf(2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      boolean boolean0 = variableModel0.isCellEditable(variableModel0, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Dim dim0 = new Dim();
      Object object0 = new Object();
      VariableModel variableModel0 = new VariableModel(dim0, object0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      dim0.attachTo(contextFactory0);
      Object object1 = variableModel0.getValueAt((Object) null, 1);
      assertEquals("undefined", object1);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 2);
      Object object0 = variableModel0.getRoot();
      Object object1 = variableModel0.getValueAt(object0, 0);
      assertNotNull(object1);
      assertEquals("this", object1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      Object object0 = variableModel0.getRoot();
      Object object1 = variableModel0.getValueAt(object0, 5);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      Object object0 = variableModel0.getRoot();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      dim0.attachTo(contextFactory0);
      Object object0 = variableModel0.getRoot();
      assertNotNull(object0);
      
      int int0 = variableModel0.getIndexOfChild(object0, object0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      Integer integer0 = new Integer(2);
      int int0 = variableModel0.getIndexOfChild(integer0, variableModel0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      String string0 = variableModel0.getColumnName(0);
      assertEquals(" Name", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      int int0 = variableModel0.getColumnCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      // Undeclared exception!
      try { 
        variableModel0.getColumnClass((-660));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -660
         //
         verifyException("org.mozilla.javascript.tools.debugger.VariableModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      int int0 = variableModel0.getChildCount(variableModel0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      Object object0 = variableModel0.getRoot();
      // Undeclared exception!
      try { 
        variableModel0.getChildCount(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.Dim$DimIProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      Object object0 = variableModel0.getRoot();
      // Undeclared exception!
      try { 
        variableModel0.getChild(object0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.Dim$DimIProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Dim dim0 = new Dim();
      VariableModel variableModel0 = new VariableModel(dim0, 3);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      dim0.attachTo(contextFactory0);
      JTree jTree0 = new JTree(variableModel0);
      assertTrue(jTree0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Dim dim0 = new Dim();
      Object object0 = new Object();
      VariableModel variableModel0 = new VariableModel(dim0, object0);
      // Undeclared exception!
      try { 
        variableModel0.getValueAt((Object) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.VariableModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VariableModel variableModel0 = new VariableModel();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Object object0 = variableModel0.getChild(integer0, (-34));
      assertNull(object0);
  }
}
