/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 19:43:42 GMT 2018
 */

package org.mozilla.javascript.tools.shell;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.shell.ConsoleTextArea;
import org.mozilla.javascript.tools.shell.ConsoleWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ConsoleWriter_ESTest extends ConsoleWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConsoleWriter consoleWriter0 = new ConsoleWriter((ConsoleTextArea) null);
      char[] charArray0 = new char[2];
      consoleWriter0.write(charArray0, (-907), (-907));
      assertEquals(2, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConsoleWriter consoleWriter0 = new ConsoleWriter((ConsoleTextArea) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '\n';
      // Undeclared exception!
      try { 
        consoleWriter0.write(charArray0, (int) (byte)0, (int) (byte)17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.mozilla.javascript.tools.shell.ConsoleWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConsoleWriter consoleWriter0 = new ConsoleWriter((ConsoleTextArea) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)10;
      consoleWriter0.write(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)10, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ConsoleTextArea consoleTextArea0 = new ConsoleTextArea(stringArray0);
      ConsoleWriter consoleWriter0 = new ConsoleWriter(consoleTextArea0);
      byte[] byteArray0 = new byte[8];
      consoleWriter0.write(byteArray0);
      consoleWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConsoleWriter consoleWriter0 = new ConsoleWriter((ConsoleTextArea) null);
      consoleWriter0.close();
  }
}
