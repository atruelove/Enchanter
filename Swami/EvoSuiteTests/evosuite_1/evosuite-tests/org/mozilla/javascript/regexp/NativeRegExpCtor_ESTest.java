/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 19:36:04 GMT 2018
 */

package org.mozilla.javascript.regexp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.regexp.NativeRegExpCtor;
import org.mozilla.javascript.regexp.RegExpImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeRegExpCtor_ESTest extends NativeRegExpCtor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      nativeRegExpCtor0.setInstanceIdValue(23, uniqueTag0);
      assertEquals("Function", nativeRegExpCtor0.getClassName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      nativeRegExpCtor0.setInstanceIdValue(16, regExpImpl0);
      assertEquals("RegExp", nativeRegExpCtor0.getFunctionName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      nativeRegExpCtor0.setInstanceIdValue(2, regExpImpl0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(4, 0);
      assertEquals(2, nativeRegExpCtor0.getArity());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(23, 4);
      assertEquals("RegExp", nativeRegExpCtor0.getFunctionName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.setInstanceIdAttributes((-2572), 26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2572
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(10, 4);
      assertEquals(2, nativeRegExpCtor0.getLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(9, 4);
      assertFalse(nativeRegExpCtor0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(8, 1929);
      assertEquals(2, nativeRegExpCtor0.getArity());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      nativeRegExpCtor0.setInstanceIdAttributes(7, 0);
      assertEquals(2, nativeRegExpCtor0.getArity());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      int int0 = nativeRegExpCtor0.getLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      // Undeclared exception!
      try { 
        nativeRegExpCtor0.getInstanceIdValue(437);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 437
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      String string0 = nativeRegExpCtor0.getFunctionName();
      assertEquals("RegExp", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      int int0 = nativeRegExpCtor0.getArity();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      int int0 = nativeRegExpCtor0.findInstanceIdInfo("pg");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeRegExpCtor nativeRegExpCtor0 = new NativeRegExpCtor();
      Object[] objectArray0 = nativeRegExpCtor0.getIds();
      assertEquals(21, objectArray0.length);
  }
}
