/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 04:29:44 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.RhinoException;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeError_ESTest extends NativeError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeError nativeError0 = new NativeError();
      IdFunctionObject idFunctionObject0 = nativeError0.exportAsJSClass(14, nativeArrayBuffer0, false);
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.defineOwnProperties(context0, idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type number
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.setStackProvider((RhinoException) null);
      assertFalse(nativeError0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(0);
      NativeError nativeError0 = new NativeError();
      Object object0 = nativeError0.getStackDelegated(nativeArrayBuffer0);
      nativeError0.setStackDelegated(nativeError0, object0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Object[] objectArray0 = new Object[2];
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeError0, "Error", 4, "Error", 4, nativeError0);
      // Undeclared exception!
      try { 
        nativeError0.execIdCall(idFunctionObjectES6_0, (Context) null, idFunctionObjectES6_0, idFunctionObjectES6_0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4
         //
         verifyException("org.mozilla.javascript.NativeError", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Object[] objectArray0 = new Object[2];
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeError0, ".VS5N", 4, ".VS5N", 4, nativeError0);
      // Undeclared exception!
      try { 
        nativeError0.execIdCall(idFunctionObjectES6_0, (Context) null, idFunctionObjectES6_0, idFunctionObjectES6_0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=4 MASTER=Error: 
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }
}
