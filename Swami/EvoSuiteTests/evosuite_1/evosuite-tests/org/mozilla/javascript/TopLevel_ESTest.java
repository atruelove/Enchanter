/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 07:46:06 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.TopLevel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TopLevel_ESTest extends TopLevel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = Context.getCurrentContext();
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.Error;
      // Undeclared exception!
      try { 
        TopLevel.getNativeErrorCtor(context0, importerTopLevel0, topLevel_NativeErrors0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Constructor for \"Error\" not found.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      String string0 = topLevel0.getClassName();
      assertEquals("global", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Array;
      Function function0 = TopLevel.getBuiltinCtor(context0, (Scriptable) importerTopLevel0, topLevel_Builtins0);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.URIError;
      // Undeclared exception!
      try { 
        TopLevel.getNativeErrorCtor(context0, function0, topLevel_NativeErrors0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
