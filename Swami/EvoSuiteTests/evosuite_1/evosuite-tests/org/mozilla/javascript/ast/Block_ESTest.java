/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:49:12 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.BreakStatement;
import org.mozilla.javascript.ast.NodeVisitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Block_ESTest extends Block_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = new Block(1);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      block0.visit(astNode_DebugPrintVisitor0);
      assertEquals("\u0000\u0000\u00001\tBLOCK 1 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(130, block0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Block block0 = new Block(0, 0);
      // Undeclared exception!
      try { 
        block0.visit((NodeVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.Block", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Block block0 = new Block();
      Node node0 = Node.newString(3040, "n!yJwp#|DS9p");
      block0.addChildrenToFront(node0);
      String string0 = block0.toSource(89);
      assertEquals("                                                                                                                                                                                  {\n                                                                                                                                                                                    n!yJwp#|DS9p                                                                                                                                                                                  }\n", string0);
      assertEquals("130", block0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Block block0 = new Block(1);
      BreakStatement breakStatement0 = new BreakStatement(11);
      block0.addStatement(breakStatement0);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      block0.visit(astNode_DebugPrintVisitor0);
      assertEquals("\u0000\u0000\u00001\tBLOCK 1 11\n11\t  BREAK 10 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("\u0000\u0000\u00001\tBLOCK 1 11\n11\t  BREAK 10 1\n", stringBuilder0.toString());
  }
}
