/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:00:54 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.CatchClause;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.ObjectProperty;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CatchClause_ESTest extends CatchClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Block block0 = new Block(16, (-378));
      catchClause0.setBody(block0);
      Name name0 = new Name((-103), "py`/");
      catchClause0.setVarName(name0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      catchClause0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tCATCH -1 1\n-103\t  NAME -102 4 py`/\n16\t  BLOCK 17 -378\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("125", catchClause0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      ObjectProperty objectProperty0 = new ObjectProperty();
      catchClause0.setCatchCondition(objectProperty0);
      Name name0 = new Name(25, 0, "PDX<\"bY");
      catchClause0.setVarName(name0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "ObjectProperty");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        catchClause0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.InfixExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      // Undeclared exception!
      try { 
        catchClause0.toSource(82);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.CatchClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      Name name0 = new Name(25, 0, "");
      catchClause0.setVarName(name0);
      // Undeclared exception!
      try { 
        catchClause0.toSource(82);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.CatchClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      catchClause0.setRp((-98));
      assertEquals((-98), catchClause0.getRp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause(1727);
      catchClause0.setParens(1727, 1727);
      assertEquals(1727, catchClause0.getLp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      catchClause0.setLp(4);
      assertEquals(4, catchClause0.getLp());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      catchClause0.setIfPosition((-1798));
      assertEquals((-1798), catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      ObjectProperty objectProperty0 = new ObjectProperty();
      catchClause0.setCatchCondition(objectProperty0);
      Name name0 = new Name(25, 0, "");
      catchClause0.setVarName(name0);
      // Undeclared exception!
      try { 
        catchClause0.toSource(82);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ObjectProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      Block block0 = new Block(16, (-378));
      catchClause0.setBody(block0);
      Name name0 = new Name((-103), "py`/");
      catchClause0.setVarName(name0);
      catchClause0.toSource(2644);
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals(125, catchClause0.getType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      catchClause0.getVarName();
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), catchClause0.getLp());
      assertEquals(125, catchClause0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      int int0 = catchClause0.getLp();
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), int0);
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getRp());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause(203);
      catchClause0.getCatchCondition();
      assertEquals((-1), catchClause0.getRp());
      assertEquals(125, catchClause0.getType());
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-1848), 21);
      catchClause0.getBody();
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getIfPosition());
      assertEquals((-1), catchClause0.getLp());
      assertEquals(125, catchClause0.getType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause();
      int int0 = catchClause0.getRp();
      assertEquals((-1), int0);
      assertEquals("125", catchClause0.toString());
      assertEquals((-1), catchClause0.getLp());
      assertEquals((-1), catchClause0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatchClause catchClause0 = new CatchClause((-98));
      int int0 = catchClause0.getIfPosition();
      assertEquals(125, catchClause0.getType());
      assertEquals((-1), int0);
      assertEquals((-1), catchClause0.getRp());
      assertEquals((-1), catchClause0.getLp());
  }
}
