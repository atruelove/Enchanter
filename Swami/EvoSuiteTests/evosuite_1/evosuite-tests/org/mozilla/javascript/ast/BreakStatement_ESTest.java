/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:33:57 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.BreakStatement;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.Scope;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BreakStatement_ESTest extends BreakStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement();
      Name name0 = (Name)Node.newString("dorT^!&F0%Y");
      breakStatement0.setBreakLabel(name0);
      StringBuilder stringBuilder0 = new StringBuilder("                              break dorT^!&F0%Y;\n");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      breakStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("                              break dorT^!&F0%Y;\n-1\tBREAK -1 1\n-1\t  STRING 0 11\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("                              break dorT^!&F0%Y;\n-1\tBREAK -1 1\n-1\t  STRING 0 11\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement();
      String string0 = breakStatement0.toSource(15);
      assertEquals("                              break;\n", string0);
      assertEquals("121", breakStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement(3792, (-84));
      Scope scope0 = new Scope(3);
      breakStatement0.setBreakTarget(scope0);
      assertEquals("121", breakStatement0.toString());
      assertEquals((-84), breakStatement0.getLength());
      assertEquals(3792, breakStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement(0);
      breakStatement0.getBreakTarget();
      assertEquals(0, breakStatement0.getPosition());
      assertEquals(121, breakStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement(3792, (-84));
      breakStatement0.getBreakLabel();
      assertEquals((-84), breakStatement0.getLength());
      assertEquals(3792, breakStatement0.getAbsolutePosition());
      assertEquals("121", breakStatement0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement();
      Name name0 = (Name)Node.newString("dorT^!&F0%Y");
      breakStatement0.setBreakLabel(name0);
      assertEquals(1, name0.depth());
      
      String string0 = breakStatement0.toSource(15);
      assertEquals("                              break dorT^!&F0%Y;\n", string0);
  }
}
