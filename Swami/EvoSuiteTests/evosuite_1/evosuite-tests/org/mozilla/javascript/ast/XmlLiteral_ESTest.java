/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 16:38:55 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.XmlExpression;
import org.mozilla.javascript.ast.XmlFragment;
import org.mozilla.javascript.ast.XmlLiteral;
import org.mozilla.javascript.ast.XmlString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class XmlLiteral_ESTest extends XmlLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral(122, (-1));
      XmlString xmlString0 = new XmlString((-519), "wQO}a[X5b8G");
      xmlLiteral0.addFragment(xmlString0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "wQO}a[X5b8G");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlLiteral0.visit(astNode_DebugPrintVisitor0);
      assertEquals("wQO}a[X5b8G122\tXML 122 -1\n-519\t  XML -641 11\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(146, xmlLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral(3343);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlLiteral0.visit(astNode_DebugPrintVisitor0);
      assertEquals("3343\tXML 3343 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("146", xmlLiteral0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      XmlString xmlString0 = new XmlString(24, "");
      xmlLiteral0.addFragment(xmlString0);
      String string0 = xmlLiteral0.toSource(465);
      assertEquals(146, xmlLiteral0.getType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral(378);
      LinkedList<XmlFragment> linkedList0 = new LinkedList<XmlFragment>();
      XmlExpression xmlExpression0 = new XmlExpression(25, (-1769));
      linkedList0.addFirst(xmlExpression0);
      xmlLiteral0.setFragments(linkedList0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        xmlLiteral0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.XmlExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlLiteral xmlLiteral0 = new XmlLiteral();
      List<XmlFragment> list0 = xmlLiteral0.getFragments();
      xmlLiteral0.setFragments(list0);
      assertEquals(146, xmlLiteral0.getType());
  }
}
