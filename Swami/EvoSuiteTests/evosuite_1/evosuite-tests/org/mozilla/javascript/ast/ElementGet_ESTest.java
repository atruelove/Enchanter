/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:48:57 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ElementGet;
import org.mozilla.javascript.ast.ForLoop;
import org.mozilla.javascript.ast.GeneratorExpression;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.Yield;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ElementGet_ESTest extends ElementGet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Name name0 = new Name((-1179), 1976);
      ElementGet elementGet0 = new ElementGet(name0, name0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      elementGet0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tGETELEM -1 1\n-1179\t  NAME -1178 1976 null\n-1179\t  NAME -1178 1976 null\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("36", elementGet0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Yield yield0 = new Yield(36, 3684);
      ElementGet elementGet0 = new ElementGet(yield0, yield0);
      String string0 = elementGet0.toSource((-226));
      assertEquals("yield[yield]", string0);
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), elementGet0.getLb());
      assertEquals("36", elementGet0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ForLoop forLoop0 = new ForLoop(2470);
      ElementGet elementGet0 = new ElementGet(forLoop0, forLoop0);
      elementGet0.setParens(911, 0);
      assertEquals(911, elementGet0.getLb());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Yield yield0 = new Yield(36, 3684);
      ElementGet elementGet0 = new ElementGet(yield0, yield0);
      elementGet0.setLb((-1842));
      assertEquals((-1842), elementGet0.getLb());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet(1, 1);
      elementGet0.getTarget();
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), elementGet0.getLb());
      assertEquals(36, elementGet0.getType());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(0, 0);
      ElementGet elementGet0 = new ElementGet(generatorExpression0, generatorExpression0);
      int int0 = elementGet0.getRb();
      assertEquals((-1), elementGet0.getLb());
      assertEquals(36, elementGet0.getType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Name name0 = new Name((-1179), 1976);
      ElementGet elementGet0 = new ElementGet(name0, name0);
      AstNode astNode0 = elementGet0.getElement();
      assertEquals((-1), elementGet0.getRb());
      assertNotNull(astNode0);
      assertEquals("36", elementGet0.toString());
      assertEquals((-1), elementGet0.getLb());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Yield yield0 = new Yield(36, 3684);
      ElementGet elementGet0 = new ElementGet(yield0, yield0);
      int int0 = elementGet0.getLb();
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), int0);
      assertEquals(36, elementGet0.getType());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet(396);
      assertEquals((-1), elementGet0.getRb());
      assertEquals((-1), elementGet0.getLb());
      assertEquals("36", elementGet0.toString());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ElementGet elementGet0 = new ElementGet();
      elementGet0.setRb(640);
      assertEquals(640, elementGet0.getRb());
  }
}
