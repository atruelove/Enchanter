/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:42:10 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.FunctionCall;
import org.mozilla.javascript.ast.NewExpression;
import org.mozilla.javascript.ast.SwitchCase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class FunctionCall_ESTest extends FunctionCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      SwitchCase switchCase0 = new SwitchCase(9);
      NewExpression newExpression0 = new NewExpression();
      newExpression0.setTarget(switchCase0);
      functionCall0.setTarget(switchCase0);
      functionCall0.addArgument(newExpression0);
      String string0 = functionCall0.debugPrint();
      assertEquals((-1), functionCall0.getRp());
      assertEquals("-1\tCALL -1 1\n9\t  CASE 10 1\n-1\t  NEW 0 1\n9\t  CASE 10 1\n", string0);
      assertEquals((-1), functionCall0.getLp());
      assertEquals(38, functionCall0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      SwitchCase switchCase0 = new SwitchCase(10, 5);
      NewExpression newExpression0 = new NewExpression(1);
      functionCall0.setTarget(switchCase0);
      functionCall0.addArgument(newExpression0);
      // Undeclared exception!
      try { 
        functionCall0.toSource(24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.NewExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      SwitchCase switchCase0 = new SwitchCase();
      functionCall0.setTarget(switchCase0);
      String string0 = functionCall0.toSource(3);
      assertEquals((-1), functionCall0.getRp());
      assertEquals(38, functionCall0.getType());
      assertEquals((-1), functionCall0.getLp());
      assertEquals("      default:\n()", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      functionCall0.setRp((-6631));
      assertEquals((-6631), functionCall0.getRp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      functionCall0.setParens(0, 0);
      assertEquals(0, functionCall0.getLp());
      assertEquals(0, functionCall0.getRp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewExpression newExpression0 = new NewExpression();
      newExpression0.setLp(118);
      assertEquals(118, newExpression0.getLp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewExpression newExpression0 = new NewExpression();
      LinkedList<AstNode> linkedList0 = new LinkedList<AstNode>();
      linkedList0.add((AstNode) newExpression0);
      newExpression0.setArguments(linkedList0);
      newExpression0.setArguments(linkedList0);
      assertEquals(0, newExpression0.getPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      functionCall0.setArguments((List<AstNode>) null);
      assertEquals((-1), functionCall0.getLp());
      assertEquals((-1), functionCall0.getRp());
      assertEquals("38", functionCall0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewExpression newExpression0 = new NewExpression(782);
      newExpression0.getTarget();
      assertEquals((-1), newExpression0.getLp());
      assertEquals((-1), newExpression0.getRp());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall((-1364));
      int int0 = functionCall0.getRp();
      assertEquals("38", functionCall0.toString());
      assertEquals((-1), functionCall0.getLp());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FunctionCall functionCall0 = new FunctionCall();
      int int0 = functionCall0.getLp();
      assertEquals((-1), functionCall0.getRp());
      assertEquals((-1), int0);
      assertEquals(38, functionCall0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewExpression newExpression0 = new NewExpression(15, 6);
      assertEquals((-1), newExpression0.getLp());
      assertEquals((-1), newExpression0.getRp());
  }
}
