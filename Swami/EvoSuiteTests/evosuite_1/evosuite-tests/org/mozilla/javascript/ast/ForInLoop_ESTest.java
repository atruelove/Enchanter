/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:27:01 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.ArrayComprehensionLoop;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ForInLoop;
import org.mozilla.javascript.ast.GeneratorExpressionLoop;
import org.mozilla.javascript.ast.XmlString;
import org.mozilla.javascript.ast.Yield;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ForInLoop_ESTest extends ForInLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      Yield yield0 = new Yield(17);
      forInLoop0.iteratedObject = (AstNode) yield0;
      XmlString xmlString0 = new XmlString();
      forInLoop0.setIterator(xmlString0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        forInLoop0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ForInLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      XmlString xmlString0 = new XmlString();
      forInLoop0.setIterator(xmlString0);
      forInLoop0.setIteratedObject(xmlString0);
      // Undeclared exception!
      try { 
        forInLoop0.toSource(25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ForInLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      XmlString xmlString0 = new XmlString();
      forInLoop0.setIterator(xmlString0);
      forInLoop0.setIsForOf(true);
      // Undeclared exception!
      try { 
        forInLoop0.toSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ForInLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      forInLoop0.setIsForEach(true);
      // Undeclared exception!
      try { 
        forInLoop0.toSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ForInLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      generatorExpressionLoop0.setInPosition((-1));
      assertEquals((-1), generatorExpressionLoop0.getInPosition());
      assertEquals((-1), generatorExpressionLoop0.getEachPosition());
      assertEquals("120", generatorExpressionLoop0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      forInLoop0.setEachPosition(2275);
      assertEquals(2275, forInLoop0.getEachPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      forInLoop0.isForOf();
      assertEquals("120", forInLoop0.toString());
      assertEquals((-1), forInLoop0.getInPosition());
      assertEquals((-1), forInLoop0.getEachPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      forInLoop0.getIterator();
      assertEquals((-1), forInLoop0.getInPosition());
      assertEquals((-1), forInLoop0.getEachPosition());
      assertEquals(120, forInLoop0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      forInLoop0.getIteratedObject();
      assertEquals(120, forInLoop0.getType());
      assertEquals((-1), forInLoop0.getEachPosition());
      assertEquals((-1), forInLoop0.getInPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop((-783), (-783));
      int int0 = arrayComprehensionLoop0.getEachPosition();
      assertEquals((-1), int0);
      assertEquals(120, arrayComprehensionLoop0.getType());
      assertEquals((-1), arrayComprehensionLoop0.getInPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop(432);
      assertEquals(120, forInLoop0.getType());
      assertEquals((-1), forInLoop0.getEachPosition());
      assertEquals((-1), forInLoop0.getInPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForInLoop forInLoop0 = new ForInLoop();
      int int0 = forInLoop0.getInPosition();
      assertEquals((-1), int0);
      assertEquals((-1), forInLoop0.getEachPosition());
      assertEquals(120, forInLoop0.getType());
  }
}
