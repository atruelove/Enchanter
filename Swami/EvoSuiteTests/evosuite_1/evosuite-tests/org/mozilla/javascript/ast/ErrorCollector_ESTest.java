/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:18:19 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.ErrorCollector;
import org.mozilla.javascript.ast.ParseProblem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ErrorCollector_ESTest extends ErrorCollector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      // Undeclared exception!
      try { 
        errorCollector0.warning("", "", (-2374), "", (-2374));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ErrorCollector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      errorCollector0.warning("org.mozilla.javascript.ast.ErrorCollector", "ezy=nh u", 0, (-1530));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      String string0 = errorCollector0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      // Undeclared exception!
      try { 
        errorCollector0.runtimeError("length=", "w", (-1530), "", (-2333));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ErrorCollector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      List<ParseProblem> list0 = errorCollector0.getErrors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      // Undeclared exception!
      try { 
        errorCollector0.error((String) null, "warning: ", 0, "warning: :offset=116,length=0,error: warning: \n", 200);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ErrorCollector", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ErrorCollector errorCollector0 = new ErrorCollector();
      errorCollector0.error("warning: ", "warning: ", 116, 0);
      String string0 = errorCollector0.toString();
      assertEquals("warning: :offset=116,length=0,error: warning: \n", string0);
  }
}
