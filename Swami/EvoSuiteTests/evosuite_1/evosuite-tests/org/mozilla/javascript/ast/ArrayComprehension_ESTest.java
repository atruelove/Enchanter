/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:47:42 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.ArrayComprehension;
import org.mozilla.javascript.ast.ArrayComprehensionLoop;
import org.mozilla.javascript.ast.ArrayLiteral;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Name;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ArrayComprehension_ESTest extends ArrayComprehension_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(0);
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(2, (-2046));
      arrayComprehension0.setFilter(arrayLiteral0);
      Name name0 = new Name(3);
      arrayComprehension0.setResult(name0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      arrayComprehension0.visit(astNode_DebugPrintVisitor0);
      assertEquals("0\tARRAYCOMP 0 1\n3\t  NAME 3 1 null\n2\t  ARRAYLIT 2 -2046\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), arrayComprehension0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(0);
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(11);
      arrayComprehension0.addLoop(arrayComprehensionLoop0);
      Name name0 = new Name(3);
      arrayComprehension0.setResult(name0);
      // Undeclared exception!
      try { 
        arrayComprehension0.debugPrint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ArrayComprehensionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      Name name0 = new Name(2, 1);
      arrayComprehension0.setResult(name0);
      String string0 = arrayComprehension0.debugPrint();
      assertEquals("-1\tARRAYCOMP -1 1\n2\t  NAME 3 1 null\n", string0);
      assertEquals((-1), arrayComprehension0.getFilterLp());
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals("158", arrayComprehension0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(18, 12);
      arrayComprehension0.addLoop(arrayComprehensionLoop0);
      Name name0 = new Name(25, 24);
      arrayComprehension0.setResult(name0);
      // Undeclared exception!
      try { 
        arrayComprehension0.toSource(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ArrayComprehensionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      Name name0 = new Name(25, 24);
      arrayComprehension0.setResult(name0);
      String string0 = arrayComprehension0.toSource(4);
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals("158", arrayComprehension0.toString());
      assertEquals("[<null>]", string0);
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals((-1), arrayComprehension0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      LinkedList<ArrayComprehensionLoop> linkedList0 = new LinkedList<ArrayComprehensionLoop>();
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
      linkedList0.add(arrayComprehensionLoop0);
      arrayComprehension0.setLoops(linkedList0);
      assertEquals((-1), arrayComprehension0.getFilterLp());
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals("158", arrayComprehension0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      arrayComprehension0.setIfPosition((-582));
      assertEquals((-582), arrayComprehension0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(894, 388);
      assertEquals((-1), arrayComprehension0.getFilterRp());
      
      arrayComprehension0.setFilterRp(0);
      assertEquals(0, arrayComprehension0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      arrayComprehension0.setFilterLp((-1890));
      assertEquals((-1890), arrayComprehension0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(2);
      arrayComprehension0.setFilter(arrayLiteral0);
      assertEquals(3, arrayLiteral0.getPosition());
      
      Name name0 = new Name(2, 1);
      arrayComprehension0.setResult(name0);
      String string0 = arrayComprehension0.toSource(19);
      assertEquals("[<null> if ([])]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(3538, 3538);
      arrayComprehension0.getLoops();
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals((-1), arrayComprehension0.getFilterLp());
      assertEquals("158", arrayComprehension0.toString());
      assertEquals((-1), arrayComprehension0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      int int0 = arrayComprehension0.getIfPosition();
      assertEquals((-1), int0);
      assertEquals(158, arrayComprehension0.getType());
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals((-1), arrayComprehension0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      int int0 = arrayComprehension0.getFilterRp();
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals((-1), int0);
      assertEquals((-1), arrayComprehension0.getFilterLp());
      assertEquals(158, arrayComprehension0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension();
      arrayComprehension0.getFilter();
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals("158", arrayComprehension0.toString());
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals((-1), arrayComprehension0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(894, 388);
      arrayComprehension0.getResult();
      assertEquals((-1), arrayComprehension0.getFilterLp());
      assertEquals((-1), arrayComprehension0.getIfPosition());
      assertEquals(158, arrayComprehension0.getType());
      assertEquals((-1), arrayComprehension0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(0);
      int int0 = arrayComprehension0.getFilterLp();
      assertEquals((-1), int0);
      assertEquals((-1), arrayComprehension0.getFilterRp());
      assertEquals("158", arrayComprehension0.toString());
      assertEquals((-1), arrayComprehension0.getIfPosition());
  }
}
