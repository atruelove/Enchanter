/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 16:54:57 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.SwitchCase;
import org.mozilla.javascript.ast.SwitchStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SwitchStatement_ESTest extends SwitchStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(0, 0);
      SwitchCase switchCase0 = new SwitchCase(8, 1);
      switchStatement0.addCase(switchCase0);
      switchStatement0.setExpression(switchCase0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      switchStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("0\tSWITCH 0 0\n8\t  CASE 8 1\n8\t  CASE 8 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement();
      SwitchCase switchCase0 = new SwitchCase();
      switchStatement0.setExpression(switchCase0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      switchStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tSWITCH -1 1\n-1\t  CASE 0 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement((-1539));
      SwitchCase switchCase0 = new SwitchCase(117, 6);
      switchStatement0.addCase(switchCase0);
      switchStatement0.setExpression(switchCase0);
      assertEquals(1656, switchCase0.getPosition());
      
      String string0 = switchStatement0.toSource(4);
      assertEquals("        switch (default:\n) {\n          default:\n        }\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(0, 0);
      assertEquals((-1), switchStatement0.getRp());
      
      switchStatement0.setRp(0);
      assertEquals(0, switchStatement0.getRp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(0, 0);
      switchStatement0.setParens(62, 62);
      assertEquals(62, switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement((-1539));
      switchStatement0.setLp((-1));
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getLp());
      assertEquals((-1539), switchStatement0.getPosition());
      assertEquals((-1), switchStatement0.getRp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(0);
      LinkedList<SwitchCase> linkedList0 = new LinkedList<SwitchCase>();
      SwitchCase switchCase0 = new SwitchCase();
      linkedList0.add(switchCase0);
      switchStatement0.setCases(linkedList0);
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getRp());
      assertEquals(0, switchStatement0.getAbsolutePosition());
      assertEquals((-1), switchStatement0.getLp());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement((-1539));
      SwitchCase switchCase0 = new SwitchCase(117, 6);
      switchStatement0.addCase(switchCase0);
      assertEquals(1656, switchCase0.getPosition());
      
      List<SwitchCase> list0 = switchStatement0.getCases();
      switchStatement0.setCases(list0);
      assertEquals((-1539), switchStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(0, 0);
      switchStatement0.setCases((List<SwitchCase>) null);
      assertEquals((-1), switchStatement0.getRp());
      assertEquals(0, switchStatement0.getLength());
      assertEquals(115, switchStatement0.getType());
      assertEquals((-1), switchStatement0.getLp());
      assertEquals(0, switchStatement0.getAbsolutePosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement((-1539));
      int int0 = switchStatement0.getRp();
      assertEquals((-1), switchStatement0.getLp());
      assertEquals((-1539), switchStatement0.getAbsolutePosition());
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement(4713, 4713);
      int int0 = switchStatement0.getLp();
      assertEquals(4713, switchStatement0.getLength());
      assertEquals(115, switchStatement0.getType());
      assertEquals((-1), switchStatement0.getRp());
      assertEquals((-1), int0);
      assertEquals(4713, switchStatement0.getAbsolutePosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SwitchStatement switchStatement0 = new SwitchStatement((-1539));
      switchStatement0.getExpression();
      assertEquals((-1), switchStatement0.getLp());
      assertEquals((-1539), switchStatement0.getAbsolutePosition());
      assertEquals("115", switchStatement0.toString());
      assertEquals((-1), switchStatement0.getRp());
  }
}
