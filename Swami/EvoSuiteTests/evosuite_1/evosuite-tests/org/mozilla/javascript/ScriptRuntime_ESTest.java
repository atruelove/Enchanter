/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 23:34:42 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.BoundFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.EcmaError;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.InterpretedFunction;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.JavaMembers;
import org.mozilla.javascript.JavaScriptException;
import org.mozilla.javascript.MemberBox;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.NativeFunction;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaArray;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.NativeJavaPackage;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.NativeSymbol;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Ref;
import org.mozilla.javascript.RegExpProxy;
import org.mozilla.javascript.ScriptRuntime;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Symbol;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.Synchronizer;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;
import org.mozilla.javascript.xml.XMLLib;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScriptRuntime_ESTest extends ScriptRuntime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.wrapRegExp(context0, (Scriptable) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        ScriptRuntime.wrapException((Throwable) null, nativeCall0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) null, false);
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        ScriptRuntime.uneval(context0, scriptableObject0, nativeCall0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) null, false);
      String string0 = ScriptRuntime.uneval(context0, scriptableObject0, (Object) null);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject((Object) context0.generateObserverCount, context0, (Scriptable) nativeArrayBuffer0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.Boolean@0000000004 is not a function, it is boolean.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-61));
      String string0 = ScriptRuntime.typeof(byte0);
      assertEquals("number", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NativeObject nativeObject0 = new NativeObject();
      Synchronizer synchronizer0 = new Synchronizer(nativeObject0);
      SymbolKey symbolKey0 = SymbolKey.SPECIES;
      // Undeclared exception!
      try { 
        nativeObject0.put((Symbol) symbolKey0, (Scriptable) synchronizer0, (Object) fileSystemHandling0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Object function does not support Symbol keys
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(180);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      BoundFunction boundFunction0 = null;
      try {
        boundFunction0 = new BoundFunction(context0, nativeUint8Array0, nativeJavaTopPackage0, nativeJavaTopPackage0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      // Undeclared exception!
      try { 
        ScriptRuntime.getNameFunctionAndThis("", context0, nativeInt8Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(777);
      Object[] objectArray0 = ScriptRuntime.getArrayElements(nativeInt16Array0);
      assertEquals(777, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      char char0 = ScriptRuntime.toUint16(importerTopLevel0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.toString(context0.emptyArgs, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      RegExpProxy regExpProxy0 = ScriptRuntime.checkRegExpProxy(context0);
      Class<BaseFunction> class0 = BaseFunction.class;
      Object object0 = ScriptRuntime.toPrimitive((Object) regExpProxy0, (Class<?>) class0);
      assertSame(regExpProxy0, object0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        ScriptRuntime.toPrimitive((Object) nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Context context0 = Context.getContext();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        ScriptRuntime.toObjectOrNull(context0, (Object) contextFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Context context0 = Context.getContext();
      Scriptable scriptable0 = ScriptRuntime.toObjectOrNull(context0, (Object) null);
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Context context0 = Context.enter();
      NativeNumber nativeNumber0 = new NativeNumber((-1138.56));
      Scriptable scriptable0 = ScriptRuntime.toObjectOrNull(context0, (Object) nativeNumber0);
      assertSame(scriptable0, nativeNumber0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<Object> class0 = Object.class;
      Scriptable scriptable0 = ScriptRuntime.toObject((Scriptable) delegator0, (Object) delegator0, (Class<?>) class0);
      assertSame(delegator0, scriptable0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Class<Synchronizer> class0 = Synchronizer.class;
      // Undeclared exception!
      try { 
        ScriptRuntime.toObject((Scriptable) nativeBoolean0, (Object) context0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      TopLevel topLevel0 = new TopLevel();
      NativeCall nativeCall1 = (NativeCall)ScriptRuntime.toObject((Scriptable) topLevel0, (Object) nativeCall0);
      assertFalse(nativeCall1.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "__parent__";
      TopLevel topLevel0 = new TopLevel();
      NativeString nativeString0 = (NativeString)ScriptRuntime.toObject((Scriptable) topLevel0, (Object) string0);
      assertEquals("__parent__", nativeString0.toString());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Context context0 = Context.getContext();
      Class<NativeGenerator> class0 = NativeGenerator.class;
      // Undeclared exception!
      try { 
        ScriptRuntime.toObject(context0, (Scriptable) null, (Object) null, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot convert null to an object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.typeErrorThrower();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.toNumber(context0.emptyArgs, 140);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        ScriptRuntime.toInteger(objectArray0, (-2216));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2216
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((double) 84);
      assertEquals(84.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((double) (-1));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((Object) "org.mozilla.javascript.typedarrays.NativeFloat32Array");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((Object) "");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      EcmaError ecmaError0 = ScriptRuntime.constructError("msg.primitive.expected", "msg.primitive.expected", 48);
      ScriptRuntime.toInt32((Object) ecmaError0);
      assertEquals(0, ecmaError0.columnNumber());
      assertEquals(0, ecmaError0.getLineNumber());
      assertEquals(0, ecmaError0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NativeString nativeString0 = new NativeString("Symbol(Symbol.search)");
      CharSequence charSequence0 = ScriptRuntime.toCharSequence(nativeString0);
      assertEquals("Symbol(Symbol.search)", charSequence0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, context0);
      ArrowFunction arrowFunction0 = null;
      try {
        arrowFunction0 = new ArrowFunction(context0, importerTopLevel0, synchronizer0, synchronizer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ScriptableObject.isFalse((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) nativeArray0);
      boolean boolean0 = ScriptRuntime.toBoolean(predicate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.throwError(context0, (Scriptable) null, "OpenJDK 64-Bit Server VM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.throwCustomError(context0, topLevel0, "", "N?U<WYJ{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Constructor for \"\" not found.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("AN");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.stringPrefixToNumber("error reporter", (-2130), 7);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.stringToNumber("javaException", (-342), 2022, 46);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(10);
      Scriptable scriptable0 = context0.newArray((Scriptable) nativeUint16Array0, (-1));
      // Undeclared exception!
      try { 
        context0.compileFunction(scriptable0, "8_FO|Yc.\":zJWYCh", "Z&D<QQU$%C@rn", 10000, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (Z&D<QQU$%C@rn#10000)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Context context1 = (Context)ScriptRuntime.strictSetName(nativeJavaTopPackage0, context0, context0, nativeJavaTopPackage0, "(Function)");
      assertEquals(8, Context.FEATURE_STRICT_VARS);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.strictSetName((Scriptable) null, context0, context0, (Scriptable) null, "w2BqAn}<HyNfG[A)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: Assignment to undefined \"w2BqAn}<HyNfG[A)\" in strict mode
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.storeUint32Result(context0, (-1238L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = Context.getContext();
      ScriptRuntime.storeUint32Result(context0, 3086L);
      assertEquals(0, context0.getInstructionObserverThreshold());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.specialRef((Object) null, (String) null, context0, (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"null\" from null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6((IdFunctionCall) null, (Object) null, 1180, "JmONh?UlIZ`hDC", 263, nativeJavaClass0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.specialRef((Object) idFunctionObjectES6_0, "1#d\"kc", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Short short0 = new Short((short)0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = nativeBoolean0.sameValue(short0, nativeIterator_StopIteration0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      EcmaError ecmaError0 = ScriptRuntime.constructError("mozilla", "ast", (-42));
      boolean boolean0 = ScriptRuntime.shallowEq(ecmaError0, (Object) null);
      assertEquals(0, ecmaError0.getColumnNumber());
      assertEquals("ast", ecmaError0.getErrorMessage());
      assertFalse(boolean0);
      assertEquals("mozilla", ecmaError0.getName());
      assertEquals(0, ecmaError0.lineNumber());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter((Context) null, contextFactory0);
      RegExpProxy regExpProxy0 = context0.getRegExpProxy();
      ScriptRuntime.setRegExpProxy(context0, regExpProxy0);
      assertEquals(170, Context.VERSION_1_7);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context1 = (Context)ScriptRuntime.setObjectProp((Object) nativeIterator_StopIteration0, "Q]YrO6", (Object) context0, context0, (Scriptable) nativeBoolean0);
      assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectProp((Object) nativeJavaTopPackage0, "", (Object) classLoader0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeInt8Array nativeInt8Array1 = (NativeInt8Array)ScriptRuntime.setObjectIndex((Scriptable) nativeInt8Array0, 4, (Object) nativeInt8Array0, context0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectIndex((Object) delegator0, (double) 150, (Object) context0, context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Boolean boolean0 = ScriptRuntime.wrapBoolean(false);
      Byte byte0 = new Byte((byte) (-55));
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectIndex((Object) boolean0, 938.904553152724, (Object) byte0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      Scriptable scriptable0 = ScriptableObject.getObjectPrototype(scriptableObject0);
      ContextFactory contextFactory1 = (ContextFactory)ScriptRuntime.setObjectElem(scriptable0, (Object) null, (Object) contextFactory0, context0);
      assertFalse(contextFactory1.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "HzEOL{nOTID_");
      Delegator delegator0 = new Delegator();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectElem((Object) nativeJavaMethod0, (Object) delegator0, (Object) "HzEOL{nOTID_", context0, (Scriptable) delegator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = null;
      Short short0 = new Short((short)1130);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectElem((Object) string0, (Object) short0, (Object) null, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)ScriptRuntime.setName((Scriptable) null, importerTopLevel0, context0, nativeCall0, "");
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Object object0 = ScriptRuntime.setName(nativeBoolean0, charBuffer0, context0, nativeBoolean0, "error reporter");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        ScriptRuntime.setEnumNumbers(nativeJavaTopPackage0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.NativeJavaTopPackage cannot be cast to org.mozilla.javascript.ScriptRuntime$IdEnumeration
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = ScriptRuntime.makeUrlForGeneratedScript(false, "", 0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.setDefaultNamespace(string0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      Object object0 = ScriptRuntime.setConst(nativeBoolean0, nativeNumber0, context0, "mozilla");
      assertSame(nativeNumber0, object0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.searchDefaultNamespace(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.same((Object) null, "2PH>YH02NN5[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.refSet((Ref) null, (Object) null, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.refDel((Ref) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Float float0 = new Float((double) 17);
      Object object0 = ScriptRuntime.propIncrDecr((Object) float0, "{S#o6SxTpKFh?uR", context0, (Scriptable) scriptableObject0, (-4373));
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(2.147483647E9);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.propIncrDecr((Object) nativeNumber0, (String) null, context0, 130);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object[] objectArray1 = ScriptRuntime.padArguments(objectArray0, (-963));
      assertEquals(6, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString(2, 4);
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.numberToString(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal radix 1.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, (Object) null, context0.emptyArgs, (Scriptable) null, 120);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(2588.36);
      Object[] objectArray0 = new Object[1];
      int[] intArray0 = new int[0];
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(objectArray0, objectArray0, intArray0, context0, (Scriptable) nativeNumber0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeObject nativeObject0 = new NativeObject();
      Context context0 = contextFactory0.makeContext();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(context0.emptyArgs, context0.emptyArgs, intArray0, context0, (Scriptable) nativeObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(context0.emptyArgs, context0.emptyArgs, context0, (Scriptable) nativeJavaTopPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("ZL;9'G{5N*_K");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.wrapException(evaluatorException0, (Scriptable) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject((Object) nativeBoolean0, context0, (Scriptable) nativeBoolean0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: org.mozilla.javascript.NativeBoolean@0000000003 is not a function, it is object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Context context0 = Context.getContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      TopLevel.NativeErrors topLevel_NativeErrors0 = TopLevel.NativeErrors.Error;
      NativeError nativeError0 = (NativeError)ScriptRuntime.newNativeError(context0, scriptableObject0, topLevel_NativeErrors0, context0.emptyArgs);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        ScriptRuntime.newArrayLiteral(objectArray0, intArray0, (Context) null, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        ScriptRuntime.nameRef((Object) "AN", context0, (Scriptable) nativeContinuation0, 2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Number;
      Scriptable scriptable0 = importerTopLevel0.getBuiltinPrototype(topLevel_Builtins0);
      // Undeclared exception!
      try { 
        ScriptRuntime.name(context0, scriptable0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(0);
      // Undeclared exception!
      try { 
        ScriptRuntime.nameIncrDecr((Scriptable) nativeInt8Array0, "", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeWith nativeWith0 = new NativeWith(scriptableObject0, scriptableObject0);
      // Undeclared exception!
      try { 
        ScriptRuntime.name(context0, nativeWith0, "Dalvik");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"Dalvik\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context context0 = Context.getContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.name(context0, scriptableObject0, "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"error reporter\" is not defined.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) nativeArray0);
      Long long0 = new Long(2);
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) predicate0, (Object) long0, (Context) null, 43);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.util.function.Predicate$$Lambda$46/399698753@0000000004 is not an xml object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) null, (Object) null, (Object) null, context0, 16);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: null is not an xml object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = ScriptRuntime.makeUrlForGeneratedScript(true, "ab22U}+ek", 3735);
      assertEquals("ab22U}+ek#3735(eval)", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveWith((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveDotQuery((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      long long0 = ScriptRuntime.lastUint32Result(context0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Context context0 = Context.enter();
      Scriptable scriptable0 = ScriptRuntime.lastStoredScriptable(context0);
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("6", context0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("error reporter", context0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(11);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isSpecialProperty("language version");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Class<NativeSymbol> class0 = NativeSymbol.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isPrimitive("ast");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      boolean boolean0 = ScriptRuntime.isNaN(nativeBoolean0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isGeneratedScript("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isArrayObject((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Context context0 = Context.getContext();
      boolean boolean0 = ScriptRuntime.instanceOf(nativeJavaTopPackage0, nativeJavaTopPackage0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.getContext();
      SymbolKey symbolKey0 = SymbolKey.UNSCOPABLES;
      // Undeclared exception!
      try { 
        ScriptRuntime.instanceOf(nativeBoolean0, symbolKey0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Can't use 'instanceof' on a non-object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(140, "error reporter", "error reporter", true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      NativeNumber nativeNumber0 = new NativeNumber((-1138.56));
      // Undeclared exception!
      try { 
        ScriptRuntime.initScript(interpretedFunction0, nativeNumber0, context0, interpretedFunction0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ContextFactory contextFactory0 = new ContextFactory();
      // Undeclared exception!
      try { 
        ScriptRuntime.in(contextFactory0, (Object) null, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Can't use 'in' on a non-object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1));
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.in(nativeNumber0, nativeNumber0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Float float0 = new Float(24.0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.hasObjectElem((Scriptable) null, float0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(2791);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter((Context) null, contextFactory0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage("ndYlw{65s]*", nativeUint8ClampedArray0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(nativeJavaPackage0, (Context) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: org.mozilla.javascript.NativeJavaPackage@0000000012 is not a function, it is object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter((Context) null, contextFactory0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(nativeJavaTopPackage0, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getPropFunctionAndThis((Object) nativeBoolean0, "setUTCMinutes", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeArray nativeArray0 = new NativeArray(0L);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectPropNoWarn((Object) null, "language version", context0, (Scriptable) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"language version\" from null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectPropNoWarn((Object) null, "", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SymbolKey symbolKey0 = SymbolKey.UNSCOPABLES;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(57296);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) symbolKey0, (String) null, context0, (Scriptable) nativeInt16Array0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.SymbolKey cannot be cast to org.mozilla.javascript.NativeSymbol
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(5);
      Object object0 = ScriptRuntime.getObjectIndex((Object) "", 0.0, context0, (Scriptable) nativeArrayBuffer0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectIndex((Object) null, 2384.29558766833, context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"2384.29558766833\" from null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectIndex((Object) importerTopLevel0, (double) (-1), context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.typeErrorThrower(context0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("%AB", (Object) null, "%AB", "%AB", "%AB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property %AB
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Integer integer0 = ScriptRuntime.wrapInt(0);
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.undefWriteError(integer0, (Object) null, "language version");
      assertEquals(0, ecmaError0.getLineNumber());
      assertEquals(0, ecmaError0.columnNumber());
      assertEquals("Cannot set property \"null\" of 0 to \"language version\"", ecmaError0.getErrorMessage());
      assertEquals("TypeError", ecmaError0.getName());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        XMLLib.extractFromScope(nativeArrayBuffer0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("error reporter");
      assertEquals("error reporter", object0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(0.0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(1414.8683331);
      assertEquals("1414.8683331", object0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.getGlobal((Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis((Object) null, (Object) null, context0, (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot call method \"null\" of null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Integer integer0 = ScriptRuntime.wrapInt(0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, (-1668), 2047);
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis((Object) null, (Object) integer0, context0, (Scriptable) nativeUint16Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot call method \"0\" of null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Object[] objectArray0 = ScriptRuntime.getApplyArguments((Context) null, (Object) null);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getApplyArguments(context0, "Symbol(Symbol.search)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: second argument to Function.prototype.apply must be an array
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.exitActivationFunction(context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter((Context) null, contextFactory0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ScriptableObject scriptableObject0 = context0.initSafeStandardObjects();
      // Undeclared exception!
      try { 
        ScriptRuntime.evalSpecial(context0, scriptableObject0, classLoader0, context0.emptyArgs, "language version", 11);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeTextValue((Object) null, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = ScriptRuntime.escapeString("M94kd;A*{");
      assertEquals("M94kd\\x7f;A*{", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("OpenJDK 64-Bit Server VM");
      // Undeclared exception!
      try { 
        ScriptRuntime.typeof(evaluatorException0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type org.mozilla.javascript.EvaluatorException
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eqNumber(0.0, "as4sVFA]<M?b");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      boolean boolean0 = ScriptRuntime.eq(nativeBoolean0, nativeBoolean0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eq((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Long long0 = new Long(16);
      boolean boolean0 = ScriptRuntime.eq(long0, long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.enumValue((Object) null, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        ScriptRuntime.enumNext(nativeContinuation0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.NativeContinuation cannot be cast to org.mozilla.javascript.ScriptRuntime$IdEnumeration
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.enumId((Object) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.enterActivationFunction(context0, nativeInt8Array0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim(nativeContinuation0, "X[^M$dX>FOzK");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        scriptRuntime_NoSuchMethodShim0.call(context0, nativeContinuation0, nativeContinuation0, context0.emptyArgs);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(180);
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.deleteObjectElem(nativeFloat32Array0, double0, context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) nativeJavaTopPackage0, (Object) null, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.defaultObjectToSource(context0, (Scriptable) null, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      String string0 = ScriptRuntime.defaultObjectToSource(context0, nativeFloat32Array0, nativeFloat32Array0, context0.emptyArgs);
      assertEquals("({})", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        ScriptRuntime.createFunctionActivation((NativeFunction) null, (Scriptable) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        ScriptRuntime.createArrowFunctionActivation((NativeFunction) null, (Scriptable) null, objectArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Float float0 = new Float((float) 150);
      boolean boolean0 = ScriptRuntime.cmp_LT(contextFactory0, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      boolean boolean0 = ScriptRuntime.cmp_LT("OpenJDK 64-Bit Server VM", nativeJavaTopPackage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.cmp_LT(double0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LE("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array(nativeArrayBuffer0, (-3458), 57296);
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeUint16Array0, nativeUint16Array0);
      // Undeclared exception!
      try { 
        ScriptRuntime.cmp_LE(nativeArrayIterator0, nativeArrayBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LE((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeArrayBuffer nativeArrayBuffer1 = (NativeArrayBuffer)ScriptRuntime.checkDynamicScope(nativeJavaObject0, nativeArrayBuffer0);
      assertTrue(nativeArrayBuffer1.isExtensible());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "javascript", classLoader0);
      Scriptable scriptable0 = ScriptRuntime.checkDynamicScope(nativeJavaPackage0, nativeJavaPackage0);
      assertSame(nativeJavaPackage0, scriptable0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeInt32Array0, class0, true);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      // Undeclared exception!
      try { 
        ScriptRuntime.callRef(nativeJavaMethod0, nativeJavaMethod0, (Object[]) null, (Context) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1L));
      Context context0 = Context.getCurrentContext();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.call(context0, context0, nativeObject0, context0.emptyArgs, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000008 is not a function, it is string.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JavaScriptException javaScriptException0 = new JavaScriptException((Object) null, "/jo[1T;SWd$EgLcn(;", 200000);
      Object object0 = ScriptRuntime.add((Object) javaScriptException0, (Object) javaScriptException0, (Context) null);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1L));
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) nativeArray0, (Object) nativeArray0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) topLevel0, (CharSequence) "language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      SymbolKey symbolKey0 = SymbolKey.REPLACE;
      // Undeclared exception!
      try { 
        ScriptRuntime.add((CharSequence) "msg.primitive.expected", (Object) symbolKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: The object is not a string
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      assertEquals(0, ScriptRuntime.ENUMERATE_KEYS);
  }
}
