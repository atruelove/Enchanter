/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 16:33:11 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeJSON;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeJSON_ESTest extends NativeJSON_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Object object0 = ScriptableObject.getProperty((Scriptable) topLevel0, 8);
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(topLevel0, object0, (-1), "+0e^Ymo}8/}", 2, topLevel0);
      // Undeclared exception!
      try { 
        NativeJSON.parse(context0, topLevel0, "[]", idFunctionObjectES6_0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=-1 MASTER=org.mozilla.javascript.TopLevel@3
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.getCurrentContext();
      Object object0 = ScriptableObject.getProperty((Scriptable) topLevel0, 8);
      Object object1 = NativeJSON.stringify(context0, topLevel0, contextFactory0, object0, "N_6Ldpbd26hzJ");
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(8);
      NativeString nativeString0 = new NativeString("language version");
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint32Array0, nativeString0, 12, "error reporter", 19, nativeUint32Array0);
      // Undeclared exception!
      try { 
        NativeJSON.stringify(context0, nativeUint32Array0, nativeUint32Array0, idFunctionObjectES6_0, nativeString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Object[] objectArray0 = new Object[6];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Object object0 = NativeJSON.stringify(context0, nativeBoolean0, "true", nativeArray0, objectArray0[2]);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      NativeString nativeString0 = new NativeString("XH(#fy");
      // Undeclared exception!
      try { 
        NativeJSON.stringify((Context) null, nativeFloat32Array0, nativeString0, nativeString0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array(8);
      NativeString nativeString0 = new NativeString("language version");
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeUint32Array0, nativeString0, 3, "error reporter", 10, nativeUint32Array0);
      // Undeclared exception!
      try { 
        NativeJSON.stringify(context0, nativeUint32Array0, nativeUint32Array0, idFunctionObjectES6_0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=3 MASTER=org.mozilla.javascript.typedarrays.NativeUint32Array@a8
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(44);
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(nativeArrayBuffer0, 0, 2);
      Double double0 = new Double((-4567.1358453795));
      Short short0 = new Short((short)3085);
      Object object0 = NativeJSON.stringify((Context) null, nativeInt8Array0, nativeArrayBuffer0, double0, short0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Object[] objectArray0 = new Object[7];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Context context0 = Context.enter();
      Long long0 = new Long(7);
      Object object0 = NativeJSON.stringify(context0, nativeArray0, nativeArray0, contextFactory0, long0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.getCurrentContext();
      NativeArray nativeArray0 = new NativeArray((-787L));
      Object object0 = NativeJSON.stringify(context0, nativeCall0, nativeArray0, nativeCall0, nativeCall0);
      assertEquals("[]", object0);
  }
}
