/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 08:39:56 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ArrowFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.Delegator;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeBoolean;
import org.mozilla.javascript.NativeCallSite;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeDate;
import org.mozilla.javascript.NativeError;
import org.mozilla.javascript.NativeGenerator;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaArray;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaObject;
import org.mozilla.javascript.NativeJavaPackage;
import org.mozilla.javascript.NativeJavaTopPackage;
import org.mozilla.javascript.NativeNumber;
import org.mozilla.javascript.NativeString;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeJavaObject_ESTest extends NativeJavaObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Short short0 = new Short((short)65);
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, short0);
      assertEquals(65, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.setPrototype(nativeContinuation0);
      assertEquals("Continuation", nativeContinuation0.getClassName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeJavaClass0.setParentScope(nativeIterator_StopIteration0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.put((String) null, (Scriptable) nativeContinuation0, (Object) nativeContinuation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeString nativeString0 = new NativeString("-_.!~*'()");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        nativeJavaClass0.put((-1594), (Scriptable) nativeString0, (Object) contextFactory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      boolean boolean0 = nativeJavaObject0.hasInstance((Scriptable) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "jE9%g", classLoader0);
      boolean boolean0 = nativeJavaClass0.has(534, (Scriptable) nativeJavaPackage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<NativeBoolean> class0 = NativeBoolean.class;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      int int0 = NativeJavaObject.getSizeRank(class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.javaObject = (Object) "";
      // Undeclared exception!
      try { 
        nativeJavaObject0.getPrototype();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Scriptable scriptable0 = nativeJavaObject0.getPrototype();
      assertNull(scriptable0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ArrowFunction arrowFunction0 = null;
      try {
        arrowFunction0 = new ArrowFunction((Context) null, nativeJavaObject0, nativeJavaTopPackage0, nativeJavaObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        nativeJavaObject0.getIds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<NativeDate> class0 = NativeDate.class;
      nativeJavaObject0.javaObject = (Object) class0;
      Object object0 = nativeJavaObject0.getDefaultValue((Class<?>) null);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<NativeArrayIterator> class0 = NativeArrayIterator.class;
      // Undeclared exception!
      try { 
        nativeJavaObject0.getDefaultValue(class0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<Annotation> class0 = Annotation.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeError0, class0);
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(360.0);
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeNumber0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      int int0 = NativeJavaObject.getConversionWeight(importerTopLevel0, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      int int0 = NativeJavaObject.getConversionWeight(importerTopLevel0, class0);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      boolean boolean0 = NativeJavaObject.canConvert(uniqueTag0, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaObject0, class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      int int0 = NativeJavaObject.getConversionWeight(nativeJavaObject0, class0);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(class0, class0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Object> class0 = Object.class;
      int int0 = NativeJavaObject.getConversionWeight(class0, class0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Class<String> class0 = String.class;
      int int0 = NativeJavaObject.getConversionWeight(charBuffer0, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Byte byte0 = new Byte((byte)95);
      Class<Byte> class0 = Byte.class;
      int int0 = NativeJavaObject.getConversionWeight(byte0, class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      Integer integer0 = new Integer((-1675));
      int int0 = NativeJavaObject.getConversionWeight(integer0, class0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      int int0 = NativeJavaObject.getConversionWeight(boolean0, class0);
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      int int0 = NativeJavaObject.getConversionWeight((Object) null, class0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      String string0 = nativeJavaObject0.getClassName();
      assertEquals("JavaObject", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Context context0 = Context.enter();
      NativeString nativeString0 = new NativeString((CharSequence) null);
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeString0, false);
      Class<CharBuffer> class0 = CharBuffer.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass(scriptableObject0, class0);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeString0, true);
      // Undeclared exception!
      try { 
        nativeJavaClass0.get(100, (Scriptable) nativeGenerator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java class \"java.nio.CharBuffer\" has no public instance field or method named \"100\".
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeJavaClass0.delete("jE9%g");
      assertEquals("JavaClass", nativeJavaClass0.getClassName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Class<Object> class0 = Object.class;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = (NativeIterator.StopIteration)NativeJavaObject.coerceTypeImpl(class0, nativeIterator_StopIteration0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, delegator0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert org.mozilla.javascript.Delegator@1 to java.lang.annotation.Annotation
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, uniqueTag0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert org.mozilla.javascript.UniqueTag@0000000001 to java.lang.Short
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeJavaObject0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to java.nio.CharBuffer
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      Class<String> class1 = String.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class1, class0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class class1 = (Class)NativeJavaObject.coerceTypeImpl(class0, class0);
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, nativeJavaClass0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to org.mozilla.javascript.NativeJavaTopPackage
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Class<NativeCallSite> class0 = NativeCallSite.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, "toUTCString");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert toUTCString to org.mozilla.javascript.NativeCallSite
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      Float float0 = new Float(0.0F);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, float0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert 0.0 to org.mozilla.javascript.NativeJavaTopPackage
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Integer integer0 = new Integer((-1675));
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, integer0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert -1675 to java.lang.Byte
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(nativeArrayBuffer0, 8, (-2409));
      Class<Byte> class0 = Byte.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeFloat32Array0, 4, class0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert undefined to java.lang.Byte
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, (Object) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert null to short
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaTopPackage nativeJavaTopPackage1 = (NativeJavaTopPackage)NativeJavaObject.coerceTypeImpl(class0, nativeJavaTopPackage0);
      assertFalse(nativeJavaTopPackage1.isSealed());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceType(class0, boolean0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert true to org.mozilla.javascript.NativeJavaArray
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      NativeNumber nativeNumber0 = new NativeNumber((-1675));
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        NativeJavaObject.coerceTypeImpl(class0, charBuffer0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Cannot convert java.nio.HeapCharBuffer@0000000001 to java.lang.Short
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      Byte byte0 = new Byte((byte) (-32));
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, byte0);
      assertEquals((-32.0F), object0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Object object0 = NativeJavaObject.coerceTypeImpl(class0, "|A0d.Us^Nn%p0r|9");
      assertNotNull(object0);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      boolean boolean0 = NativeJavaObject.canConvert("", class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.delete(294);
      assertEquals("JavaObject", nativeJavaObject0.getClassName());
  }
}
