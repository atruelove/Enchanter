/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 01:53:32 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.Ref;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.SpecialRef;
import org.mozilla.javascript.typedarrays.NativeInt32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SpecialRef_ESTest extends SpecialRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeArray nativeArray0 = new NativeArray(200);
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeInt32Array0, 180, "error reporter", 0, nativeArray0);
      Ref ref0 = SpecialRef.createSpecial(context0, idFunctionObject0, idFunctionObject0, "__parent__");
      // Undeclared exception!
      try { 
        ref0.set(context0, (Object) idFunctionObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.SpecialRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        SpecialRef.createSpecial(context0, importerTopLevel0, (Object) null, "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"error reporter\" from null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(200);
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(8);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeInt32Array0, 170, "error reporter", 200, nativeArray0);
      Ref ref0 = SpecialRef.createSpecial(context0, idFunctionObject0, idFunctionObject0, "__parent__");
      // Undeclared exception!
      try { 
        ref0.set(context0, (Scriptable) nativeInt32Array0, (Object) idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cyclic __parent__ value not allowed.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
