/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 15:49:12 GMT 2018
 */

package org.mozilla.javascript.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.json.JsonParser;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt8Array;
import org.mozilla.javascript.typedarrays.NativeUint8Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonParser_ESTest extends JsonParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockException mockException0 = new MockException();
      JsonParser.ParseException jsonParser_ParseException0 = new JsonParser.ParseException(mockException0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(52);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("\n");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Empty JSON string
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("language version");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: l
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("tO9(IO7;&f");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: t
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(70);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("\"BiRNfn");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated string literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Context context0 = Context.enter();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      JsonParser jsonParser0 = new JsonParser(context0, nativeContinuation0);
      try { 
        jsonParser0.parseValue("\":;croRp \":8lF%l,W");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected end of stream at char 10
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      JsonParser jsonParser0 = new JsonParser(context0, nativeContinuation0);
      try { 
        jsonParser0.parseValue("{j|#/19_w+");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token in object literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(0);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("5.vg");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: 5.v
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("-DS)V");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: -D
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      JsonParser jsonParser0 = new JsonParser(context0, nativeJavaClass0);
      try { 
        jsonParser0.parseValue("[native code]\n");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: n
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      Object object0 = jsonParser0.parseValue("0");
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeInt8Array nativeInt8Array0 = new NativeInt8Array(nativeArrayBuffer0, 1, 7);
      JsonParser jsonParser0 = new JsonParser(context0, nativeInt8Array0);
      try { 
        jsonParser0.parseValue((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Input string may not be null
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(14);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("5.");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported number format: 5.
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(70);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("5.5v");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected end of stream at char 3
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array(14);
      JsonParser jsonParser0 = new JsonParser(context0, nativeUint8Array0);
      try { 
        jsonParser0.parseValue("[");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unterminated array literal
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = Context.enter();
      JsonParser jsonParser0 = new JsonParser(context0, (Scriptable) null);
      try { 
        jsonParser0.parseValue(" found ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected token: f
         //
         verifyException("org.mozilla.javascript.json.JsonParser", e);
      }
  }
}
