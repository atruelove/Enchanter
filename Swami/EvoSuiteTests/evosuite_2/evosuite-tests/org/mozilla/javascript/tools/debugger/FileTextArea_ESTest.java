/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 21:36:28 GMT 2018
 */

package org.mozilla.javascript.tools.debugger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.IllegalComponentStateException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseWheelEvent;
import java.text.AttributedCharacterIterator;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.event.PopupMenuEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.FileTextArea;
import org.mozilla.javascript.tools.debugger.FileWindow;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileTextArea_ESTest extends FileTextArea_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      fileTextArea0.select(4320);
      assertFalse(fileTextArea0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JScrollPane jScrollPane0 = new JScrollPane(fileTextArea0);
      fileTextArea0.setBounds(2410, 2410, 2410, 1);
      fileTextArea0.select(0);
      assertFalse(fileTextArea0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      fileTextArea0.setBounds(2410, 2410, 2410, 1);
      fileTextArea0.insert("FAILED ASSERTION: ", 1);
      // Undeclared exception!
      try { 
        fileTextArea0.select(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.FileTextArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      fileTextArea0.select(0);
      assertTrue(fileTextArea0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      PopupMenuEvent popupMenuEvent0 = new PopupMenuEvent(fileTextArea0);
      fileTextArea0.popupMenuWillBecomeVisible(popupMenuEvent0);
      assertFalse(fileTextArea0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      fileTextArea0.popupMenuWillBecomeInvisible((PopupMenuEvent) null);
      assertFalse(fileTextArea0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      PopupMenuEvent popupMenuEvent0 = new PopupMenuEvent(jViewport0);
      fileTextArea0.popupMenuCanceled(popupMenuEvent0);
      assertTrue(fileTextArea0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, 16, 0L, 1380, 0, 4299, 4320, 1998, 12, false, 1097, 0, 4299, 1970.0);
      fileTextArea0.mouseReleased(mouseWheelEvent0);
      assertTrue(fileTextArea0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, 1998, 1L, 4320, 1998, 0, 0, 0, 16, false, 4320, 0, 16);
      fileTextArea0.mousePressed(mouseWheelEvent0);
      assertEquals(16, mouseWheelEvent0.getWheelRotation());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, 1998, 1L, 4320, 1998, 0, 0, 0, 16, true, 4320, 0, 16);
      fileTextArea0.mouseExited(mouseWheelEvent0);
      assertTrue(mouseWheelEvent0.isPopupTrigger());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, 1998, (-479L), 4320, 1998, 14, 14, 0, 16, true, 4320, 14, 16);
      fileTextArea0.mouseEntered(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      KeyEvent keyEvent0 = new KeyEvent(fileTextArea0, 2, (-2234L), (-2060), (-2727), 'u', 0);
      fileTextArea0.keyTyped(keyEvent0);
      assertFalse(keyEvent0.isControlDown());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      KeyEvent keyEvent0 = new KeyEvent(fileTextArea0, (-57), 0, 1, (-57), 'G', 1);
      fileTextArea0.keyReleased(keyEvent0);
      assertEquals(0L, keyEvent0.getWhen());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      KeyEvent keyEvent0 = new KeyEvent(fileTextArea0, 288, 288, 288, 288, 'P');
      keyEvent0.setKeyCode(8);
      fileTextArea0.keyPressed(keyEvent0);
      assertTrue(keyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, 16, 0L, 1380, 0, 4299, 4320, 1998, 12, false, 1097, 0, 4299, 1970.0);
      fileTextArea0.mouseClicked(mouseWheelEvent0);
      assertEquals(4299, mouseWheelEvent0.getY());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      JViewport jViewport0 = new JViewport();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jViewport0, (-7), (-7), (-7), (-7), (-7), (-7), (-7), (-7), true, (-7), (-7), (-7));
      // Undeclared exception!
      try { 
        fileTextArea0.mousePressed(mouseWheelEvent0);
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      ActionEvent actionEvent0 = new ActionEvent(attributedCharacterIterator_Attribute0, 16, "rv*]|vG*", 2);
      fileTextArea0.actionPerformed(actionEvent0);
      assertTrue(fileTextArea0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      ActionEvent actionEvent0 = new ActionEvent("Clear Breakpoint", (-442), "Clear Breakpoint", (-442));
      // Undeclared exception!
      try { 
        fileTextArea0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.FileTextArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ActionEvent actionEvent0 = new ActionEvent("#)", 2, "Run", 0, 4);
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      // Undeclared exception!
      try { 
        fileTextArea0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.FileTextArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileTextArea fileTextArea0 = new FileTextArea((FileWindow) null);
      fileTextArea0.setBounds(5112, 1, 1, 1);
      ActionEvent actionEvent0 = new ActionEvent("Set Breakpoint", (-3859), "Set Breakpoint");
      // Undeclared exception!
      try { 
        fileTextArea0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.FileTextArea", e);
      }
  }
}
