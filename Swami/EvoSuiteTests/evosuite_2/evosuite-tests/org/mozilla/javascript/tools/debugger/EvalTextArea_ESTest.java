/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 22:18:36 GMT 2018
 */

package org.mozilla.javascript.tools.debugger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.KeyEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.MenuKeyEvent;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.EvalTextArea;
import org.mozilla.javascript.tools.debugger.SwingGui;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvalTextArea_ESTest extends EvalTextArea_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      evalTextArea0.write(";hv wYlYY10|");
      assertFalse(evalTextArea0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.INSERT;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent((-36), 715, documentEvent_EventType0);
      evalTextArea0.removeUpdate(abstractDocument_DefaultDocumentEvent0);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, 10, 10, 10, 10, '&');
      // Undeclared exception!
      try { 
        evalTextArea0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.EvalTextArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent((-2341), (-866), documentEvent_EventType0);
      evalTextArea0.removeUpdate(abstractDocument_DefaultDocumentEvent0);
      assertFalse(evalTextArea0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      evalTextArea0.postUpdateUI();
      assertFalse(evalTextArea0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, '\b', 2937, '\b', '\b', '\b');
      evalTextArea0.selectAll();
      evalTextArea0.keyTyped(keyEvent0);
      assertTrue(keyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, 1311, 0, 0, (-900), 'p');
      evalTextArea0.keyReleased(keyEvent0);
      assertFalse(evalTextArea0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[1];
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(evalTextArea0, 471, ':', 471, 40, ':', menuElementArray0, menuSelectionManager0);
      evalTextArea0.keyPressed(menuKeyEvent0);
      assertTrue(menuKeyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, 153, 153, 153, 153, 'R');
      keyEvent0.setKeyCode(38);
      evalTextArea0.keyPressed(keyEvent0);
      assertTrue(keyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      MenuElement[] menuElementArray0 = new MenuElement[12];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(evalTextArea0, (-52), (-52), (-52), (-52), 'f', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.setKeyCode(10);
      // Undeclared exception!
      try { 
        evalTextArea0.keyPressed(menuKeyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.tools.debugger.EvalTextArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.INSERT;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent((-36), 715, documentEvent_EventType0);
      evalTextArea0.removeUpdate(abstractDocument_DefaultDocumentEvent0);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, 36, 715, 36, 36, 'M');
      // Undeclared exception!
      try { 
        evalTextArea0.keyPressed(keyEvent0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad position: -36
         //
         verifyException("javax.swing.text.JTextComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      MenuElement[] menuElementArray0 = new MenuElement[8];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(evalTextArea0, 36, 36, 36, 36, 'l', menuElementArray0, menuSelectionManager0);
      evalTextArea0.keyTyped(menuKeyEvent0);
      evalTextArea0.keyPressed(menuKeyEvent0);
      assertTrue(menuKeyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      KeyEvent keyEvent0 = new KeyEvent(evalTextArea0, '\b', 2937, '\b', '\b', '\b');
      evalTextArea0.selectAll();
      evalTextArea0.keyPressed(keyEvent0);
      assertTrue(keyEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.INSERT;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent((-945), (-945), documentEvent_EventType0);
      evalTextArea0.insertUpdate(abstractDocument_DefaultDocumentEvent0);
      assertTrue(evalTextArea0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvalTextArea evalTextArea0 = new EvalTextArea((SwingGui) null);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = defaultStyledDocument0.new DefaultDocumentEvent(36, 36, documentEvent_EventType0);
      evalTextArea0.changedUpdate(abstractDocument_DefaultDocumentEvent0);
      assertTrue(evalTextArea0.getFocusTraversalKeysEnabled());
  }
}
