/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 22:34:15 GMT 2018
 */

package org.mozilla.javascript.tools.debugger.treetable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.text.Format;
import java.time.chrono.IsoEra;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.plaf.synth.SynthViewportUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.debugger.treetable.JTreeTable;
import org.mozilla.javascript.tools.debugger.treetable.TreeTableModel;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JTreeTable_ESTest extends JTreeTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      Integer integer0 = new Integer(3521);
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(treeTableModel0).getChildCount(any());
      doReturn(synthViewportUI0, synthViewportUI0, synthViewportUI0, synthViewportUI0, integer0).when(treeTableModel0).getRoot();
      doReturn(false, false, false, false, false).when(treeTableModel0).isLeaf(any());
      doReturn(2, 0).when(treeTableModel0).getColumnCount();
      doReturn((String) null).when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      jTreeTable_TreeTableCellRenderer0.setRowHeight(1853);
      assertFalse(jTreeTable_TreeTableCellRenderer0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.new TreeTableCellRenderer((TreeModel) null);
      jTreeTable_TreeTableCellRenderer0.setBounds(1, 1, 1, (-82));
      assertFalse(jTreeTable_TreeTableCellRenderer0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      jTreeTable_TreeTableCellRenderer0.paint(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.new TreeTableCellRenderer(defaultTreeModel0);
      Component component0 = jTreeTable_TreeTableCellRenderer0.getTableCellRendererComponent(jTreeTable0, defaultMutableTreeNode0, true, true, 3559, 3559);
      assertFalse(component0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IsoEra isoEra0 = IsoEra.CE;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, isoEra0, isoEra0).when(treeTableModel0).getRoot();
      doReturn(18, 18, 18, 18, 18).when(treeTableModel0).getColumnCount();
      doReturn("<.", "<.", "<.", "<.", "<.").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      Component component0 = jTreeTable_TreeTableCellRenderer0.getTableCellRendererComponent(jTreeTable0, "anchorSelectionPath", false, false, 18, 18);
      assertSame(component0, jTreeTable_TreeTableCellRenderer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(10, 10, true);
      Class<IsoEra> class0 = IsoEra.class;
      Class<Format.Field> class1 = Format.Field.class;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator_Attribute0, attributedCharacterIterator_Attribute0, attributedCharacterIterator_Attribute0, keyStroke0).when(treeTableModel0).getRoot();
      doReturn(true, true, true).when(treeTableModel0).isLeaf(any());
      doReturn(class0, class1, class0, class1, class1).when(treeTableModel0).getColumnClass(anyInt());
      doReturn(10, 10, 10, 10, 10).when(treeTableModel0).getColumnCount();
      doReturn("", "", "", "", "").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellRenderer jTreeTable_TreeTableCellRenderer0 = jTreeTable0.tree;
      JTreeTable.TreeTableCellEditor jTreeTable_TreeTableCellEditor0 = jTreeTable0.new TreeTableCellEditor();
      MouseEvent mouseEvent0 = new MouseEvent(jTreeTable_TreeTableCellRenderer0, (-1), 10, 0, 10, (-1), 10, (-1), (-1), true, 0);
      boolean boolean0 = jTreeTable_TreeTableCellEditor0.isCellEditable(mouseEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTreeTable.TreeTableCellEditor jTreeTable_TreeTableCellEditor0 = jTreeTable0.new TreeTableCellEditor();
      Component component0 = jTreeTable_TreeTableCellEditor0.getTableCellEditorComponent(jTreeTable0, jTreeTable0, false, (-1883), (-1883));
      assertFalse(component0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z").when(treeTableModel0).getRoot();
      doReturn(true, true, true).when(treeTableModel0).isLeaf(any());
      doReturn(746, 746, 746, 746, 746).when(treeTableModel0).getColumnCount();
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.selectAll();
      assertTrue(jTreeTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(746, 746);
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z", defaultTableModel0).when(treeTableModel0).getRoot();
      doReturn(true, true, true, true, true).when(treeTableModel0).isLeaf(any());
      doReturn(746, 746, 746, 746, 746).when(treeTableModel0).getColumnCount();
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.updateUI();
      assertFalse(jTreeTable0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      jTreeTable0.setRowHeight(33);
      assertFalse(jTreeTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(treeTableModel0).getRoot();
      doReturn(0).when(treeTableModel0).getColumnCount();
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      JTree jTree0 = jTreeTable0.getTree();
      assertFalse(jTree0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      TreeTableModel treeTableModel0 = mock(TreeTableModel.class, new ViolatedAssumptionAnswer());
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z").when(treeTableModel0).getRoot();
      doReturn(true, true, true).when(treeTableModel0).isLeaf(any());
      doReturn(class0).when(treeTableModel0).getColumnClass(anyInt());
      doReturn(746, 746, 746, 746, 746).when(treeTableModel0).getColumnCount();
      doReturn("i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z", "i|zS,z").when(treeTableModel0).getColumnName(anyInt());
      JTreeTable jTreeTable0 = new JTreeTable(treeTableModel0);
      int int0 = jTreeTable0.getEditingRow();
      assertEquals((-1), int0);
  }
}
