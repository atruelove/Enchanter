/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 23:40:01 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.ListIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.BaseFunction;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeIterator_ESTest extends NativeIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(1825);
      Iterator<Float> iterator0 = nativeFloat32Array0.iterator();
      NativeIterator.WrappedJavaIterator nativeIterator_WrappedJavaIterator0 = new NativeIterator.WrappedJavaIterator(iterator0, (Scriptable) null);
      Object object0 = nativeIterator_WrappedJavaIterator0.next();
      assertEquals(0.0F, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet0);
      ListIterator<Integer> listIterator0 = linkedList0.listIterator();
      NativeIterator.WrappedJavaIterator nativeIterator_WrappedJavaIterator0 = new NativeIterator.WrappedJavaIterator(listIterator0, nativeIterator_StopIteration0);
      Object object0 = nativeIterator_WrappedJavaIterator0.__iterator__(false);
      assertSame(object0, nativeIterator_WrappedJavaIterator0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      BaseFunction baseFunction0 = context0.typeErrorThrower;
      boolean boolean0 = nativeIterator_StopIteration0.hasInstance(baseFunction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      String string0 = nativeIterator_StopIteration0.getClassName();
      assertEquals("StopIteration", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Iterator<Integer> iterator0 = linkedList0.iterator();
      NativeIterator.WrappedJavaIterator nativeIterator_WrappedJavaIterator0 = new NativeIterator.WrappedJavaIterator(iterator0, nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_WrappedJavaIterator0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // null
         //
         verifyException("org.mozilla.javascript.NativeIterator$WrappedJavaIterator", e);
      }
  }
}
