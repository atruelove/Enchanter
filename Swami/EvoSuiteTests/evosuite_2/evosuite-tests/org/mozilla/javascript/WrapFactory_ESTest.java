/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 04:30:25 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeScript;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.WrapFactory;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeUint16Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WrapFactory_ESTest extends WrapFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      NativeUint16Array nativeUint16Array0 = new NativeUint16Array();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      wrapFactory0.wrapNewObject((Context) null, nativeUint16Array0, importerTopLevel0);
      assertTrue(wrapFactory0.isJavaPrimitiveWrap());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      Context context0 = Context.getCurrentContext();
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array();
      Class<IdFunctionObjectES6> class0 = IdFunctionObjectES6.class;
      // Undeclared exception!
      try { 
        wrapFactory0.wrapNewObject(context0, nativeUint32Array0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      NativeArray nativeArray0 = new NativeArray(110);
      Class<NativeIterator> class0 = NativeIterator.class;
      // Undeclared exception!
      try { 
        wrapFactory0.wrapJavaClass(context0, nativeArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("org.mozilla.javascript.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Float float0 = new Float((-74.3721486678));
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      Class<NativeScript> class0 = NativeScript.class;
      // Undeclared exception!
      try { 
        wrapFactory0.wrap(context0, (Scriptable) null, float0, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      Context context0 = Context.getCurrentContext();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      Class<Integer> class0 = Integer.TYPE;
      wrapFactory0.wrap(context0, nativeArrayBuffer0, class0, class0);
      assertTrue(wrapFactory0.isJavaPrimitiveWrap());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      assertTrue(wrapFactory0.isJavaPrimitiveWrap());
      
      wrapFactory0.setJavaPrimitiveWrap(false);
      assertFalse(wrapFactory0.isJavaPrimitiveWrap());
  }
}
