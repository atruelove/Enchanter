/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 04:25:08 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContextFactory_ESTest extends ContextFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      contextFactory_GlobalSetter0.setContextFactoryGlobal(contextFactory0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      contextFactory0.seal();
      assertTrue(contextFactory0.isSealed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.addListener(contextFactory_Listener0);
      contextFactory0.onContextReleased(context0);
      assertEquals(200, Context.VERSION_ES6);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      contextFactory0.onContextReleased(context0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.addListener(contextFactory_Listener0);
      contextFactory0.onContextCreated(context0);
      assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      contextFactory0.onContextCreated(context0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      contextFactory0.observeInstructionCount((Context) null, 5218);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      boolean boolean0 = contextFactory0.isSealed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.initGlobal(contextFactory0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ContextFactory.initGlobal((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      // Undeclared exception!
      try { 
        ContextFactory.initGlobal(contextFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.initApplicationClassLoader(classLoader0);
      assertFalse(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        contextFactory0.initApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        contextFactory0.initApplicationClassLoader((ClassLoader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // loader is null
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        contextFactory0.hasFeature(context0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 15);
      assertTrue(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 14);
      assertTrue(contextFactory0.hasExplicitGlobal());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 13);
      assertFalse(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      boolean boolean0 = contextFactory0.hasFeature(context0, 10);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 9);
      assertTrue(contextFactory0.hasExplicitGlobal());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 8);
      assertFalse(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = context0.stringIsCompilableUnit("language version");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = contextFactory0.hasFeature(context0, 1);
      assertFalse(boolean0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = ContextFactory.hasExplicitGlobal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      // Undeclared exception!
      try { 
        ContextFactory.getGlobalSetter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.initApplicationClassLoader(classLoader0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Class<String> class0 = String.class;
      Object object0 = ScriptableObject.getDefaultValue((Scriptable) importerTopLevel0, (Class<?>) class0);
      assertEquals("[object global]", object0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = contextFactory0.makeContext();
      Object object0 = contextFactory0.doTopCall(nativeContinuation0, context0, nativeContinuation0, nativeContinuation0, context0.emptyArgs);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.disableContextListening();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        contextFactory0.removeListener(contextFactory_Listener0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ContextFactory.GlobalSetter contextFactory_GlobalSetter0 = ContextFactory.getGlobalSetter();
      ContextFactory contextFactory0 = contextFactory_GlobalSetter0.getContextFactoryGlobal();
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction0).run(any(org.mozilla.javascript.Context.class));
      contextFactory0.call(contextAction0);
      assertTrue(contextFactory0.hasExplicitGlobal());
  }
}
