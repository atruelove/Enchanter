/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 16:29:36 GMT 2018
 */

package org.mozilla.javascript.xmlimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Symbol;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.TopLevel;
import org.mozilla.javascript.UniqueTag;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;
import org.mozilla.javascript.typedarrays.NativeUint32Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;
import org.mozilla.javascript.xml.XMLObject;
import org.mozilla.javascript.xmlimpl.Namespace;
import org.mozilla.javascript.xmlimpl.QName;
import org.mozilla.javascript.xmlimpl.XML;
import org.mozilla.javascript.xmlimpl.XMLLibImpl;
import org.mozilla.javascript.xmlimpl.XMLList;
import org.mozilla.javascript.xmlimpl.XMLName;
import org.mozilla.javascript.xmlimpl.XmlNode;
import org.mozilla.javascript.xmlimpl.XmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLObjectImpl_ESTest extends XMLObjectImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "error reporter");
      XML xML0 = new XML((XMLLibImpl) null, (Scriptable) null, (XMLObject) null, xmlNode0);
      XML xML1 = xMLList0.xmlFromNode(xmlNode0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Float float0 = new Float(0.0F);
      // Undeclared exception!
      try { 
        xMLList0.put((Context) null, (Object) float0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Object object0 = ScriptableObject.getProperty((Scriptable) importerTopLevel0, (-928));
      // Undeclared exception!
      try { 
        xMLList0.defineProperty("language version", object0, 907);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.String;
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.newXMLListFrom(topLevel_Builtins0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML((XMLLibImpl) null, (Scriptable) null, (XMLObject) null, xmlNode0);
      // Undeclared exception!
      try { 
        xMLList0.newXMLFromJs(xML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "error reporter");
      // Undeclared exception!
      try { 
        xMLList0.xmlFromNode(xmlNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML((XMLLibImpl) null, (Scriptable) null, xMLList0, xmlNode0);
      XMLName xMLName0 = XMLName.formStar();
      // Undeclared exception!
      try { 
        xML0.makeXmlFromString(xMLName0, "rx=cn2RO^No$T\"+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: null
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(2168);
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray(nativeArrayBuffer0, 0, 1855);
      XMLList xMLList0 = new XMLList(xMLLibImpl0, nativeUint8ClampedArray0, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "ArrayBuffer");
      QName qName0 = xMLList0.newQName(xmlNode_QName0);
      assertTrue(qName0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.newQName("error reporter", "", "Qn_,rW;?5ugQI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = Context.enter();
      NativeUint32Array nativeUint32Array0 = new NativeUint32Array();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      SymbolKey symbolKey0 = SymbolKey.MATCH;
      Object object0 = ScriptableObject.getProperty((Scriptable) nativeUint32Array0, (Symbol) symbolKey0);
      // Undeclared exception!
      try { 
        xMLList0.memberRef(context0, object0, (Object) null, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.memberRef(context0, (Object) "error reporter", 1761);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        xMLList0.memberRef(context0, (Object) nativeObject0, 14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.initPrototypeId(100);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 100
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        xMLList0.has(context0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML((XMLLibImpl) null, (Scriptable) null, xMLList0, xmlNode0);
      XMLLibImpl xMLLibImpl0 = xML0.getLib();
      assertNull(xMLLibImpl0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Object object0 = xMLList0.getFunctionProperty(context0, "contain;s");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML((XMLLibImpl) null, (Scriptable) null, xMLList0, xmlNode0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Object object0 = xML0.getFunctionProperty(context0, 160);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Class<XMLList> class0 = XMLList.class;
      Object object0 = xMLList0.getDefaultValue(class0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.get(context0, (Object) "contains");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) xMLList0, "", context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "XmlNode.Namespace [{}]");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("p^Wmxh*#MXnx,xI5[", "p^Wmxh*#MXnx,xI5[");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "BootstrapMethods");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "BootstrpMethods");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "Q6(-J3>'`$92/");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("G", "EAI=2c*4g+T");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      NativeObject nativeObject0 = new NativeObject();
      xMLList0.exportAsJSClass(3, nativeObject0, true);
      nativeObject0.defineOwnProperties(context0, xMLList0);
      assertEquals(8, Context.FEATURE_STRICT_VARS);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "7\"-SJkC+IR");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("", "QRVtIQ0zF");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("G", "bLK`z<I(");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "elements");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, true, true);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      XmlNode.QName xmlNode_QName0 = XmlNode.QName.create(xmlNode_Namespace0, "contains");
      XMLName xMLName0 = XMLName.create(xmlNode_QName0, false, false);
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("", "f2K`zI(");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("", "b&KIs(");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("", ":z_u)");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XMLName xMLName0 = XMLName.formProperty("", ":zu)");
      boolean boolean0 = xMLList0.hasOwnProperty(xMLName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.sealObject();
      assertEquals("object", importerTopLevel0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6((IdFunctionCall) null, context0, 0, "language version", 428, xMLList0);
      // Undeclared exception!
      try { 
        xMLList0.execIdCall(idFunctionObjectES6_0, context0, idFunctionObjectES6_0, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=0 MASTER=null
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      NativeObject nativeObject0 = new NativeObject();
      IdFunctionObject idFunctionObject0 = xMLList0.exportAsJSClass(3, nativeObject0, true);
      // Undeclared exception!
      try { 
        xMLList0.execIdCall(idFunctionObject0, context0, nativeObject0, nativeObject0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      Object object0 = xMLList0.equivalentValues(xmlNode0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeWith nativeWith0 = xMLList0.enterWith(scriptableObject0);
      assertEquals("With", nativeWith0.getClassName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(83);
      XMLList xMLList0 = new XMLList(xMLLibImpl0, nativeFloat32Array0, (XMLObject) null);
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "processingInstructions", "org.mozilla.javascript.WrappedException");
      XML xML0 = new XML(xMLLibImpl0, nativeFloat32Array0, xMLList0, xmlNode0);
      NativeWith nativeWith0 = xMLList0.enterDotQuery(xML0);
      assertEquals("With", nativeWith0.getClassName());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      // Undeclared exception!
      try { 
        xMLList0.ecmaToXml(uniqueTag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.ecmaEscapeAttributeValue("A`\"8-;>Z|>8&_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Context context0 = Context.enter();
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.delete(context0, (Object) xMLList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.delete("error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, scriptableObject0, (XMLObject) null, xmlNode0);
      Namespace[] namespaceArray0 = xML0.namespaceDeclarations();
      assertEquals(0, namespaceArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      XmlNode.Namespace xmlNode_Namespace0 = XmlNode.Namespace.GLOBAL;
      // Undeclared exception!
      try { 
        xMLList0.createNamespace(xmlNode_Namespace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      // Undeclared exception!
      try { 
        xMLList0.createEmptyXML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLObjectImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLList xMLList0 = new XMLList((XMLLibImpl) null, (Scriptable) null, (XMLObject) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Object object0 = xMLList0.addValues(context0, true, (Object) null);
      assertNotNull(object0);
  }
}
