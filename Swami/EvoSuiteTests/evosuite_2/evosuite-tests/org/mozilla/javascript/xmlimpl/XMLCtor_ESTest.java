/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 16:11:31 GMT 2018
 */

package org.mozilla.javascript.xmlimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.NativeArrayIterator;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeObject;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.typedarrays.NativeUint8Array;
import org.mozilla.javascript.typedarrays.NativeUint8ClampedArray;
import org.mozilla.javascript.xml.XMLObject;
import org.mozilla.javascript.xmlimpl.XML;
import org.mozilla.javascript.xmlimpl.XMLCtor;
import org.mozilla.javascript.xmlimpl.XMLLibImpl;
import org.mozilla.javascript.xmlimpl.XmlNode;
import org.mozilla.javascript.xmlimpl.XmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLCtor_ESTest extends XMLCtor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "]{8.g2|+");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 880, 8);
      xMLCtor0.setInstanceIdValue(4, "]{8.g2|+");
      assertEquals("function", xMLCtor0.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 8, 8);
      Class<NativeCall> class0 = NativeCall.class;
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(10, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 8, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(9, nativeUint8Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "inoreWhitespace", "inoreWhitespace");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlProcessor0, 13, 1);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(8, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createElement(xmlProcessor0, "]{8.g2|+", "]{8.g2|+");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 4, 8);
      Class<NativeCall> class0 = NativeCall.class;
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(6, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 0, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.initPrototypeId(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "ignpreWhitespace");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlProcessor0, 1, 1);
      boolean boolean0 = xMLCtor0.hasInstance((Scriptable) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "NT>\"bQVzc6_");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlProcessor0, 0, 8);
      Object object0 = xMLCtor0.getInstanceIdValue(4);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createEmpty(xmlProcessor0);
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 0, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "(tZ#e6ybD6alf0");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 13, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8Array nativeUint8Array0 = new NativeUint8Array();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "]{Y8.2+");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8Array0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, (Object) null, 13, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "66RtSE'un<vYaK");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8ClampedArray0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlNode0, 8, 6);
      // Undeclared exception!
      try { 
        xMLCtor0.getInstanceIdValue(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "|;-O/b/H}jy8][pf");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlProcessor0, 0, 8);
      // Undeclared exception!
      try { 
        ScriptableObject.getProperty((Scriptable) xMLCtor0, "prettyIndent");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "|;-O/b/H}jy8][pf");
      XML xML0 = new XML(xMLLibImpl0, (Scriptable) null, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, xmlProcessor0, 0, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.getAllIds();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeUint8ClampedArray nativeUint8ClampedArray0 = new NativeUint8ClampedArray();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "66RttE'6n<vY9K");
      XML xML0 = new XML(xMLLibImpl0, nativeUint8ClampedArray0, (XMLObject) null, xmlNode0);
      NativeArrayIterator nativeArrayIterator0 = new NativeArrayIterator(nativeUint8ClampedArray0, nativeUint8ClampedArray0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, nativeArrayIterator0, 2, 8);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        xMLCtor0.execIdCall(xMLCtor0, context0, (Scriptable) null, xML0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=2 MASTER=66RttE'6n<vY9K
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLLibImpl xMLLibImpl0 = mock(XMLLibImpl.class, new ViolatedAssumptionAnswer());
      NativeObject nativeObject0 = new NativeObject();
      XmlProcessor xmlProcessor0 = new XmlProcessor();
      XmlNode xmlNode0 = XmlNode.createText(xmlProcessor0, "error reporter");
      XML xML0 = new XML(xMLLibImpl0, nativeObject0, (XMLObject) null, xmlNode0);
      XMLCtor xMLCtor0 = new XMLCtor(xML0, "8Gos[JvJU)*WO.~", 6, 8);
      // Undeclared exception!
      try { 
        xMLCtor0.setInstanceIdValue(7, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.xmlimpl.XMLCtor", e);
      }
  }
}
