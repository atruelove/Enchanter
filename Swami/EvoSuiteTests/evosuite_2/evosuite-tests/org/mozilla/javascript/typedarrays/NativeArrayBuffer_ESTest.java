/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 01:01:59 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt16Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeArrayBuffer_ESTest extends NativeArrayBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(191);
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, "ArrayBuffer", 2, "ArrayBuffer", 4, nativeInt16Array0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.execIdCall(idFunctionObject0, context0, nativeArrayBuffer0, nativeInt16Array0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"ArrayBuffer\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.initPrototypeId(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeArrayBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(69);
      int int0 = nativeArrayBuffer0.getLength();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.getInstanceIdValue(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.getInstanceIdName(378);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 378
         //
         verifyException("org.mozilla.javascript.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      byte[] byteArray0 = nativeArrayBuffer0.getBuffer();
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(191);
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, "ArrayBuffer", 2, "ArrayBuffer", 4, nativeInt16Array0);
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer1 = (NativeArrayBuffer)nativeArrayBuffer0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArrayBuffer0, context0.emptyArgs);
      assertEquals(191, nativeArrayBuffer0.getLength());
      assertEquals(191, nativeArrayBuffer1.getLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer(150);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArrayBuffer0, "ArrayBuffer", (-3), 160);
      Object object0 = idFunctionObject0.call(context0, nativeArrayBuffer0, nativeArrayBuffer0, context0.emptyArgs);
      assertEquals(false, object0);
      assertEquals(150, nativeArrayBuffer0.getLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      Context context0 = Context.enter();
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6(nativeArrayBuffer0, context0, 4, "ArrayBuffer", 15, nativeArrayBuffer0);
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.execIdCall(idFunctionObjectES6_0, context0, idFunctionObjectES6_0, idFunctionObjectES6_0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=4 MASTER=org.mozilla.javascript.typedarrays.NativeArrayBuffer@4
         //
         verifyException("org.mozilla.javascript.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = null;
      try {
        nativeArrayBuffer0 = new NativeArrayBuffer((-2565));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // RangeError: Negative array length -2565
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeArrayBuffer nativeArrayBuffer0 = new NativeArrayBuffer();
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, "ArrayBuffer", 0, "ArrayBuffer", 4, nativeInt16Array0);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeArrayBuffer0.EMPTY_BUFFER.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeInt16Array0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeArrayBuffer", e);
      }
  }
}
