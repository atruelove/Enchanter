/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 00:54:57 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.typedarrays.NativeFloat32Array;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeFloat32Array_ESTest extends NativeFloat32Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(166);
      Float float0 = new Float((float) 4);
      // Undeclared exception!
      try { 
        nativeFloat32Array0.set((-41), float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeFloat32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      Object object0 = nativeFloat32Array0.js_get(1946);
      Object object1 = nativeFloat32Array0.js_set(1946, object0);
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      Context context0 = Context.enter();
      NativeFloat32Array.init(context0, nativeFloat32Array0, false);
      assertEquals("Float32Array", nativeFloat32Array0.getClassName());
      assertEquals(4, nativeFloat32Array0.getBytesPerElement());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(166);
      Float float0 = nativeFloat32Array0.get(8);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array();
      // Undeclared exception!
      try { 
        nativeFloat32Array0.get((-695));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeFloat32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeFloat32Array nativeFloat32Array0 = new NativeFloat32Array(512);
      Float float0 = new Float((float) 4);
      Float float1 = nativeFloat32Array0.set(2, float0);
      assertNull(float1);
  }
}
