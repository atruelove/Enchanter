/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 01:08:47 GMT 2018
 */

package org.mozilla.javascript.typedarrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.IdFunctionCall;
import org.mozilla.javascript.IdFunctionObject;
import org.mozilla.javascript.IdFunctionObjectES6;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.Symbol;
import org.mozilla.javascript.SymbolKey;
import org.mozilla.javascript.typedarrays.NativeArrayBuffer;
import org.mozilla.javascript.typedarrays.NativeInt16Array;
import org.mozilla.javascript.typedarrays.NativeInt32Array;
import org.mozilla.javascript.typedarrays.NativeTypedArrayView;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NativeInt32Array_ESTest extends NativeInt32Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      NativeArrayBuffer nativeArrayBuffer0 = NativeArrayBuffer.EMPTY_BUFFER;
      NativeInt16Array nativeInt16Array0 = new NativeInt16Array(nativeArrayBuffer0, 0, 0);
      SymbolKey symbolKey0 = SymbolKey.MATCH;
      Object object0 = ScriptableObject.getProperty((Scriptable) nativeInt16Array0, (Symbol) symbolKey0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeInt16Array0, object0, 13, 420);
      // Undeclared exception!
      try { 
        nativeInt32Array0.realThis(nativeArrayBuffer0, idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"\" called on incompatible object.
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Object object0 = nativeInt32Array0.js_set((-938), "kW@T");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(2147);
      Integer integer0 = nativeInt32Array0.set(2, (Integer) nativeInt32Array0.UNINITIALIZED_CONST);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Object object0 = nativeInt32Array0.js_get(0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      Context context0 = Context.enter();
      NativeInt32Array.init(context0, nativeInt32Array0, true);
      assertEquals(4, nativeInt32Array0.getBytesPerElement());
      assertEquals("Int32Array", nativeInt32Array0.getClassName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(2147);
      Integer integer0 = nativeInt32Array0.get(1);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array((NativeArrayBuffer) null, 0, 2576);
      NativeTypedArrayView nativeTypedArrayView0 = nativeInt32Array0.construct((NativeArrayBuffer) null, 0, (-1002));
      IdFunctionObjectES6 idFunctionObjectES6_0 = new IdFunctionObjectES6((IdFunctionCall) null, (Object) null, 354, "7NMJ)JeTvqZlH1", 0, nativeTypedArrayView0);
      NativeTypedArrayView nativeTypedArrayView1 = nativeInt32Array0.realThis(nativeTypedArrayView0, idFunctionObjectES6_0);
      assertEquals(0, nativeTypedArrayView1.getByteOffset());
      assertEquals((-1002), nativeTypedArrayView1.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array(0);
      // Undeclared exception!
      try { 
        nativeInt32Array0.set(0, (Integer) nativeInt32Array0.CONST);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NativeInt32Array nativeInt32Array0 = new NativeInt32Array();
      // Undeclared exception!
      try { 
        nativeInt32Array0.get(164);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.typedarrays.NativeInt32Array", e);
      }
  }
}
