/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 08:18:14 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.EvaluatorException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvaluatorException_ESTest extends EvaluatorException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("`/Rq", "`/Rq", 3);
      String string0 = evaluatorException0.getSourceName();
      assertEquals(0, evaluatorException0.columnNumber());
      assertNotNull(string0);
      assertEquals(3, evaluatorException0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("`/Rq", "`/Rq", 3);
      String string0 = evaluatorException0.getLineSource();
      assertNull(string0);
      assertEquals(3, evaluatorException0.getLineNumber());
      assertEquals(0, evaluatorException0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("`/Rq", "`/Rq", 3);
      int int0 = evaluatorException0.getLineNumber();
      assertEquals(3, int0);
      assertEquals(0, evaluatorException0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("`/Rq", "`/Rq", 3);
      int int0 = evaluatorException0.getColumnNumber();
      assertEquals(3, evaluatorException0.getLineNumber());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvaluatorException evaluatorException0 = new EvaluatorException("");
  }
}
