/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:58:13 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.ContinueStatement;
import org.mozilla.javascript.ast.GeneratorExpressionLoop;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratorExpressionLoop_ESTest extends GeneratorExpressionLoop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      ContinueStatement continueStatement0 = new ContinueStatement();
      generatorExpressionLoop0.iterator = (AstNode) continueStatement0;
      generatorExpressionLoop0.setIteratedObject(continueStatement0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      generatorExpressionLoop0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tFOR -1 1\n-1\t  CONTINUE 0 1\n-1\t  CONTINUE 0 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("-1\tFOR -1 1\n-1\t  CONTINUE 0 1\n-1\t  CONTINUE 0 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      Block block0 = new Block(0);
      generatorExpressionLoop0.iterator = (AstNode) block0;
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.toSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      // Undeclared exception!
      try { 
        generatorExpressionLoop0.setIsForEach(false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // this node type does not support for each
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(0, 0);
      assertEquals(27, Node.LAST_PROP);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop((-2251));
      assertEquals(2, Node.SPECIALCALL_WITH);
  }
}
