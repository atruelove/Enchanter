/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:52:01 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.BreakStatement;
import org.mozilla.javascript.ast.EmptyExpression;
import org.mozilla.javascript.ast.ErrorNode;
import org.mozilla.javascript.ast.ExpressionStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExpressionStatement_ESTest extends ExpressionStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ErrorNode errorNode0 = new ErrorNode((-1792));
      ExpressionStatement expressionStatement0 = new ExpressionStatement(errorNode0);
      StringBuilder stringBuilder0 = new StringBuilder(26);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      expressionStatement0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1792\tEXPR_VOID -1792 1\n-1792\t  ERROR 0 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmptyExpression emptyExpression0 = new EmptyExpression((-544));
      ExpressionStatement expressionStatement0 = new ExpressionStatement((-544), (-544), emptyExpression0);
      String string0 = expressionStatement0.toSource(0);
      assertEquals(";\n", string0);
      assertEquals(134, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BreakStatement breakStatement0 = new BreakStatement(0);
      ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0, true);
      boolean boolean0 = expressionStatement0.hasSideEffects();
      assertTrue(boolean0);
      assertEquals(135, expressionStatement0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExpressionStatement expressionStatement0 = new ExpressionStatement(135, 830);
      // Undeclared exception!
      try { 
        expressionStatement0.debugPrint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.ExpressionStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExpressionStatement expressionStatement0 = new ExpressionStatement();
      expressionStatement0.getExpression();
      assertEquals(134, expressionStatement0.getType());
  }
}
