/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 19:12:59 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.InfixExpression;
import org.mozilla.javascript.ast.VariableInitializer;
import org.mozilla.javascript.ast.XmlExpression;
import org.mozilla.javascript.ast.XmlLiteral;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlExpression_ESTest extends XmlExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(3834, 3834);
      XmlLiteral xmlLiteral0 = new XmlLiteral(0);
      xmlExpression0.setExpression(xmlLiteral0);
      StringBuilder stringBuilder0 = new StringBuilder("  {}");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      xmlExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("  {}3834\tXML 3834 3834\n0\t  XML -3834 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("  {}3834\tXML 3834 3834\n0\t  XML -3834 1\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InfixExpression infixExpression0 = new InfixExpression();
      XmlExpression xmlExpression0 = new XmlExpression(43, infixExpression0);
      xmlExpression0.setIsXmlAttribute(false);
      assertFalse(xmlExpression0.isXmlAttribute());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression(3834, 3834);
      boolean boolean0 = xmlExpression0.isXmlAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VariableInitializer variableInitializer0 = new VariableInitializer();
      XmlExpression xmlExpression0 = new XmlExpression(4244, variableInitializer0);
      // Undeclared exception!
      try { 
        xmlExpression0.toSource(3477);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.VariableInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression((-1236));
      assertEquals(26, Node.DESTRUCTURING_SHORTHAND);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlExpression xmlExpression0 = new XmlExpression();
      AstNode astNode0 = xmlExpression0.getExpression();
      assertNull(astNode0);
  }
}
