/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:27:56 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.GeneratorExpression;
import org.mozilla.javascript.ast.GeneratorExpressionLoop;
import org.mozilla.javascript.ast.NumberLiteral;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratorExpression_ESTest extends GeneratorExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression((-1867));
      NumberLiteral numberLiteral0 = new NumberLiteral(13, 10);
      generatorExpression0.setResult(numberLiteral0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "(<null>)");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      generatorExpression0.setFilter(numberLiteral0);
      generatorExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("(<null>)-1867\tGENEXPR -1867 1\n13\t  NUMBER 1880 10\n13\t  NUMBER 1880 10\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("163", generatorExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      NumberLiteral numberLiteral0 = new NumberLiteral(13);
      generatorExpression0.setResult(numberLiteral0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      generatorExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-1\tGENEXPR -1 1\n13\t  NUMBER 14 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-1), generatorExpression0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      NumberLiteral numberLiteral0 = new NumberLiteral(13);
      generatorExpression0.setResult(numberLiteral0);
      generatorExpression0.setFilter(numberLiteral0);
      String string0 = generatorExpression0.toSource();
      assertEquals("(<null> if (<null>))", string0);
      assertEquals((-1), generatorExpression0.getFilterRp());
      assertEquals("163", generatorExpression0.toString());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals((-1), generatorExpression0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      NumberLiteral numberLiteral0 = new NumberLiteral();
      generatorExpression0.setResult(numberLiteral0);
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(0);
      generatorExpression0.addLoop(generatorExpressionLoop0);
      // Undeclared exception!
      try { 
        generatorExpression0.toSource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(318, 634);
      generatorExpression0.setIfPosition(634);
      assertEquals(634, generatorExpression0.getIfPosition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      generatorExpression0.setFilterRp(153);
      assertEquals(153, generatorExpression0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(0, 0);
      generatorExpression0.setFilterLp((-1));
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals(163, generatorExpression0.getType());
      assertEquals((-1), generatorExpression0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(0, 0);
      generatorExpression0.getResult();
      assertEquals((-1), generatorExpression0.getFilterRp());
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals("163", generatorExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      generatorExpression0.getLoops();
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals((-1), generatorExpression0.getFilterRp());
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals(163, generatorExpression0.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(318, 634);
      int int0 = generatorExpression0.getIfPosition();
      assertEquals((-1), generatorExpression0.getFilterRp());
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals((-1), int0);
      assertEquals("163", generatorExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(318, 634);
      int int0 = generatorExpression0.getFilterRp();
      assertEquals((-1), int0);
      assertEquals("163", generatorExpression0.toString());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals((-1), generatorExpression0.getFilterLp());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression(16, (-1677));
      int int0 = generatorExpression0.getFilterLp();
      assertEquals((-1), int0);
      assertEquals("163", generatorExpression0.toString());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals((-1), generatorExpression0.getFilterRp());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      generatorExpression0.getFilter();
      assertEquals((-1), generatorExpression0.getFilterRp());
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals("163", generatorExpression0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression((-1867));
      NumberLiteral numberLiteral0 = new NumberLiteral(13, 10);
      generatorExpression0.setResult(numberLiteral0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "(<null>)");
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop(2339, 12);
      generatorExpression0.addLoop(generatorExpressionLoop0);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      // Undeclared exception!
      try { 
        generatorExpression0.visit(astNode_DebugPrintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.GeneratorExpressionLoop", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeneratorExpression generatorExpression0 = new GeneratorExpression();
      LinkedList<GeneratorExpressionLoop> linkedList0 = new LinkedList<GeneratorExpressionLoop>();
      GeneratorExpressionLoop generatorExpressionLoop0 = new GeneratorExpressionLoop();
      linkedList0.add(generatorExpressionLoop0);
      generatorExpression0.setLoops(linkedList0);
      assertEquals((-1), generatorExpression0.getIfPosition());
      assertEquals((-1), generatorExpression0.getFilterLp());
      assertEquals(163, generatorExpression0.getType());
      assertEquals((-1), generatorExpression0.getFilterRp());
  }
}
