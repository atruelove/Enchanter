/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 17:51:21 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.EmptyStatement;
import org.mozilla.javascript.ast.ErrorNode;
import org.mozilla.javascript.ast.ForLoop;
import org.mozilla.javascript.ast.UnaryExpression;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UnaryExpression_ESTest extends UnaryExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmptyStatement emptyStatement0 = new EmptyStatement(15);
      UnaryExpression unaryExpression0 = new UnaryExpression(12, (-862), emptyStatement0, true);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      unaryExpression0.visit(astNode_DebugPrintVisitor0);
      assertEquals(0, emptyStatement0.getPosition());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorNode errorNode0 = new ErrorNode();
      UnaryExpression unaryExpression0 = new UnaryExpression(0, (-1034), errorNode0, true);
      unaryExpression0.setOperator(27);
      String string0 = unaryExpression0.toSource((-3270));
      assertEquals(0, errorNode0.getPosition());
      assertEquals("~", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression(31);
      unaryExpression0.setOperator(31);
      // Undeclared exception!
      try { 
        unaryExpression0.toSource(11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.UnaryExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression();
      // Undeclared exception!
      try { 
        unaryExpression0.setOperator(3646);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid token: 3646
         //
         verifyException("org.mozilla.javascript.ast.UnaryExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression();
      unaryExpression0.setIsPostfix(true);
      assertTrue(unaryExpression0.isPostfix());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ForLoop forLoop0 = new ForLoop(127, 1257);
      UnaryExpression unaryExpression0 = new UnaryExpression(127, 127, forLoop0);
      boolean boolean0 = unaryExpression0.isPostfix();
      assertEquals(0, forLoop0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression(0);
      int int0 = unaryExpression0.getOperator();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression((-4948), (-4948));
      AstNode astNode0 = unaryExpression0.getOperand();
      assertNull(astNode0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression();
      boolean boolean0 = unaryExpression0.isPrefix();
      assertTrue(boolean0);
  }
}
