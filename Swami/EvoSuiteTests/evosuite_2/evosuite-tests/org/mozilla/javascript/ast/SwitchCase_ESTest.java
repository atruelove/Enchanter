/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 18:58:41 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.Block;
import org.mozilla.javascript.ast.Label;
import org.mozilla.javascript.ast.SwitchCase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SwitchCase_ESTest extends SwitchCase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(118, (-3790));
      Block block0 = new Block(17);
      switchCase0.addStatement(block0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      switchCase0.visit(astNode_DebugPrintVisitor0);
      assertEquals("118\tCASE 118 -100\n17\t  BLOCK -101 1\n", astNode_DebugPrintVisitor0.toString());
      assertEquals((-100), switchCase0.getLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(118, (-3790));
      Block block0 = new Block(17);
      switchCase0.setExpression(block0);
      StringBuilder stringBuilder0 = new StringBuilder();
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      switchCase0.visit(astNode_DebugPrintVisitor0);
      assertFalse(switchCase0.isDefault());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      Label label0 = new Label(1, 5);
      switchCase0.addStatement(label0);
      switchCase0.toSource(190);
      assertEquals(7, switchCase0.getLength());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(118, (-3790));
      Block block0 = new Block(17);
      switchCase0.setExpression(block0);
      switchCase0.toSource(982);
      assertFalse(switchCase0.isDefault());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(0, 0);
      boolean boolean0 = switchCase0.isDefault();
      assertEquals("116", switchCase0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(0, 0);
      switchCase0.getStatements();
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase(0, 0);
      switchCase0.getExpression();
      assertEquals(116, switchCase0.getType());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase((-1));
      assertEquals("116", switchCase0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SwitchCase switchCase0 = new SwitchCase();
      LinkedList<AstNode> linkedList0 = new LinkedList<AstNode>();
      linkedList0.add((AstNode) switchCase0);
      switchCase0.setStatements(linkedList0);
      switchCase0.setStatements(linkedList0);
      assertEquals(0, switchCase0.getPosition());
  }
}
