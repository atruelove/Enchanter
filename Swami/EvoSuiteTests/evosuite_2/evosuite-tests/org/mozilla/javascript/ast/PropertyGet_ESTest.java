/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 31 19:14:30 GMT 2018
 */

package org.mozilla.javascript.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ast.AstNode;
import org.mozilla.javascript.ast.ExpressionStatement;
import org.mozilla.javascript.ast.Name;
import org.mozilla.javascript.ast.NumberLiteral;
import org.mozilla.javascript.ast.PropertyGet;
import org.mozilla.javascript.ast.ReturnStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyGet_ESTest extends PropertyGet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberLiteral numberLiteral0 = new NumberLiteral(0);
      Name name0 = new Name(0, 103);
      PropertyGet propertyGet0 = new PropertyGet(numberLiteral0, name0, 0);
      propertyGet0.setProperty(name0);
      assertEquals("33", propertyGet0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NumberLiteral numberLiteral0 = new NumberLiteral(3225, "", (-1966.409444));
      Name name0 = new Name();
      PropertyGet propertyGet0 = new PropertyGet(numberLiteral0, name0);
      String string0 = propertyGet0.toSource(6);
      assertEquals(33, propertyGet0.getType());
      assertEquals("            .<null>", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReturnStatement returnStatement0 = new ReturnStatement(0);
      Name name0 = new Name(3);
      PropertyGet propertyGet0 = new PropertyGet((-2725), 83, returnStatement0, name0);
      StringBuilder stringBuilder0 = new StringBuilder(1);
      AstNode.DebugPrintVisitor astNode_DebugPrintVisitor0 = new AstNode.DebugPrintVisitor(stringBuilder0);
      propertyGet0.visit(astNode_DebugPrintVisitor0);
      assertEquals("-2725\tGETPROP -2725 83\n0\t  RETURN 2725 1\n3\t  NAME 2728 1 null\n", astNode_DebugPrintVisitor0.toString());
      assertEquals("33", propertyGet0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PropertyGet propertyGet0 = new PropertyGet(0, 0);
      ExpressionStatement expressionStatement0 = new ExpressionStatement(145, 2, propertyGet0);
      propertyGet0.setTarget(expressionStatement0);
      assertEquals("33", propertyGet0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PropertyGet propertyGet0 = new PropertyGet(670);
      assertEquals(33, propertyGet0.getType());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PropertyGet propertyGet0 = new PropertyGet();
      // Undeclared exception!
      try { 
        propertyGet0.toSource(2701);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ast.PropertyGet", e);
      }
  }
}
