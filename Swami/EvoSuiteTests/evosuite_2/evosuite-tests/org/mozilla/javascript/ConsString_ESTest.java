/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 03:33:44 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ConsString;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConsString_ESTest extends ConsString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConsString consString0 = new ConsString("[r.mozilla.javasript.ConsStJng", "[r.mozilla.javasript.ConsStJng");
      // Undeclared exception!
      try { 
        consString0.subSequence('a', 'a');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('N');
      ConsString consString0 = new ConsString(charBuffer0, charBuffer0);
      ConsString consString1 = new ConsString(consString0, consString0);
      // Undeclared exception!
      try { 
        consString1.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.nio.HeapCharBuffer cannot be cast to java.lang.String
         //
         verifyException("org.mozilla.javascript.ConsString", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConsString consString0 = new ConsString("[r.mozilla.javasript.ConsStJng", "[r.mozilla.javasript.ConsStJng");
      char char0 = consString0.charAt(44);
      assertEquals('a', char0);
      assertEquals(60, consString0.length());
  }
}
