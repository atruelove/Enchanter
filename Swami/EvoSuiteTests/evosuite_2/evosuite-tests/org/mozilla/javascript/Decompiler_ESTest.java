/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 01 03:01:31 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.Decompiler;
import org.mozilla.javascript.UintMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("(J\u0000\u5AF3\u107A\u4000'\u0000", 1, uintMap0);
      assertEquals("\n100000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionEnd((-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("compileFunction only accepts source with single JS function: ");
      decompiler0.addRegexp("compileFunction only accepts source with single JS function: ", "Cannot capture continuation from JavaScript code not called directly by executeScriptWithContinuations or caJlFunctionWithCntinuations");
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("n\u0231)\u001Forg.mozilla.javascript.Function0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000n\u0000\u00150\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\uC083\u0F8D\u9A3A\u3246\u0098\u0001", 2145386496, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("n\u03E2)\u001Forg.mozilla.javascript.Function0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000n\u0000\f0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(S\u0000", 0, uintMap0);
      assertEquals("\nfunction \"org.mozilla.javascript.Function\"/7EKL9TVc|ks,/7EKL9TVc|ks,function function  == /7EKL9TVc|ks,/7EKL9TVc|ks,0\n", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\n && ++ >>= \n", 126, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("(D\u444B\u1AE4\uD6E2\uEF50(S\u00020\u001E/qauY/lHc9~g%Ii/qauY/lHc9~g%Ii\t", 3, uintMap0);
      assertEquals("1e+212/qauY/lHc9~g%Ii/qauY/lHc9~g%Ii | ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("jIgf.lW", 3725, uintMap0);
      assertEquals("\n && yield  ?  %=  === --}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile(")\u001Forg.mozilla.javascript.Function0 /)@.zrKXuAIno\"Jxp&/7EKL9TVc|ks,0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000\u00150\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\uC083\u0F8D\u9A3A\u3246h\u0001", 2145386496, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 55
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UintMap uintMap0 = new UintMap(0);
      // Undeclared exception!
      try { 
        Decompiler.decompile(".C`-tk'Chf}s{vt<)", 139, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("_mToK8FLrSv", 412, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("TIc^xk]%[-", (-28), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("r(FKp?zUy+!]^", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("5y'=", 153, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UintMap uintMap0 = new UintMap(144);
      // Undeclared exception!
      try { 
        Decompiler.decompile("tW2tl*195-~ ECp", 144, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("~d}", 2, uintMap0);
      assertEquals("finally  *= catch ", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("SlRFOwLL9^:=", (-360), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UintMap uintMap0 = new UintMap(0);
      String string0 = Decompiler.decompile("while ", 0, uintMap0);
      assertEquals("\ndo  :  || -- /= typeof \n", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1049);
      // Undeclared exception!
      try { 
        Decompiler.decompile("debugger;\n", 1049, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("qg4$}.pQz?^6", 2094, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 36
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("0\u0001)\u001Forg.mozilla.javascript.Function0 /)@.zrKXuAIno\"Jxp&/7EKL9TVc|ks,0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u00020\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\uC083\u0F8D\u9A3A\u3246h\u0001", 2145386496, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      String string0 = Decompiler.decompile("\u00A7(S\u0000\u0004\u0001'\u0001\u00A7)\u0000", 145, uintMap0);
      assertEquals("\u00A7\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A7(S\u0000\u0001\u0001\u0000", 145, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 0
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("/UTgng(!<MqsrD0", 1726, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("WXYVZKk%C<1B&", 124, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 75
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("X[Tm#<{d:", 14, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("endsWv", 1023, uintMap0);
      assertEquals(" /= function switch } while ", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("VWH9n03OBU=B", 159, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 72
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UintMap uintMap0 = new UintMap(50);
      String string0 = Decompiler.decompile("|Vz", (-1276), uintMap0);
      assertEquals("\nwith {continue\n", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A7(S\u00000\b/\u00A7/w2(g0\u000E\u0001\u0000'\u0001\u00A7", 145, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 0
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("+d~^WWyQ>c9MJv#aI5", 156, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 81
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("s,pdf_", (-170), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 112
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("ZyZ-{E-Ck-F", (-929), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 69
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile(")\u001Forg.mozilla.javascript.Function0!/y^sb<e#Yq\"kL_VAI$7i/7EKL9TVc|ks,0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000n\u0000\u000B0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\uC083\u0F8D\u9A3A\u3246\u0098\u0001", 2145386496, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      uintMap0.put(1, 1);
      String string0 = Decompiler.decompile("catch ", 1, uintMap0);
      assertEquals("\n  -=  >>>= case  -=  : typeof ", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("\u0089\u0001)\u000F^eI%-WiuOaQ_GSQn\u0001n\u00000\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,\u00100\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(S\u0000", 3439, uintMap0);
      assertEquals("\"^eI%-WiuOaQ_GSQ\"function function /7EKL9TVc|ks,/7EKL9TVc|ks, > /7EKL9TVc|ks,/7EKL9TVc|ks,0", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("n\rn\u03E2)\u001Forg.mozilla.javascript.Function0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000n\u0000\u0001\u00120\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\u4035\u81F6\u43CC\uC1E2", 19, uintMap0);
      assertEquals("function function \"org.mozilla.javascript.Function\"/7EKL9TVc|ks,/7EKL9TVc|ks,function function void  << /7EKL9TVc|ks,/7EKL9TVc|ks,21.50766395329436", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("org.mozilla.javascript.Function");
      decompiler0.addName("n\rn\u03E2)\u001Forg.mozilla.javascript.Function0\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,n\u0000n\u0000\u0001\u00120\u001A/7EKL9TVc|ks,/7EKL9TVc|ks,(D\u4035\u81F6\u43CC\uC1E2");
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(330);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("org.mozilla.javascript.Function");
      decompiler0.addRegexp(")@.zrKXuAIno\"Jxp&", "7EKL9TVc|ks,");
      decompiler0.addRegexp("7EKL9TVc|ks,", "7EKL9TVc|ks,");
      decompiler0.markFunctionStart(0);
      decompiler0.addRegexp("7EKL9TVc|ks,", "7EKL9TVc|ks,");
      decompiler0.addNumber((-609.9441418215363));
      assertEquals(3, Decompiler.CASE_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(2);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1.0E14);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL(1775);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addEOL(48);
      assertEquals(3, Decompiler.CASE_GAP_PROP);
  }
}
